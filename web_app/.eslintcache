[{"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\index.js":"1","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\reportWebVitals.js":"2","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\i18nextConf.js":"3","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\App\\App.js":"4","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\theme.js":"5","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\HomePage\\HomePage.js":"6","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\not_found.js":"7","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\PrivateRoute.js":"8","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\SignupPage\\SignupPage.js":"9","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\theme-context.js":"10","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\user-context.js":"11","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\LoginPage\\LoginPage.js":"12","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\ResetPage\\ResetPage.js":"13","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\PreEnrolmentPage\\PreEnrolmentPage.js":"14","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\HomePage\\routes.js":"15","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\toolbar.home.component.js":"16","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\loading-context.js":"17","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\tab-context.js":"18","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\confirm-context.js":"19","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\config.js":"20","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\theme_button.component.js":"21","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\translate_button.component.js":"22","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\searchbar.component.js":"23","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\handle-response.js":"24","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\on-mount.js":"25","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\normik.js":"26","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\needs.js":"27","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\auth.service.js":"28","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\signup.service.js":"29","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\pre-enrolment.service.js":"30","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_yup\\validators.js":"31","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\dirtytextfield.component.js":"32","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\contry-select.component.js":"33","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\relations.js":"34","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\education.js":"35","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\empty_objects.js":"36","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\password-reset.service.js":"37","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\attendance.component.js":"38","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_translations\\utils.js":"39","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\password_regex.js":"40","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\auth-header.js":"41","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\countries.js":"42","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\email.component.js":"43","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.component.js":"44","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.component.js":"45","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.component.js":"46","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.component.js":"47","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\payments.component.js":"48","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.component.js":"49","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\courses.service.js":"50","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\emailTo.component.js":"51","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_students.service.js":"52","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_attendance.service.js":"53","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list_main.component.js":"54","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.component.js":"55","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\students.service.js":"56","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\god.service.js":"57","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list.component.js":"58","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\ExportSearchChip.component.js":"59","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.component.js":"60","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\payments.service.js":"61","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.teacher.component.js":"62","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\teachers.service.js":"63","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\needs_selection.component.js":"64","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\users.service.js":"65","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.user.component.js":"66","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\userInvites.service.js":"67","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.room.component.js":"68","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\rooms.service.js":"69","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\service-factory.js":"70","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\tab.js":"71","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.labels.component.js":"72","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\subresource_add_delete.component.js":"73","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.schedule.component.js":"74","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.details.component.js":"75","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_rooms.service.js":"76","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_teachers.service.js":"77","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\scheduler.component.js":"78","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\teachers_courses.service.js":"79","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.teacher.schedule.component.js":"80","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.teacher.details.component.js":"81","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\dirty_checkbox.js":"82","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\needs.js":"83","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.user.permissions.component.js":"84","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.user.userperson.component.js":"85","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.room.details.component.js":"86","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.room.schedule.component.js":"87","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\set_operations.js":"88","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\schedules.service.js":"89","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\calendar.service.js":"90","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\formik_discard_button.js":"91","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\formik_save_button.js":"92","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_skeletons\\iconButton.js":"93","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\user_needs.service.js":"94","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\price_term.js":"95","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list_terciary.component.js":"96","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list_secondary.component.js":"97","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\labels_selection.component.js":"98","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_labels.service.js":"99","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\student_courses.service.js":"100","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.schedule.component.js":"101","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.guardian.component.js":"102","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.attendee.component.js":"103","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.payments.component.js":"104","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\payment_methods.js":"105","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\bulkEmail.service.js":"106","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\guardians.service.js":"107","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.payments.payment.component.js":"108","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\emailsGrants.service.js":"109","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\emailsEnrollment.service.js":"110","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\student_guardians.service.js":"111","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.person.component.js":"112","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\emailsReceipts.service.js":"113"},{"size":1114,"mtime":1626619544787,"results":"114","hashOfConfig":"115"},{"size":375,"mtime":1626619544788,"results":"116","hashOfConfig":"115"},{"size":1264,"mtime":1626619544787,"results":"117","hashOfConfig":"115"},{"size":2552,"mtime":1626619544735,"results":"118","hashOfConfig":"115"},{"size":1879,"mtime":1626619544789,"results":"119","hashOfConfig":"115"},{"size":11639,"mtime":1626619544737,"results":"120","hashOfConfig":"115"},{"size":608,"mtime":1626619544751,"results":"121","hashOfConfig":"115"},{"size":704,"mtime":1626619544742,"results":"122","hashOfConfig":"115"},{"size":10849,"mtime":1626619544741,"results":"123","hashOfConfig":"115"},{"size":232,"mtime":1626619544765,"results":"124","hashOfConfig":"115"},{"size":243,"mtime":1626619544766,"results":"125","hashOfConfig":"115"},{"size":9847,"mtime":1626619544739,"results":"126","hashOfConfig":"115"},{"size":8437,"mtime":1626619544740,"results":"127","hashOfConfig":"115"},{"size":53547,"mtime":1627115202755,"results":"128","hashOfConfig":"115"},{"size":2206,"mtime":1626619544737,"results":"129","hashOfConfig":"115"},{"size":5612,"mtime":1626619544761,"results":"130","hashOfConfig":"115"},{"size":256,"mtime":1626619544764,"results":"131","hashOfConfig":"115"},{"size":222,"mtime":1626619544765,"results":"132","hashOfConfig":"115"},{"size":265,"mtime":1626619544764,"results":"133","hashOfConfig":"115"},{"size":304,"mtime":1626619544786,"results":"134","hashOfConfig":"115"},{"size":917,"mtime":1626619544761,"results":"135","hashOfConfig":"115"},{"size":1159,"mtime":1626619544761,"results":"136","hashOfConfig":"115"},{"size":1387,"mtime":1626619544754,"results":"137","hashOfConfig":"115"},{"size":6522,"mtime":1626619544770,"results":"138","hashOfConfig":"115"},{"size":142,"mtime":1626619544771,"results":"139","hashOfConfig":"115"},{"size":1399,"mtime":1626619544770,"results":"140","hashOfConfig":"115"},{"size":1002,"mtime":1626619544770,"results":"141","hashOfConfig":"115"},{"size":1669,"mtime":1626619544772,"results":"142","hashOfConfig":"115"},{"size":858,"mtime":1626619544779,"results":"143","hashOfConfig":"115"},{"size":1677,"mtime":1626619544778,"results":"144","hashOfConfig":"115"},{"size":1792,"mtime":1627064455725,"results":"145","hashOfConfig":"115"},{"size":1480,"mtime":1626619544746,"results":"146","hashOfConfig":"115"},{"size":3709,"mtime":1626619544743,"results":"147","hashOfConfig":"115"},{"size":242,"mtime":1626619544769,"results":"148","hashOfConfig":"115"},{"size":467,"mtime":1626619544767,"results":"149","hashOfConfig":"115"},{"size":871,"mtime":1626619544767,"results":"150","hashOfConfig":"115"},{"size":1328,"mtime":1626619544777,"results":"151","hashOfConfig":"115"},{"size":8039,"mtime":1626619544743,"results":"152","hashOfConfig":"115"},{"size":292,"mtime":1626619544785,"results":"153","hashOfConfig":"115"},{"size":299,"mtime":1626619544768,"results":"154","hashOfConfig":"115"},{"size":179,"mtime":1626619544769,"results":"155","hashOfConfig":"115"},{"size":13847,"mtime":1626619544766,"results":"156","hashOfConfig":"115"},{"size":9172,"mtime":1626619544747,"results":"157","hashOfConfig":"115"},{"size":3576,"mtime":1626619544744,"results":"158","hashOfConfig":"115"},{"size":2988,"mtime":1626619544752,"results":"159","hashOfConfig":"115"},{"size":5488,"mtime":1626619544762,"results":"160","hashOfConfig":"115"},{"size":3066,"mtime":1626619544759,"results":"161","hashOfConfig":"115"},{"size":2285,"mtime":1626619544751,"results":"162","hashOfConfig":"115"},{"size":5895,"mtime":1626619544754,"results":"163","hashOfConfig":"115"},{"size":106,"mtime":1626619544775,"results":"164","hashOfConfig":"115"},{"size":2907,"mtime":1626619544747,"results":"165","hashOfConfig":"115"},{"size":118,"mtime":1626619544774,"results":"166","hashOfConfig":"115"},{"size":1211,"mtime":1626619544773,"results":"167","hashOfConfig":"115"},{"size":800,"mtime":1626619544749,"results":"168","hashOfConfig":"115"},{"size":8971,"mtime":1626619544744,"results":"169","hashOfConfig":"115"},{"size":107,"mtime":1626619544780,"results":"170","hashOfConfig":"115"},{"size":1094,"mtime":1626619544776,"results":"171","hashOfConfig":"115"},{"size":11465,"mtime":1626619544749,"results":"172","hashOfConfig":"115"},{"size":1950,"mtime":1626619544742,"results":"173","hashOfConfig":"115"},{"size":11548,"mtime":1626619544755,"results":"174","hashOfConfig":"115"},{"size":107,"mtime":1626619544777,"results":"175","hashOfConfig":"115"},{"size":5753,"mtime":1626619544759,"results":"176","hashOfConfig":"115"},{"size":107,"mtime":1626619544781,"results":"177","hashOfConfig":"115"},{"size":1207,"mtime":1626619544751,"results":"178","hashOfConfig":"115"},{"size":104,"mtime":1626619544782,"results":"179","hashOfConfig":"115"},{"size":3664,"mtime":1626619544762,"results":"180","hashOfConfig":"115"},{"size":705,"mtime":1626619544782,"results":"181","hashOfConfig":"115"},{"size":4178,"mtime":1626619544752,"results":"182","hashOfConfig":"115"},{"size":104,"mtime":1626619544778,"results":"183","hashOfConfig":"115"},{"size":12268,"mtime":1626619544779,"results":"184","hashOfConfig":"115"},{"size":536,"mtime":1626619544758,"results":"185","hashOfConfig":"115"},{"size":4176,"mtime":1626619544745,"results":"186","hashOfConfig":"115"},{"size":5750,"mtime":1626619544758,"results":"187","hashOfConfig":"115"},{"size":2211,"mtime":1626619544746,"results":"188","hashOfConfig":"115"},{"size":15427,"mtime":1626619544745,"results":"189","hashOfConfig":"115"},{"size":115,"mtime":1626619544774,"results":"190","hashOfConfig":"115"},{"size":118,"mtime":1626619544774,"results":"191","hashOfConfig":"115"},{"size":9636,"mtime":1626619544754,"results":"192","hashOfConfig":"115"},{"size":118,"mtime":1626619544781,"results":"193","hashOfConfig":"115"},{"size":865,"mtime":1626619544760,"results":"194","hashOfConfig":"115"},{"size":10850,"mtime":1626619544760,"results":"195","hashOfConfig":"115"},{"size":1644,"mtime":1626619544746,"results":"196","hashOfConfig":"115"},{"size":1343,"mtime":1626619544767,"results":"197","hashOfConfig":"115"},{"size":4221,"mtime":1626619544763,"results":"198","hashOfConfig":"115"},{"size":7094,"mtime":1626619544763,"results":"199","hashOfConfig":"115"},{"size":6844,"mtime":1626619544753,"results":"200","hashOfConfig":"115"},{"size":896,"mtime":1626619544753,"results":"201","hashOfConfig":"115"},{"size":293,"mtime":1626619544771,"results":"202","hashOfConfig":"115"},{"size":108,"mtime":1626619544779,"results":"203","hashOfConfig":"115"},{"size":1064,"mtime":1626619544773,"results":"204","hashOfConfig":"115"},{"size":1238,"mtime":1626619544748,"results":"205","hashOfConfig":"115"},{"size":1233,"mtime":1626619544748,"results":"206","hashOfConfig":"115"},{"size":377,"mtime":1626619544783,"results":"207","hashOfConfig":"115"},{"size":113,"mtime":1626619544782,"results":"208","hashOfConfig":"115"},{"size":44,"mtime":1626619544768,"results":"209","hashOfConfig":"115"},{"size":1148,"mtime":1626619544750,"results":"210","hashOfConfig":"115"},{"size":1374,"mtime":1626619544749,"results":"211","hashOfConfig":"115"},{"size":1680,"mtime":1626619544750,"results":"212","hashOfConfig":"115"},{"size":116,"mtime":1626619544773,"results":"213","hashOfConfig":"115"},{"size":118,"mtime":1626619544780,"results":"214","hashOfConfig":"115"},{"size":916,"mtime":1626619544757,"results":"215","hashOfConfig":"115"},{"size":4001,"mtime":1626619544756,"results":"216","hashOfConfig":"115"},{"size":15030,"mtime":1626619544755,"results":"217","hashOfConfig":"115"},{"size":4435,"mtime":1626619544756,"results":"218","hashOfConfig":"115"},{"size":95,"mtime":1626619544768,"results":"219","hashOfConfig":"115"},{"size":926,"mtime":1626619544772,"results":"220","hashOfConfig":"115"},{"size":108,"mtime":1626619544777,"results":"221","hashOfConfig":"115"},{"size":13283,"mtime":1626619544757,"results":"222","hashOfConfig":"115"},{"size":909,"mtime":1626619544776,"results":"223","hashOfConfig":"115"},{"size":918,"mtime":1626619544775,"results":"224","hashOfConfig":"115"},{"size":120,"mtime":1626619544780,"results":"225","hashOfConfig":"115"},{"size":13682,"mtime":1626619544757,"results":"226","hashOfConfig":"115"},{"size":915,"mtime":1626619544776,"results":"227","hashOfConfig":"115"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"1dr105s",{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"230"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"230"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"230"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"230"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"230"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"230"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"230"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"230"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"230"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"230"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"230"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"230"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"230"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"230"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"230"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"230"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"230"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"230"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"230"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"230"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"230"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"230"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"230"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"230"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"230"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"230"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"230"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"230"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"230"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"230"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"230"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"230"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"230"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"230"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"230"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"230"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"230"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"230"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"230"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"230"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"230"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"230"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"230"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"230"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"230"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"230"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"230"},"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\index.js",[],["502","503"],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\reportWebVitals.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\i18nextConf.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\App\\App.js",["504"],"import React, {useState} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {createMuiTheme} from '@material-ui/core/styles';\r\nimport {ThemeProvider} from '@material-ui/styles';\r\nimport {darkTheme, lightTheme} from '../theme';\r\nimport {SnackbarProvider} from 'notistack';\r\n\r\nimport PrivateRoute from '../_components/PrivateRoute';\r\nimport HomePage from '../HomePage/HomePage';\r\nimport LoginPage from '../LoginPage/LoginPage';\r\nimport {BrowserRouter, Route, Router, Switch} from 'react-router-dom';\r\nimport {userContext} from '../_context/user-context';\r\nimport {themeContext} from '../_context/theme-context';\r\nimport SignupPage from \"../SignupPage/SignupPage\";\r\nimport ResetPage from \"../ResetPage/ResetPage\";\r\nimport PreEnrolmentPage from \"../PreEnrolmentPage/PreEnrolmentPage\";\r\nimport NotFound from \"../_components/not_found\";\r\n\r\nfunction App() {\r\n    const [theme, setTheme] = useState(localStorage.getItem(\"darkTheme\") === \"true\");\r\n    const appliedTheme = createMuiTheme(theme ? darkTheme : lightTheme);\r\n\r\n\r\n    const [user, setUser] = useState({logged: false, ping: true});\r\n    const [needs, _setNeeds] = useState([]);\r\n    const setNeeds = (needs) => {\r\n        if (!Array.isArray(needs)) return _setNeeds([]);\r\n        return _setNeeds(needs);\r\n    }\r\n\r\n    return (\r\n      <ThemeProvider theme={appliedTheme}>\r\n        <CssBaseline />\r\n        <SnackbarProvider maxSnack={3}>\r\n            <userContext.Provider value={{user: user, setUser: setUser, needs: needs, setNeeds: setNeeds}}>\r\n                <themeContext.Provider value={{theme: theme, switchTheme: () => {\r\n                    localStorage.setItem(\"darkTheme\", (!theme).toString());\r\n                    setTheme(!theme);\r\n                }, label: theme? \"dark\": \"light\"}}>\r\n                    <BrowserRouter basename=\"/app\">\r\n                        <Switch>\r\n                        <PrivateRoute path={'/home'}  component={HomePage}/>\r\n                        <Route path={'/login'} component={LoginPage}/>\r\n                        <Route path={'/signup'} component={SignupPage}/>\r\n                        <Route path={'/password-reset'} component={ResetPage}/>\r\n                        <Route path={'/prematricula'} component={PreEnrolmentPage}/>\r\n                        <Route component={NotFound}/>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </themeContext.Provider>\r\n            </userContext.Provider>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\theme.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\HomePage\\HomePage.js",["505","506","507","508"],"import {makeStyles} from \"@material-ui/core/styles\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\nimport React, {useEffect} from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Routes from \"./routes\";\r\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport HomeToolbar from \"../_components/toolbar.home.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {\r\n    Backdrop,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport {loadingContext} from '../_context/loading-context';\r\nimport {confirmContext} from '../_context/confirm-context';\r\nimport {tabContext} from '../_context/tab-context';\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => (createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        height: '100vh'\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        background: theme.palette.neutral.main,\r\n        color: theme.palette.neutral.emphasisText.medium,\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        overflow: 'auto'\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: theme.spacing(3),\r\n        overflow: 'auto'\r\n    },\r\n    icon: {\r\n      '&': {\r\n          color: theme.palette.neutral.emphasisText.medium,\r\n      }\r\n    },\r\n    selectedIcon: {\r\n      '&': {\r\n          color: theme.palette.primary.main,\r\n      }\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n})));\r\n\r\nconst HomePage = (props) => {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [currentRoute, setCurrentRoute] = React.useState('/students');\r\n    const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onItemClick = p => {\r\n        setCurrentRoute(p.path);\r\n    };\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n      const handleClose = () => {\r\n        setLoading(false);\r\n      };\r\n\r\n      const [confirmDialog, setConfirmDialog] = React.useState({\r\n          open: false,\r\n          title: null,\r\n          subtitle: null,\r\n          success: () => {},\r\n          cancel: () => {},\r\n          args: []\r\n      });\r\n      const confirm = (title, subtitle, successCallable, cancelCallable=null, args=[]) => {\r\n          setConfirmDialog(\r\n              {\r\n                open: true,\r\n                title: title,\r\n                subtitle: subtitle,\r\n                success: successCallable,\r\n                cancel: cancelCallable === null? () => {}: cancelCallable,\r\n                  args: args\r\n              }\r\n          );\r\n      }\r\n      const handleCloseConfirm = () => {\r\n          setConfirmDialog({...confirmDialog, open: false});\r\n      }\r\n\r\n      const routerRef = React.createRef();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n                <loadingContext.Provider value={{loading: loading, startLoading: () => {setLoading(true)}, stopLoading: () =>{setLoading(false)}}}>\r\n                    <confirmContext.Provider value={{confirm: confirm}}>\r\n\r\n                            <AppBar\r\n                                position=\"fixed\"\r\n                                className={clsx(classes.appBar, {\r\n                                    [classes.appBarShift]: open,\r\n                                })}>\r\n                                <HomeToolbar\r\n                                    changeTheme={props.changeTheme}\r\n                                    handleDrawerOpen={handleDrawerOpen}\r\n                                    handleDrawerClose={handleDrawerClose}\r\n                                    open={open}\r\n                                />\r\n                            </AppBar>\r\n                            <BrowserRouter ref={routerRef} basename=\"/app/home\">\r\n                                <tabContext.Provider value={{currentTab: currentRoute, goTo: (res, id=null) => {\r\n                                setCurrentRoute(res);\r\n                                if (id === null) {\r\n                                    routerRef.current.history.push(res);\r\n                                } else {\r\n                                    routerRef.current.history.push(`${res}?id=${id}`);\r\n                                }\r\n                            }}}>\r\n                                <Drawer\r\n                                    variant=\"permanent\"\r\n                                    className={clsx(classes.drawer, {\r\n                                        [classes.drawerOpen]: open,\r\n                                        [classes.drawerClose]: !open,\r\n                                    })}\r\n                                    classes={{\r\n                                        paper: clsx({\r\n                                            [classes.drawerOpen]: open,\r\n                                            [classes.drawerClose]: !open,\r\n                                        }),\r\n                                    }}\r\n                                >\r\n                                    <div className={classes.toolbar}>\r\n                                        <IconButton onClick={handleDrawerClose}>\r\n                                            {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <Divider/>\r\n                                    <List>\r\n                                        {Routes\r\n                                            .filter(route => hasNeeds(route.needs))\r\n                                            .map((prop) =>(\r\n                                                  <ListItem key={prop.title} to={prop.path } button component={Link} onClick={() => onItemClick(prop)}>\r\n                                                    <ListItemIcon className={prop.path === currentRoute? classes.selectedIcon: classes.icon}>\r\n                                                        <Tooltip title={t(prop.title)} aria-label={t(prop.title)}>\r\n                                                            {<prop.icon/>}\r\n                                                        </Tooltip>\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary={t(prop.title)}/>\r\n                                                </ListItem>\r\n                                                ))}\r\n                                    </List>\r\n                                </Drawer>\r\n\r\n\r\n                                <div className={classes.content}>\r\n                                    <div className={classes.toolbar}/>\r\n                                    <main className={classes.main}>\r\n                                        {Routes\r\n                                            .filter(route => hasNeeds(route.needs))\r\n                                            .map((prop) => {\r\n                                            return (\r\n                                                <Route key={prop.title} path={prop.path} component={prop.component}/>)\r\n                                        })}\r\n                                    </main>\r\n                                </div>\r\n                                     </tabContext.Provider>\r\n                            </BrowserRouter>\r\n\r\n                    <Backdrop className={classes.backdrop} open={loading} onClick={handleClose}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                  </Backdrop>\r\n\r\n                        <Dialog\r\n        open={confirmDialog.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        {confirmDialog.title &&\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n            {t(confirmDialog.title)}\r\n        </DialogTitle>\r\n        }\r\n        {confirmDialog.subtitle && <DialogContent>\r\n            <DialogContentText>\r\n                {t(confirmDialog.subtitle)}\r\n            </DialogContentText>\r\n        </DialogContent>}\r\n        <DialogActions>\r\n          <Button autoFocus onClick={() => {\r\n              confirmDialog.cancel(...confirmDialog.args);\r\n              handleCloseConfirm();\r\n          }} color=\"primary\">\r\n              {t(\"cancel\")}\r\n          </Button>\r\n          <Button onClick={() => {\r\n              confirmDialog.success(...confirmDialog.args);\r\n              handleCloseConfirm();\r\n          }} color=\"primary\" autoFocus>\r\n              {t(\"continue\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n                    </confirmContext.Provider>\r\n            </loadingContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\not_found.js",["509","510","511","512","513","514","515"],"import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport {themeContext} from \"../_context/theme-context\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function NotFound({}){\r\n    const themeCtx = React.useContext(themeContext);\r\n    const {t} = useTranslation();\r\n\r\n    return  <Typography variant=\"h1\">Nope, not found... 👻</Typography>;\r\n}","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\PrivateRoute.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\SignupPage\\SignupPage.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\theme-context.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\user-context.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\ResetPage\\ResetPage.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\PreEnrolmentPage\\PreEnrolmentPage.js",["516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567"],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\HomePage\\routes.js",["568"],"import React from \"react\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ClassIcon from \"@material-ui/icons/Class\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport Students from \"../_components/students.component\";\r\nimport Users from \"../_components/users.component\";\r\nimport Payments from \"../_components/payments.component\";\r\nimport Rooms from \"../_components/rooms.component\";\r\nimport Teachers from \"../_components/teachers.component\";\r\nimport Courses from \"../_components/courses.component\";\r\nimport {NEEDS} from \"../_helpers/needs\";\r\nimport Email from \"../_components/email.component\";\r\nimport Attendance from \"../_components/attendance.component\";\r\n\r\n\r\nconst Routes = [\r\n  {\r\n    path: '/students',\r\n    component: Students,\r\n    title: 'students',\r\n    icon: PersonIcon,\r\n    needs: [NEEDS.students, NEEDS.get]\r\n  },\r\n  {\r\n    path: '/courses',\r\n    component: Courses,\r\n    title: 'courses',\r\n    icon: ClassIcon,\r\n    needs: [NEEDS.courses, NEEDS.get]\r\n  },\r\n  {\r\n    path: '/teachers',\r\n    component: Teachers,\r\n    title: 'teachers',\r\n    icon: SchoolIcon,\r\n    needs: [NEEDS.teachers, NEEDS.get]\r\n  },\r\n  {\r\n    path: '/rooms',\r\n    component: Rooms,\r\n    title: 'rooms',\r\n    icon:  RoomIcon,\r\n    needs: [NEEDS.rooms, NEEDS.get]\r\n  },{\r\n    path: '/payments',\r\n    component: Payments,\r\n    title: 'payments',\r\n    icon: AccountBalanceIcon,\r\n    needs: [NEEDS.payments, NEEDS.get]\r\n  },{\r\n    path: '/users',\r\n    component: Users,\r\n    title: 'users',\r\n    icon: ContactMailIcon,\r\n    needs: [NEEDS.users, NEEDS.get]\r\n  },{\r\n    path: '/email',\r\n    component: Email,\r\n    title: 'email',\r\n    icon: EmailIcon,\r\n    needs: [NEEDS.send_email, NEEDS.get]\r\n  },{\r\n    path: '/attendance',\r\n    component: Attendance,\r\n    title: 'attendance',\r\n    icon: AssignmentTurnedInIcon,\r\n    needs: [NEEDS.attendance, NEEDS.get]\r\n  }\r\n];\r\n\r\n\r\nexport default Routes;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\toolbar.home.component.js",["569","570"],"import IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport React, {useContext} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport i18next from \"i18next\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\nimport {userContext} from \"../_context/user-context\";\r\nimport {authenticationService} from \"../_services/auth.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport TranslateButton from \"./translate_button.component\";\r\nimport ThemeButton from \"./theme_button.component\";\r\n\r\nconst languageMap = {\r\n    eng: { label: \"english\", dir: \"ltr\", active: true },\r\n    cat: { label: \"català\", dir: \"ltr\", active: false }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => (createStyles({\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n})));\r\n\r\nexport default function HomeToolbar(props){\r\n    const changeTheme = props.changeTheme;\r\n    const classes = useStyles();\r\n    const errorHandler = useErrorHandler();\r\n\r\n    const selected = localStorage.getItem(\"i18nextLng\") || \"eng\";\r\n    const { t } = useTranslation();\r\n\r\n    const title = \"centrífuga4\";\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const handleProfileMenuOpen = (event, ) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [anchorElLan, setAnchorElLan] = React.useState(null);\r\n    const isLanguageMenuOpen = Boolean(anchorElLan);\r\n    const handleLanguageMenuOpen = (event) => {\r\n        setAnchorElLan(event.currentTarget);\r\n    };\r\n    const handleLanguageMenuClose = () => {\r\n        setAnchorElLan(null);\r\n    };\r\n    const changeLanguage = (language) => {\r\n        i18next.changeLanguage(language).then();\r\n        handleLanguageMenuClose();\r\n    }\r\n    React.useEffect(() => {\r\n        document.body.dir = languageMap[selected].dir;\r\n      }, [anchorElLan, selected]);\r\n\r\n    const languageMenuId = 'primary-language-select-menu';\r\n    const languageMenu = (\r\n        <Menu\r\n            anchorEl={anchorElLan}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={languageMenuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isLanguageMenuOpen}\r\n            onClose={handleLanguageMenuClose}>\r\n            {Object.keys(languageMap)?.map(key => (\r\n              <MenuItem key={key} onClick={() => changeLanguage(key)}>{languageMap[key].label}</MenuItem>\r\n            ))}\r\n        </Menu>\r\n    );\r\n\r\n    const userCtx = useContext(userContext);\r\n\r\n\r\n    const userMenuId = 'primary-search-account-menu';\r\n    const userMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={userMenuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}>\r\n\r\n\r\n                     <MenuItem\r\n                         onClick={(event) => {\r\n                             authenticationService\r\n                                 .logout()\r\n                                 .then(...errorHandler({}))\r\n                                 .then(() => {\r\n                                     userCtx[\"setUser\"]({logged: false, ping: false});\r\n                                 });\r\n                             handleMenuClose(event);\r\n                         }}>\r\n                         {t(\"log_out\")}\r\n                     </MenuItem>\r\n\r\n\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n    <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label={t(\"open_drawer\")}\r\n                        onClick={props.handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: props.open,\r\n                        })}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                      {title}\r\n                    </Typography>\r\n                    <div className={classes.grow}/>\r\n\r\n                    <TranslateButton/>\r\n                <ThemeButton />\r\n\r\n\r\n                        <Tooltip title={t(\"my_account\")}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            aria-label={t(\"my_account\")}\r\n                            aria-controls={userMenuId}\r\n                            aria-haspopup=\"true\">\r\n                            <AccountCircleIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n\r\n        {languageMenu}\r\n        {userMenu}\r\n                </Toolbar>\r\n    )\r\n};\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\loading-context.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\tab-context.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_context\\confirm-context.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\config.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\theme_button.component.js",["571"],"import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport {themeContext} from \"../_context/theme-context\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport default function ThemeButton({...props}){\r\n    const themeCtx = React.useContext(themeContext);\r\n    const {t} = useTranslation();\r\n\r\n    return  <Tooltip title={themeCtx.theme? t(\"use_light\"): t(\"use_dark\")}\r\n                     style={{float: 'right'}} {...props}>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label={themeCtx.theme? t(\"use_light\"): t(\"use_dark\")}\r\n                    onClick={themeCtx.switchTheme}>\r\n                    <Brightness4Icon/>\r\n                </IconButton>\r\n            </Tooltip>;\r\n}","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\translate_button.component.js",["572","573","574"],"import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport {themeContext} from \"../_context/theme-context\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport TranslateIcon from \"@material-ui/icons/Translate\";\r\nimport i18next from \"i18next\";\r\nimport {getCurrentLanguage} from \"../_translations/utils\";\r\n\r\n\r\n\r\nexport default function TranslateButton({...props}){\r\n    const {t} = useTranslation();\r\n    const selectedLanguage = getCurrentLanguage();\r\n\r\n    return  <Tooltip title={selectedLanguage === \"cat\"? t(\"use_eng\"): t(\"use_cat\")} {...props}>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    onClick={() => {\r\n\r\n                        i18next.changeLanguage(getCurrentLanguage() === \"eng\"? \"cat\": \"eng\").then();\r\n                    }}\r\n                    aria-label={selectedLanguage === \"cat\"? t(\"use_eng\"): t(\"use_cat\")}>\r\n                    <TranslateIcon/>\r\n                </IconButton>\r\n\r\n            </Tooltip>;\r\n}","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\searchbar.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\handle-response.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\on-mount.js",["575"],"import { useEffect } from \"react\";\r\n\r\nexport const useOnMount = handler => {\r\n  return useEffect(() => {\r\n    return handler();\r\n  }, []);\r\n};","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\normik.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\needs.js",["576","577","578"],"import {userContext} from \"../_context/user-context\";\r\nimport React from 'react';\r\nimport {useSnackbar} from \"notistack\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {CHECK_NEEDS} from \"../config\";\r\n\r\n\r\nexport const NEEDS = {\r\n        get: \"get\",\r\n        patch: \"patch\",\r\n        delete: \"delete\",\r\n        post: \"post\",\r\n        send_email: \"send_email\",\r\n        invite_users: \"invite_users\",\r\n        students: \"students\",\r\n        courses: \"courses\",\r\n        guardians: \"guardians\",\r\n        payments: \"payments\",\r\n        rooms: \"rooms\",\r\n        schedules: \"schedules\",\r\n        teachers: \"teachers\",\r\n        users: \"users\",\r\n        paymentReceipts: \"payments-receipts\",\r\n        attendance: \"attendance\"\r\n    };\r\n\r\n\r\nexport function useNeeds() {\r\n\r\n    const userCtx = React.useContext(userContext);\r\n\r\n    const hasNeed = (needs) => (!CHECK_NEEDS || needs.every(need => userCtx.needs.includes(need)));\r\n\r\n    return [hasNeed, NEEDS];\r\n}","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\auth.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\signup.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\pre-enrolment.service.js",["579"],"import axios from \"axios\";\r\nimport {authHeader} from \"../_helpers/auth-header\";\r\nimport {API_VERSION, BACKEND_URL} from \"../config\";\r\n\r\nexport const preEnrolmentService = {\r\n    getCourses,\r\n    postPreEnrollment\r\n};\r\n\r\nfunction getCourses() {\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            axios({\r\n                method: 'get',\r\n                url: `${BACKEND_URL}/pre-enrolment/v1/courses`,\r\n                headers: {\r\n                    ...{\r\n                        'Content-Type': 'application/json',\r\n                        'Cache-Control': 'no-cache'\r\n                    }, ...authHeader()  // todo are auth headers needed for gets?\r\n                }\r\n            }).then(function (response) {\r\n                    resolve(response.data);\r\n                }).catch(function (err) {\r\n                    reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    function postPreEnrollment(data, recaptcha) {\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: `${BACKEND_URL}/pre-enrolment/v1/pre-enrolment`,\r\n                data: {\r\n                    body: data,\r\n                    recaptcha: recaptcha\r\n                },\r\n                headers: {\r\n                    ...{\r\n                        'Content-Type': 'application/json',\r\n                        'Cache-Control': 'no-cache'\r\n                    }, ...authHeader()\r\n                }\r\n            }).then(function (response) {\r\n                    resolve(response);\r\n                }).catch(function (err) {\r\n                    reject(err);\r\n            });\r\n        });\r\n    }\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_yup\\validators.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\dirtytextfield.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\contry-select.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\relations.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\education.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\empty_objects.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\password-reset.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\attendance.component.js",["580","581","582","583","584","585"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport {Checkbox, ListItem, ListItemIcon, ListItemText, Tooltip} from \"@material-ui/core\";\r\nimport CourseStudentsDataService from \"../_services/course_students.service\";\r\nimport {attendanceService} from \"../_services/course_attendance.service\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport dataService from \"../_services/courses.service\";\r\nimport * as yup from \"yup\";\r\nimport {useFormik} from \"formik\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport EmailTo from \"./emailTo.component\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {CloudDownload} from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n    textBox: {\r\n      width: \"100%\",\r\n        border: \"red\"\r\n    },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    },\r\n    chip: {\r\n      margin: theme.spacing(0.5)\r\n    },\r\n    chips: {\r\n      marginBottom: theme.spacing(1)\r\n    },\r\n    in: {\r\n      marginBottom: theme.spacing(1)\r\n    },fabs: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(4),\r\n  },fab: {\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nfunction areArraysEqualSets(a1, a2) {\r\n  const superSet = {};\r\n  for (const i of a1) {\r\n    const e = i + typeof i;\r\n    superSet[e] = 1;\r\n  }\r\n\r\n  for (const i of a2) {\r\n    const e = i + typeof i;\r\n    if (!superSet[e]) {\r\n      return false;\r\n    }\r\n    superSet[e] = 2;\r\n  }\r\n\r\n  for (let e in superSet) {\r\n    if (superSet[e] === 1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n\r\nexport default function Attendance({...other}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const [groups, setGroups] = useState([]);\r\n  const [hasAttended, setHasAttended] = useState(null);\r\n  const [hasAttendedInitial, setHasAttendedInitial] = useState(null);\r\n  const [students, setStudents] = useState(null);\r\n   const [pristine, setPristine] = useState(true);\r\n    const [courseId, setCourseId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (hasAttended === null || hasAttendedInitial === null) return;\r\n        setPristine(areArraysEqualSets(hasAttended, hasAttendedInitial));\r\n    }, [hasAttendedInitial, hasAttended])\r\n    useEffect(() => {\r\n        if (courseId === null) return;\r\n        CourseStudentsDataService\r\n            .getAll(null, '*', [\"full_name\", \"id\"], null, courseId)\r\n            .then(...errorHandler({}))\r\n            .then(function (res) {\r\n                setStudents(res[\"data\"]);\r\n            });\r\n    }, [courseId]);\r\n  const errorHandler = useErrorHandler();\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n  const formik = useFormik({\r\n        initialValues: {start: today},\r\n        validationSchema: yup.object({}),\r\n        enableReinitialize: true,\r\n        onSubmit: (values, {setStatus, setSubmitting}) => {\r\n            setSubmitting(true);\r\n\r\n        }\r\n    });\r\n  useEffect(() => {\r\n      if (courseId === null) return;\r\n      if (formik.values[\"start\"] === '') return;\r\n      setHasAttendedInitial(null);\r\n                setHasAttended(null);\r\n      attendanceService\r\n                .get(courseId, formik.values[\"start\"])\r\n            .then(...errorHandler({}))\r\n            .then(function (res) {\r\n                console.log(\"m\", res);\r\n                setHasAttendedInitial(res[\"data\"][0][\"student_ids\"]);\r\n                setHasAttended(res[\"data\"][0][\"student_ids\"]);\r\n            });\r\n  }, [formik.values[\"start\"], courseId])\r\n\r\n  useEffect(() => {\r\n      dataService\r\n            .getAll(null, \"*\", ['id', \"name\"])\r\n            .then(...errorHandler({}))\r\n            .then(function (res) {\r\n                setGroups(res[\"data\"]);\r\n            });\r\n  }, [])\r\n\r\n    const handleToggle = (id) => {\r\n        if (hasAttended.includes(id)) return setHasAttended(hasAttended.filter(x => x !== id));\r\n        setHasAttended([...hasAttended, id]);\r\n    }\r\n\r\n  return (\r\n      <div>\r\n          <h1>{t(\"attendance\")}</h1>\r\n          <EmailTo\r\n            formik={formik}\r\n            style={{width: \"100%\"}}\r\n            options={groups}\r\n            addTo={x => {setCourseId(x.id)}}\r\n            name={\"course_id\"}\r\n            label={t(\"courses\")}\r\n        />\r\n        <Box className={[classes.line, classes.composite]}>\r\n            <DirtyTextField\r\n                label={t(\"date\")}\r\n                type=\"date\"\r\n                style={{flex: 1}}\r\n                noDirty={true}\r\n                name=\"start\"\r\n                formik={formik}\r\n                InputLabelProps={{shrink: true}}/>\r\n        </Box>\r\n          {students && hasAttendedInitial && hasAttended && <List className={classes.root}>\r\n              <ListItem key={\"all\"} role={undefined} dense button onClick={() => {\r\n                  if (hasAttended.length === students.length) {\r\n                      setHasAttended([]);\r\n                  } else {\r\n                      setHasAttended(students.map(x => x.id));\r\n                  }\r\n              }}>\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={hasAttended.length === students.length}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                color={\"primary\"}\r\n                inputProps={{ 'aria-labelledby': \"all\" }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={\"all\"} primary={t(\"mark_all\")} />\r\n          </ListItem>\r\n\r\n             <Divider />\r\n\r\n\r\n      {students.map((student) => {\r\n        const labelId = `checkbox-list-label-${student.id}`;\r\n\r\n        return (\r\n          <ListItem key={student.id} role={undefined} dense button onClick={() => handleToggle(student.id)}>\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={hasAttended.includes(student.id)}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={student[\"full_name\"]} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>}\r\n          <div className={classes.fabs}>\r\n              <Tooltip title={t(\"download\")}>\r\n                <Fab className={classes.fab} color=\"secondary\" onClick={() => {}} disabled={formik.isSubmitting || courseId === null}>\r\n                    <CloudDownload/>\r\n                </Fab>\r\n            </Tooltip>\r\n              <Tooltip title={t(\"reset\")}>\r\n                <Fab className={classes.fab} color=\"secondary\" onClick={() => {setHasAttended(hasAttendedInitial)}} disabled={formik.isSubmitting || pristine}>\r\n                    <CloseIcon/>\r\n                </Fab>\r\n            </Tooltip>\r\n           <Tooltip title={t(\"save\")}>\r\n                <Fab className={classes.fab} color=\"primary\" onClick={() => {\r\n                        attendanceService\r\n                            .put(courseId, formik.values[\"start\"], hasAttended)\r\n                            .then(...errorHandler({}))\r\n                            .then(function (res) {\r\n                                setHasAttendedInitial(hasAttended);\r\n                            });\r\n                }} disabled={formik.isSubmitting || pristine}>\r\n                    <SaveIcon/>\r\n                </Fab>\r\n            </Tooltip>\r\n          </div>\r\n\r\n      </div>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_translations\\utils.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\password_regex.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\auth-header.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\countries.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\email.component.js",["586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport {\r\n    Chip,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle, MenuItem,\r\n    TextField,\r\n    Tooltip\r\n} from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport dataService from \"../_services/courses.service\";\r\nimport * as yup from \"yup\";\r\nimport {useFormik} from \"formik\";\r\nimport {bulkEmailService} from \"../_services/bulkEmail.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {safe_email_required} from \"../_yup/validators\";\r\nimport EmailTo from \"./emailTo.component\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport EuroIcon from \"@material-ui/icons/Euro\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport PaymentsDataService from \"../_services/payments.service\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport clsx from \"clsx\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport {payment_methods} from \"../_data/payment_methods\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {loadingContext} from \"../_context/loading-context\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n\r\n    textBox: {\r\n      width: \"100%\",\r\n        border: \"red\"\r\n    },\r\n    chip: {\r\n      margin: theme.spacing(0.5)\r\n    },\r\n    chips: {\r\n      marginBottom: theme.spacing(1)\r\n    },\r\n    in: {\r\n      marginBottom: theme.spacing(1),\r\n        marginTop: theme.spacing(2)\r\n    },fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(4),\r\n  }, attach: {\r\n      marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    card: {\r\n      marginTop: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport default function Email({...other}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const [groups, setGroups] = useState([]);\r\n  const [to, setTo] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n    const addTo = (t) => {\r\n        setTo([...to, t]);\r\n    }\r\n    const removeTo = (id) => {\r\n        setTo(to.filter(x => x.id !== id));\r\n    }\r\n    const loadingCtx = React.useContext(loadingContext);\r\n     const confirm = React.useContext(confirmContext);\r\n    const handleSendEmail = () => {\r\n        if (loadingCtx.loading) return;\r\n        if (formik.isSubmitting) return;\r\n\r\n        confirm.confirm(\"send_bulk_email\", \"send_bulk_email_description\", () => {\r\n                  loadingCtx.startLoading();\r\n        formik.setSubmitting(true);\r\n        bulkEmailService\r\n            .bulkSend(to.map(g => g.id), formik.values[\"subject\"],\r\n                formik.values[\"body\"], formik.values[\"emailPreference\"], selectedFiles)\r\n\r\n            .then(...errorHandler({snackbarSuccess: true}))\r\n            .finally(() => {\r\n                formik.setSubmitting(false);\r\n                loadingCtx.stopLoading();\r\n        })\r\n              });\r\n\r\n    }\r\n\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const formik = useFormik({\r\n        initialValues: {emailPreference: \"resolved\"},\r\n        validationSchema: yup.object({\r\n            email: safe_email_required(t)}),\r\n        enableReinitialize: true,\r\n        onSubmit: (values, {setStatus, setSubmitting}) => {\r\n            setSubmitting(true);\r\n\r\n        }\r\n    });\r\n  useEffect(() => {\r\n      dataService\r\n            .getAll(null, \"*\", ['id', \"name\"])\r\n            .then(...errorHandler({}))\r\n            .then(function (res) {\r\n                setGroups(res[\"data\"]);\r\n            });\r\n  }, [])\r\n    const onFileChange = event => {\r\n      // Update the state\r\n      setSelectedFiles([...event.target.files]);\r\n    };\r\n    const getFormData = () => {\r\n        if (selectedFiles.length === 0) return null;\r\n      // Create an object of formData\r\n      const formData = new FormData();\r\n\r\n      // Update the formData object\r\n        selectedFiles.forEach(sf => {\r\n            formData.append(\r\n            sf.name,\r\n            sf,\r\n            sf.name\r\n          );\r\n        })\r\n\r\n\r\n      return formData;\r\n    };\r\n\r\n    const fileDataRepresentation = () =>  {\r\n        console.log(\"sfs\", selectedFiles);\r\n      return selectedFiles.map(selectedFile => (\r\n          <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n         <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\r\n          <IconButton onClick={(e) => {\r\n              setSelectedFiles(selectedFiles.filter(x => x !== selectedFile));\r\n          }}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        }\r\n        titleTypographyProps={{variant: 'subheading'}}\r\n        title={selectedFile.name}\r\n      />\r\n    </Card>));\r\n    }\r\n\r\n\r\n  return (\r\n      <div>\r\n          <h1>{t(\"email\")}</h1>\r\n          <Box className={classes.chips}>\r\n              {t(\"to\")}: {\r\n                  to.length > 0? to.map(x =>\r\n                      <Tooltip title={t(\"delete\")}>\r\n                  <Chip variant=\"outlined\"\r\n              color=\"primary\"\r\n                        className={classes.chip}\r\n              size=\"small\"\r\n              avatar={<Avatar>G</Avatar>}\r\n              label={x.name}\r\n              onClick={() => {\r\n                removeTo(x.id);\r\n              }}/></Tooltip>\r\n                  ) : \" - \"\r\n              }\r\n          </Box>\r\n\r\n          <TextField\r\n              className={classes.in}\r\n            label={t(\"use_emails\")}\r\n            style={{width: \"100%\"}}\r\n              value={formik.values[\"emailPreference\"] === undefined? '': formik.values[\"emailPreference\"]}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.status  || formik.errors[\"emailPreference\"] !== undefined}\r\n        helperText={formik.touched[\"emailPreference\"] && formik.errors[\"emailPreference\"]}\r\n\r\n            name=\"emailPreference\"\r\n            select>\r\n            <MenuItem value=\"contacts\">{t(\"contacts\")}</MenuItem>\r\n            <MenuItem value=\"resolved\">{t(\"resolved\")}</MenuItem>\r\n          <MenuItem value=\"student\">{t(\"student\")}</MenuItem>\r\n          <MenuItem value=\"all\">{t(\"all\")}</MenuItem>\r\n        </TextField>\r\n\r\n\r\n\r\n          <EmailTo\r\n            formik={formik}\r\n            style={{width: \"100%\"}}\r\n            options={groups.filter(g => !to.includes(g))}\r\n            addTo={addTo}\r\n            name={\"courses\"}\r\n            label={t(\"courses\")}\r\n        />\r\n        <TextField\r\n              className={classes.in}\r\n            label={t(\"subject\")}\r\n            style={{width: \"100%\"}}\r\n            value={formik.values[\"subject\"] === undefined? '': formik.values[\"subject\"]}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.status  || formik.errors[\"subject\"] !== undefined}\r\n            helperText={formik.touched[\"subject\"] && formik.errors[\"subject\"]}\r\n            name=\"subject\"\r\n            />\r\n\r\n        <TextField\r\n            className={classes.textBox}\r\n            multiline\r\n            rows={16}\r\n            value={formik.values[\"body\"] === undefined? '': formik.values[\"body\"]}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.status  || formik.errors[\"body\"] !== undefined}\r\n            helperText={formik.touched[\"body\"] && formik.errors[\"body\"]}\r\n            name={\"body\"}\r\n          />\r\n          <div>\r\n          {fileDataRepresentation()}\r\n          <input\r\n              style={{ display: \"none\" }}\r\n              id=\"contained-button-file\"\r\n              type=\"file\"\r\n              multiple\r\n              onChange={onFileChange}\r\n          />\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Button className={classes.attach} variant=\"contained\" color=\"primary\" component=\"span\">\r\n                {t(\"upload\")}\r\n            </Button>\r\n          </label>\r\n          </div>\r\n          <Tooltip title={t(\"send_email\")}>\r\n                <Fab className={classes.fab} color=\"primary\" onClick={handleSendEmail} disabled={formik.isSubmitting || to.length === 0}>\r\n                    <SendIcon/>\r\n                </Fab>\r\n            </Tooltip>\r\n      </div>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.component.js",["608","609"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Student from \"./students.student.component\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport ItemsList from \"./items_list.component\";\r\nimport RoomsDataService from \"../_services/rooms.service\";\r\nimport Room from \"./rooms.room.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport ItemsListMain from \"./items_list_main.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  left: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n      position: 'relative',\r\n\r\n  },fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\n\r\nexport default function Rooms({...other}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const [rooms, setRooms] = useState([]);\r\n  const [newRoom, setNewRoom] = useState(false);\r\n  const [currentRoomId, setCurrentRoomId] = useState(null);\r\n\r\n  const query = new URLSearchParams(window.location.search);\r\n  const id = query.get('id');\r\n  useEffect(() => {\r\n      if (id !== null && id !== undefined) setCurrentRoomId(id);\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n      if (currentRoomId !== null) setNewRoom(false);\r\n  }, [currentRoomId])\r\nconst [hasNeeds, NEEDS] = useNeeds();\r\n  return (\r\n      <Grid container spacing={3} className={classes.root}>\r\n        <Grid item xs={4} className={classes.left}>\r\n          <h1>{t(\"rooms\")}</h1>\r\n          <ItemsListMain\r\n            setCurrentItemId={setCurrentRoomId}\r\n            currentItemId={currentRoomId}\r\n            items={rooms}\r\n            setItems={setRooms}\r\n            defaultSearchBy=\"name\"\r\n            displayNameField=\"name\"\r\n            searchByOptions={[\"name\", \"id\"]}\r\n            dataService={RoomsDataService}\r\n            searchBarLabel=\"rooms\"\r\n          />\r\n            {hasNeeds([NEEDS.post]) && <Tooltip title={t(\"new_room\")}>\r\n                <Fab className={classes.fab} color=\"primary\" onClick={(e) => {\r\n                    setCurrentRoomId(null);\r\n                    setNewRoom(true);\r\n                }}>\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </Tooltip>}\r\n        </Grid>\r\n\r\n        <Grid item xs={8} className={classes.left}>\r\n          <Room\r\n            currentRoomId={currentRoomId}\r\n            newRoom={newRoom}\r\n            setNewRoom={setNewRoom}\r\n            addRoomId={(id) =>{\r\n                setCurrentRoomId(id);\r\n            }}\r\n            deleteRoom={(studentId) => {\r\n                if (studentId === currentRoomId) setCurrentRoomId(null);\r\n\r\n                setRooms(rooms.filter((s) => s['id'] !== studentId));\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.component.js",["610"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n    Tooltip\r\n} from \"@material-ui/core\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport * as yup from \"yup\";\r\nimport {useFormik} from \"formik\";\r\nimport {invitationsService} from \"../_services/userInvites.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport User from \"./users.user.component\";\r\nimport ItemsList from \"./items_list.component\";\r\nimport UsersDataService from \"../_services/users.service\";\r\nimport NeedsSelection from \"./needs_selection.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {safe_email_required} from \"../_yup/validators\";\r\nimport ItemsListMain from \"./items_list_main.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n    root2: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n      padding: theme.spacing(2),\r\n        maxHeight: '50vh',\r\n      overflow: 'auto',\r\n      minWidth: '40vw'\r\n  },\r\n    dialog: {\r\n\r\n    },\r\n  left: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n      position: 'relative',\r\n\r\n  },fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default function Users({...other}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUserId, setCurrentUserId] = useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n    const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const query = new URLSearchParams(window.location.search);\r\n  const id = query.get('id');\r\n  useEffect(() => {\r\n      if (id !== null && id !== undefined) setCurrentUserId(id);\r\n  }, [id]);\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const formik = useFormik({\r\n        initialValues: {email: '', needs: []},\r\n        validationSchema: yup.object({\r\n            email: safe_email_required(t)}),\r\n        enableReinitialize: true,\r\n        onSubmit: (values, {setStatus, setSubmitting}) => {\r\n            setSubmitting(true);\r\n            invitationsService\r\n                .inviteUser(values['email'], values['needs'])\r\n                .then(...errorHandler({snackbarSuccess: true}))\r\n                .then(res => {\r\n                    handleClose();\r\n                }).catch(_ => {\r\n                    setStatus(true);\r\n                }).finally(() => {\r\n                    setSubmitting(false);\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n  return (\r\n      <Grid container spacing={3} className={classes.root}>\r\n          <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n            {t(\"invite_user\")}\r\n        </DialogTitle> <form onSubmit={formik.handleSubmit}>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label={t(\"email\")}\r\n            type=\"email\"\r\n            fullWidth\r\n            value={formik.values['email']}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.status  || formik.errors['email'] !== undefined}\r\n            helperText={formik.touched['email'] && formik.errors['email']}\r\n          />\r\n          <Box my={2} className={classes.dialog}>\r\n\r\n                  <NeedsSelection\r\n                      noDirty={true}\r\n                    formik={formik}\r\n                  />\r\n\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n              {t(\"cancel\")}\r\n          </Button>\r\n          <Button type=\"submit\" color=\"primary\" disabled={formik.isSubmitting}>\r\n              {t(\"invite\")}\r\n          </Button>\r\n        </DialogActions></form>\r\n      </Dialog>\r\n        <Grid item xs={4} className={classes.left}>\r\n          <h1>{t(\"users\")}</h1>\r\n          <ItemsListMain\r\n                setCurrentItemId={setCurrentUserId}\r\n                currentItemId={currentUserId}\r\n                items={users}\r\n                setItems={setUsers}\r\n                defaultSearchBy=\"full_name\"\r\n                searchByOptions={[\"full_name\", \"id\"]}\r\n                dataService={UsersDataService}\r\n                searchBarLabel=\"users\"\r\n            />\r\n            {hasNeeds([NEEDS.invite_users]) && <Tooltip title={t(\"new_user\")}>\r\n                <Fab className={classes.fab} color=\"primary\" onClick={handleClickOpen}>\r\n                    <PersonAddIcon/>\r\n                </Fab>\r\n            </Tooltip>}\r\n        </Grid>\r\n\r\n        <Grid item xs={8} className={classes.left}>\r\n          <User\r\n            currentUserId={currentUserId}\r\n            deleteUser={(userId) => {\r\n                if (userId === currentUserId) setCurrentUserId(null);\r\n\r\n                setUsers(users.filter((s) => s['id'] !== userId));\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.component.js",["611"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport TeachersDataService from \"../_services/teachers.service\";\r\nimport ItemsList from \"./items_list.component\";\r\nimport Teacher from \"./teachers.teacher.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport ItemsListMain from \"./items_list_main.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  left: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n      position: 'relative',\r\n\r\n  },fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\n\r\nexport default function Teachers({...other}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const [teachers, setTeachers] = useState([]);\r\n  const [newTeacher, setNewTeacher] = useState(false);\r\n  const [currentTeacherId, setCurrentTeacherId] = useState(null);\r\nconst [hasNeeds, NEEDS] = useNeeds();\r\n  const query = new URLSearchParams(window.location.search);\r\n  const id = query.get('id');\r\n  useEffect(() => {\r\n      if (id !== null && id !== undefined) setCurrentTeacherId(id);\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n      if (currentTeacherId !== null) setNewTeacher(false);\r\n  }, [currentTeacherId])\r\n\r\n  return (\r\n      <Grid container spacing={3} className={classes.root}>\r\n        <Grid item xs={4} className={classes.left}>\r\n          <h1>{t(\"teachers\")}</h1>\r\n            <ItemsListMain\r\n                setCurrentItemId={setCurrentTeacherId}\r\n                currentItemId={currentTeacherId}\r\n                items={teachers}\r\n                setItems={setTeachers}\r\n                defaultSearchBy=\"full_name\"\r\n                searchByOptions={[\"full_name\", \"id\"]}\r\n                dataService={TeachersDataService}\r\n                searchBarLabel=\"teachers\"\r\n            />\r\n\r\n            {hasNeeds([NEEDS.post]) && <Tooltip title={t(\"new_teacher\")}>\r\n                <Fab className={classes.fab} color=\"primary\" onClick={(e) => {\r\n                    setCurrentTeacherId(null);\r\n                    setNewTeacher(true);\r\n                }}>\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </Tooltip>}\r\n        </Grid>\r\n\r\n        <Grid item xs={8} className={classes.left}>\r\n          <Teacher\r\n            currentTeacherId={currentTeacherId}\r\n            newTeacher={newTeacher}\r\n            setNewTeacher={setNewTeacher}\r\n            addTeacherId={(id) =>{\r\n                setCurrentTeacherId(id);\r\n            }}\r\n            deleteTeacher={(studentId) => {\r\n                if (studentId === currentTeacherId) setCurrentTeacherId(null);\r\n\r\n                setTeachers(teachers.filter((s) => s['id'] !== studentId));\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\payments.component.js",["612","613","614"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport PaymentsDataService from \"../_services/payments.service\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {loadingContext} from \"../_context/loading-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n    root2: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n      padding: theme.spacing(2),\r\n        maxHeight: '50vh',\r\n      overflow: 'auto',\r\n      minWidth: '40vw'\r\n  },\r\n    dialog: {\r\n\r\n    },\r\n  left: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n      position: 'relative',\r\n\r\n  },fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\n\r\nexport default function Payments({...other}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const errorHandler = useErrorHandler();\r\n const loadingCtx = React.useContext(loadingContext);\r\n  return (\r\n      <div>\r\n          <h1>{t(\"payments\")}</h1>\r\n\r\n      <List className={classes.list}>\r\n        <ListItem button\r\n                  onClick={() => {\r\n                      if (loadingCtx.loading) return;\r\n                      loadingCtx.startLoading();\r\n                      PaymentsDataService\r\n                          .downloadCsv(null, null,'*', null)\r\n                          .then(...errorHandler({}))\r\n                          .finally(() => {\r\n                              loadingCtx.stopLoading();\r\n                          })\r\n\r\n                  }}>\r\n        <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n                csv\r\n            </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText id=\"name\" primary={t(\"export_all\")}/>\r\n\r\n    </ListItem>\r\n    <Divider/>\r\n    </List></div>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.component.js",["615","616"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Student from \"./students.student.component\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {Chip, Tooltip} from \"@material-ui/core\";\r\nimport StudentsDataService from \"../_services/students.service\";\r\nimport ItemsList from \"./items_list.component\";\r\nimport ExportSearchChip from \"./ExportSearchChip.component\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {downloadGodFile} from \"../_services/god.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {loadingContext} from \"../_context/loading-context\";\r\nimport ItemsListMain from \"./items_list_main.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  left: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n      position: 'relative',\r\n\r\n  },fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\n\r\nexport default function Students({...other}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const [students, setStudents] = useState([]);\r\n  const [newStudent, setNewStudent] = useState(false);\r\n  const [currentStudentId, setCurrentStudentId] = useState(null);\r\n    const handleError = useErrorHandler();\r\n  const query = new URLSearchParams(window.location.search);\r\n  const id = query.get('id');\r\n  const [hasNeeds, NEEDS] = useNeeds();\r\n  useEffect(() => {\r\n      if (id !== null && id !== undefined) setCurrentStudentId(id);\r\n  }, [id]);\r\n  const loadingCtx = React.useContext(loadingContext);\r\n\r\n\r\n  useEffect(() => {\r\n      if (currentStudentId !== null) setNewStudent(false);\r\n  }, [currentStudentId])\r\n\r\n  return (\r\n      <Grid container spacing={3} className={classes.root}>\r\n        <Grid item xs={4} className={classes.left}>\r\n          <h1>{t(\"students\")}</h1>\r\n            <ItemsListMain\r\n                setCurrentItemId={setCurrentStudentId}\r\n                currentItemId={currentStudentId}\r\n                items={students}\r\n                setItems={setStudents}\r\n                chips={[\r\n                    <Tooltip title={t(\"export_contact_sheets\")}\r\n                           aria-label={t(\"export_contact_sheets\")}>\r\n                    <Chip variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          disabled={loadingCtx.loading}\r\n                          size=\"small\"\r\n                          avatar={<Avatar>csv</Avatar>}\r\n                          label={t(\"export_all_plus\")}\r\n                          onClick={() => {\r\n                              if (loadingCtx.loading) return;\r\n                              loadingCtx.startLoading();\r\n                            downloadGodFile()\r\n                                .then(...handleError({}))\r\n                                .finally(() => {\r\n                                    loadingCtx.stopLoading();\r\n                                })\r\n                          }}/>\r\n                  </Tooltip>\r\n                ]}\r\n                usableFilters={[{\r\n                    name: 'enrolment_status',\r\n                    defaultValue: null,\r\n                    options: [\r\n                        {\r\n                            label: \"enrolled\",\r\n                            tooltip: \"only_enrolled\",\r\n                            name: 'enrolled'\r\n                        }, {\r\n                            label: \"pre-enrolled\",\r\n                            tooltip: \"only_preenrolled\",\r\n                            name: 'pre-enrolled'\r\n                        }, {\r\n                            label: \"early-unenrolled\",\r\n                            tooltip: \"only_earlyunenrolled\",\r\n                            name: 'early-unenrolled'\r\n                        }\r\n                    ]\r\n                },\r\n                    {\r\n                      name: 'default_payment_method',\r\n                        defaultValue: null,\r\n                        options: [\r\n                           {label: \"cash\", tooltip: \"only_cash\", name: 'cash'},\r\n                                {label: \"bank-transfer\", tooltip: \"only_banktransfer\", name: 'bank-transfer'},\r\n                                {\r\n                                    label: \"bank-direct-debit\",\r\n                                    tooltip: \"only_bankdirectdebit\",\r\n                                    name: 'bank-direct-debit'\r\n                                }\r\n                        ]\r\n                    }]}\r\n                defaultSearchBy=\"full_name\"\r\n                searchByOptions={[\"full_name\", \"id\"]}\r\n                dataService={StudentsDataService}\r\n                searchBarLabel=\"students\"\r\n            />\r\n\r\n            {hasNeeds([NEEDS.post]) && <Tooltip title={t(\"new_student\")}>\r\n                <Fab className={classes.fab} color=\"primary\" onClick={(e) => {\r\n                    setCurrentStudentId(null);\r\n                    setNewStudent(true);\r\n                }}>\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </Tooltip>}\r\n        </Grid>\r\n\r\n        <Grid item xs={8} className={classes.left}>\r\n          <Student\r\n            currentStudentId={currentStudentId}\r\n            newStudent={newStudent}\r\n            setNewStudent={setNewStudent}\r\n            addStudentId={(id) =>{\r\n                setCurrentStudentId(id);\r\n            }}\r\n            deleteStudent={(studentId) => {\r\n                if (studentId === currentStudentId) setCurrentStudentId(null);\r\n\r\n                setStudents(students.filter((s) => s['id'] !== studentId));\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\courses.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\emailTo.component.js",["617","618","619"],"import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode\r\n        .toUpperCase()\r\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => (createStyles({\r\n  textField: {\r\n    '& label.Mui-focused':  {color: theme.palette.primary.main},  // todo color to theme\r\n    '& .MuiInput-underline:after': {borderBottomColor: theme.palette.primary.main},\r\n      '& label':  {color:theme.palette.neutral.emphasisText.medium},\r\n      '& fieldset': {borderColor: theme.palette.neutral.emphasisText.medium},\r\n  },\r\n    option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },})));\r\n\r\nexport default function EmailTo({formik, name, label, options, addTo, ...textFieldProps}) {\r\n\r\n  const [option, _setOption] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    _setOption(null);\r\n  }, [name]);\r\n\r\n  const setOption = (option) => {\r\n      const newOption = (option !== null)? option.code: '';\r\n      formik.setFieldValue(name, newOption);\r\n      _setOption(option);\r\n      if (option) addTo(option);\r\n  }\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const [inputValue, setInputValue] = React.useState('');\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Autocomplete\r\n      style={{ width: \"100%\" }}\r\n      options={options}\r\n      classes={{\r\n        option: classes.option,\r\n      }}\r\n      autoHighlight\r\n      getOptionLabel={(option) => option.name }\r\n      getOptionSelected={(o) => o.id === option.id}\r\n      value={option}\r\n        onChange={(event, newValue) => {\r\n          setOption(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        name={name}\r\n      onBlur={formik.handleBlur}\r\n      renderOption={(option) => (\r\n        <React.Fragment key={option.id}>\r\n          <span>{option.name}</span>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          fullWidth={1}\r\n          className={classes.textField}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n          error={formik.status  || formik.errors[name] !== undefined}\r\n        helperText={formik.touched[name] && formik.errors[name]}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_students.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_attendance.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list_main.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.component.js",["620"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport CoursesDataService from \"../_services/courses.service\";\r\nimport StudentsDataService from \"../_services/students.service\";\r\nimport TeachersDataService from \"../_services/teachers.service\";\r\nimport CourseRoomsDataService from \"../_services/course_rooms.service\";\r\nimport RoomsDataService from \"../_services/rooms.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport CourseStudentsDataService from \"../_services/course_students.service\";\r\nimport CourseTeachersDataService from \"../_services/course_teachers.service\";\r\nimport CourseDetails from \"./courses.course.details.component\";\r\nimport CourseLabels from \"./courses.course.labels.component\";\r\nimport CourseSchedule from \"./courses.course.schedule.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport AddDeleteSubresource from \"./subresource_add_delete.component\";\r\nimport TabFrame, {a11yProps} from \"./tab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentPanel: {\r\n    //flex: 1,\r\n      position: 'relative', // todo proper scrollbar\r\n    overflow: \"auto\",\r\n    boxSizing: \"border-box\",\r\n      height: '100%', // todo proper,\r\n    display: 'flex',\r\n      flexDirection: 'column'\r\n  },\r\n    content: {\r\n      overflowX: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        flex: 1,\r\n        height: '100%'\r\n    },\r\n    tab: {\r\n      height: '100%'\r\n    }\r\n}));\r\n\r\n\r\nexport default function Course({currentCourseId, setNewCourse, addCourseId, newCourse, deleteCourse}) {\r\n  const loading = currentCourseId === null;\r\n\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const [course, setCourse] = useState(null);  // todo rename to student\r\nconst [hasNeeds, NEEDS] = useNeeds();\r\n  useEffect(() => {\r\n    if (loading) return setCourse(null);\r\n    CoursesDataService\r\n            .getOne(currentCourseId)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setCourse(res[\"data\"]);\r\n                });\r\n  }, [currentCourseId])\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n   useEffect(()=>{\r\n    setValue(0);\r\n  }, [currentCourseId])\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} square className={classes.contentPanel}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"on\"\r\n                >\r\n                  <Tab label={t(\"course\")} {...a11yProps(0)} />\r\n                   { !newCourse &&\r\n                  <Tab label={t(\"labels\")} {...a11yProps(1)} />}\r\n\r\n                    { !newCourse && hasNeeds([NEEDS.schedules]) &&\r\n                  <Tab label={t(\"schedules\")} {...a11yProps(2)} />}\r\n\r\n                   { !newCourse && hasNeeds([NEEDS.students]) &&\r\n                  <Tab label={t(\"students\")} {...a11yProps(3)} />}\r\n\r\n                   { !newCourse && hasNeeds([NEEDS.teachers]) &&\r\n                  <Tab label={t(\"teachers\")} {...a11yProps(4)} />}\r\n\r\n                   { !newCourse && hasNeeds([NEEDS.rooms]) &&\r\n                  <Tab label={t(\"rooms\")} {...a11yProps(5)} />}\r\n\r\n                </Tabs>\r\n              </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            containerStyle={{height: '100%'}}\r\n            className={classes.content}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n\r\n            <TabFrame value={value} index={0}>  <CourseDetails\r\n                    newCourse={newCourse}\r\n                    setNewCourse={setNewCourse}\r\n                    dir={theme.direction}\r\n                    currentCourse={course}\r\n                    updateCurrentCourse={setCourse}\r\n                    deleteCourse={deleteCourse}\r\n            /></TabFrame>\r\n\r\n         <TabFrame value={value} index={1}>     <CourseLabels\r\n                      dir={theme.direction}\r\n                      currentCourse={course}\r\n                      updateCurrentCourse={setCourse}\r\n                      deleteCourse={deleteCourse}\r\n         /></TabFrame>\r\n\r\n              {hasNeeds([NEEDS.schedules]) && <TabFrame value={value} index={2}>\r\n                  <CourseSchedule\r\n                        setScheduleIds={(ids) => setCourse({...course, schedules: ids})}\r\n                       className={classes.tab}\r\n                       dir={theme.direction}\r\n                       scheduleIds={course === null ? null : course.schedules}\r\n                       student_id={currentCourseId}\r\n              /></TabFrame>}\r\n\r\n              {hasNeeds([NEEDS.students]) &&\r\n\r\n            <TabFrame value={value} index={3}>  <AddDeleteSubresource\r\n                  defaultSearchBy=\"full_name\"\r\n                  parentItemDataService={CourseStudentsDataService}\r\n                  itemDataService={StudentsDataService}\r\n                  add_message_confirm=\"confirm_enroll_to_course\"\r\n                  parent_id={currentCourseId}\r\n                  searchByOptions={[\"full_name\"]}\r\n                  resourceName={\"students\"}\r\n                  displayNameField={\"full_name\"}\r\n                  add_message=\"enroll_to_course\"\r\n                  onSubresourceAdded={(id) => {\r\n                    setCourse({\r\n                                       ...course,\r\n                                       students: [...course['students'], id]\r\n                                   })\r\n                  }}\r\n                  onSubresourceDeleted={(id) => {\r\n                    setCourse({\r\n                           ...course,\r\n                           students: course['students'].filter((s) => s !== id)\r\n                       });\r\n                  }}\r\n            /></TabFrame>\r\n\r\n\r\n\r\n              }\r\n\r\n              {hasNeeds([NEEDS.teachers]) &&\r\n\r\n                 <TabFrame value={value} index={4}>  <AddDeleteSubresource\r\n                  defaultSearchBy=\"full_name\"\r\n                  parentItemDataService={CourseTeachersDataService}\r\n                  itemDataService={TeachersDataService}\r\n                  add_message_confirm=\"confirm_add_to_course\"\r\n                  parent_id={currentCourseId}\r\n                  searchByOptions={[\"full_name\"]}\r\n                  resourceName={\"teachers\"}\r\n                  displayNameField={\"full_name\"}\r\n                  add_message=\"add_teacher\"\r\n                  onSubresourceAdded={(id) => {\r\n                    setCourse({\r\n                                       ...course,\r\n                                       teachers: [...course['teachers'], id]\r\n                                   })\r\n                  }}\r\n                  onSubresourceDeleted={(id) => {\r\n                    setCourse({\r\n                           ...course,\r\n                           teachers: course['teachers'].filter((c) => c !== id)\r\n                       });\r\n                  }}\r\n                 /></TabFrame>\r\n\r\n              }\r\n\r\n               {hasNeeds([NEEDS.rooms]) &&\r\n\r\n                 <TabFrame value={value} index={5}>  <AddDeleteSubresource\r\n                  defaultSearchBy=\"name\"\r\n                  parentItemDataService={CourseRoomsDataService}\r\n                  itemDataService={RoomsDataService}\r\n                  add_message_confirm=\"confirm_link_to_room\"\r\n                  parent_id={currentCourseId}\r\n                  searchByOptions={[\"name\"]}\r\n                  resourceName={\"rooms\"}\r\n                  displayNameField={\"name\"}\r\n                  add_message=\"link_room\"\r\n                  onSubresourceAdded={(id) => {\r\n                    setCourse({\r\n                                       ...course,\r\n                                       rooms: [...course['rooms'], id]\r\n                                   })\r\n                  }}\r\n                  onSubresourceDeleted={(id) => {\r\n                    setCourse({\r\n                           ...course,\r\n                           rooms: course['rooms'].filter((c) => c !== id)\r\n                       });\r\n                  }}\r\n                 /></TabFrame>\r\n\r\n              }\r\n\r\n\r\n          </SwipeableViews>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\students.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\god.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list.component.js",["621","622","623","624"],"import React, {useEffect, useState} from \"react\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SearchBar from './searchbar.component'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Accordion, AccordionDetails, AccordionSummary, Chip, ListItemSecondaryAction} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExportSearchChip from \"./ExportSearchChip.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flex: 1,\r\n        overflow: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    list: {\r\n        overflow: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flex: 1,\r\n        minHeight: '150px'\r\n    },\r\n    searchAndFilters: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    pagination: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    avatar: {},\r\n    selectedAvatar: {\r\n        backgroundColor: theme.palette.primary.dark\r\n    },\r\n    chips: {\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    },\r\n    noResults: {\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst ItemsList = ({setCurrentItemId=() => {}, onItemClick = () => {}, parent_id=null, secondaryDisplayNameField=null,\r\n                        secondaryAction=null, secondaryActionNeeds=[], secondaryActionTooltip=null, secondaryActionIcon=null, secondaryActionCallable=null,\r\n                       withAvatar=true, withFiltersBox = true,\r\n                       chips=[], currentItemId = null, items, setItems, displayNameField=\"full_name\",\r\n                       usableFilters=[], defaultSearchBy=\"full_name\", searchByOptions=[\"full_name\"],\r\n                        dataService, searchBarLabel, exportPage=true, exportAllPages=true}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [filters, setFilters] = useState(usableFilters.reduce((map, f) => {\r\n        map[f.name] = f.initialValue;\r\n        return map;\r\n        }, {})\r\n    );\r\n    const [searchBy, setSearchBy] = useState(defaultSearchBy);\r\n\r\n    const {t} = useTranslation();\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const errorHandler = useErrorHandler();\r\n     const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n    const classes = useStyles();\r\n\r\n    const onChangeSearchTerm = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const resetSearchBy = () => {\r\n        setSearchBy(defaultSearchBy);\r\n    }\r\n\r\n    function getFilters(){\r\n        return Object.fromEntries(Object.entries(filters).filter(([k,v]) => (v !== null)))\r\n    }\r\n\r\n    function search() {\r\n        dataService\r\n            .getAll({name: searchBy, value: searchTerm}, page, [...new Set(['id', displayNameField, secondaryDisplayNameField === null? 'id': secondaryDisplayNameField])], getFilters(), parent_id)\r\n            .then(...errorHandler({}))\r\n            .then(function (res) {\r\n                setItems(res[\"data\"]);\r\n                setCount(res[\"_pagination\"][\"totalPages\"]);\r\n            });\r\n    }\r\n\r\n    // we don't want the search to trigger for each searchTerm change\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        if (page === 1) {\r\n            search(); // no need to change page, since we are at page 1\r\n        } else {\r\n            setPage(1);  // will trigger search due tot the effect below\r\n        }\r\n    }, [filters]);  // todo\r\n\r\n    useEffect(search, [page, searchBy, parent_id]);\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.searchAndFilters}>\r\n                <SearchBar\r\n                    label={t(searchBarLabel)}\r\n                    value={searchTerm}\r\n                    onChange={onChangeSearchTerm}\r\n                    onSearch={() => {\r\n                        if (page === 1){\r\n                            search();\r\n                        } else {\r\n                            setPage(1);  // search will be triggered\r\n                        }\r\n\r\n                    }}\r\n                />\r\n\r\n                {withFiltersBox && <Accordion>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\r\n                        <Typography className={classes.heading}>{t(\"filters_actions\")}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Box className={classes.chips}>\r\n\r\n                            {exportPage && Array.isArray(items) && items.length > 0 && <ExportSearchChip\r\n                                searchTerm={searchTerm}\r\n                                page={page}\r\n                                searchTermField={searchBy}\r\n                                dataService={dataService}\r\n                                getFilters={getFilters}\r\n                            />}\r\n                            {exportAllPages && Array.isArray(items) && items.length > 0 && <ExportSearchChip\r\n                                searchTerm={searchTerm}\r\n                                page={page}\r\n                                dataService={dataService}\r\n                                searchTermField={searchBy}\r\n                                exportAll={true}\r\n                                getFilters={getFilters}\r\n                            />}\r\n\r\n                            {chips.map((chip) => (\r\n                                chip\r\n                            ))}\r\n\r\n                            ·\r\n\r\n                            {searchByOptions.map(option => (\r\n                                <Tooltip key={option} title={`${t(\"search_by\")} ${t(option)}`}>\r\n                                    <Chip size=\"small\"\r\n                                          color={searchBy === option ? \"primary\" : \"default\"}\r\n                                          label={`${t(\"search_by\")} ${t(option)}`}\r\n                                          onClick={(e) => {\r\n                                              if (searchBy === option) {\r\n                                                  resetSearchBy();\r\n                                              } else {\r\n                                                  setSearchBy(option);\r\n                                              }\r\n                                          }}/>\r\n                                </Tooltip>\r\n                            ))}\r\n\r\n\r\n                            {usableFilters.map(f => (\r\n                                <React.Fragment>\r\n                                    · {f['options'].map(option => (\r\n                                        <Tooltip key={f.name + option.name}\r\n                                                 title={t(option.tooltip)}\r\n                                                 aria-label={t(option.tooltip)}>\r\n                                            <Chip size=\"small\"\r\n                                                  color={filters[f.name] === option.name ? \"primary\" : \"default\"}\r\n                                                  label={t(option.label)}\r\n                                                  onClick={(e) => {\r\n                                                      setFilters({\r\n                                                          ...filters,\r\n                                                          [f.name]: (filters[f.name] === option.name) ? null : option.name\r\n                                                      })\r\n                                                  }}/>\r\n                                        </Tooltip>\r\n                                    )\r\n                                )}\r\n\r\n                                </React.Fragment>))\r\n                            }\r\n                        </Box>\r\n                    </AccordionDetails>\r\n                </Accordion>}\r\n\r\n\r\n                <Box my={2}>\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        count={count}\r\n                        page={page}\r\n                        size=\"small\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                        siblingCount={1}\r\n                        boundaryCount={1}\r\n                        color=\"primary\"\r\n                        onChange={handlePageChange}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <List className={classes.list}>\r\n                {items && items.map((item) => (\r\n                    <div key={item[\"id\"]}>\r\n                        <ListItem key={item[\"id\"]} button\r\n                                  onClick={() => {\r\n                                      onItemClick(item['id']);\r\n                                      setCurrentItemId(item['id']);\r\n                                  }}>\r\n                            {withAvatar && <ListItemAvatar>\r\n                                <Avatar\r\n                                    className={item[\"id\"] === currentItemId ? classes.selectedAvatar : classes.avatar}>{item[displayNameField].charAt(0).toUpperCase()}</Avatar>\r\n                            </ListItemAvatar>}\r\n                            <ListItemText id=\"name\" primary={item[displayNameField]} secondary={secondaryDisplayNameField === null? null: item[secondaryDisplayNameField]}/>\r\n\r\n                            {secondaryAction &&  hasNeeds(secondaryActionNeeds) &&\r\n                            <ListItemSecondaryAction>\r\n                                <Tooltip title={t(secondaryActionTooltip)}>\r\n                                    <IconButton edge=\"end\" aria-label={t(\"export\")} onClick={(e) => {\r\n                                        secondaryActionCallable(item['id']);\r\n                                    }}>\r\n                                        {secondaryActionIcon}\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </ListItemSecondaryAction>}\r\n                        </ListItem>\r\n                        <Divider/>\r\n                    </div>\r\n                ))}\r\n                {\r\n                    (items.length === 0) && <Typography className={classes.noResults}>\r\n                        {t(\"no_results\") +\" 👀\"}\r\n                    </Typography>\r\n                }\r\n            </List>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ItemsList;\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\ExportSearchChip.component.js",["625","626","627"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Chip, CircularProgress} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {themeContext} from \"../_context/theme-context\";\r\nimport {loadingContext} from \"../_context/loading-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap'\r\n  },\r\n}));\r\n\r\nexport default function ExportSearchChip({searchTermField=\"full_name\", searchTerm=null, page=null, dataService, exportAll=false, getFilters=null}) {\r\n  const classes = useStyles();\r\n\r\n  const {t} = useTranslation();\r\n  const errorHandler = useErrorHandler();\r\n  const loadingCtx = React.useContext(loadingContext);\r\n\r\n  return (\r\n      <Tooltip title={t(exportAll ? \"export_all_csv\" : \"export_results_csv\")}\r\n               aria-label={t(exportAll ? \"export_all_csv\" : \"export_results_csv\")}>\r\n\r\n        <Chip variant=\"outlined\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              disabled={loadingCtx.loading}\r\n              avatar={<Avatar>csv</Avatar>}\r\n              label={t(exportAll ? \"export_all\" : \"export\")}\r\n              onClick={() => {\r\n                if (loadingCtx.loading) return;\r\n\r\n                loadingCtx.startLoading();\r\n                dataService\r\n                    .downloadCsv(searchTermField, searchTerm,\r\n                        exportAll ? \"*\" : page,\r\n                        getFilters === null ? {} : getFilters(),\r\n                        exportAll)\r\n                    .then(...errorHandler({}))\r\n                    .finally(() => {\r\n                      loadingCtx.stopLoading();\r\n                    })\r\n              }}/>\r\n      </Tooltip>\r\n\r\n  );\r\n}","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.component.js",["628","629"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Attendee from \"./students.student.attendee.component\";\r\nimport Guardian from \"./students.student.guardian.component\";\r\nimport StudentsDataService from \"../_services/students.service\";\r\nimport Payments from \"./students.student.payments.component\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport Schedule from \"./students.student.schedule.component\";\r\nimport StudentsCourseDataService from \"../_services/student_courses.service\";\r\nimport CoursesDataService from \"../_services/courses.service\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport AddDeleteSubresource from \"./subresource_add_delete.component\";\r\nimport TabFrame, {a11yProps} from \"./tab\";\r\nimport SchedulesDataService from \"../_services/schedules.service\";\r\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentPanel: {\r\n    //flex: 1,\r\n      position: 'relative', // todo proper scrollbar\r\n    overflow: \"auto\",\r\n    boxSizing: \"border-box\",\r\n      height: '100%', // todo proper,\r\n    display: 'flex',\r\n      flexDirection: 'column'\r\n  },\r\n    content: {\r\n      overflowX: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        flex: 1,\r\n        height: '100%'\r\n    },\r\n    tab: {\r\n      height: '100%'\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Student({setNewStudent,newStudent,addStudentId, currentStudentId, deleteStudent, ...props}) {\r\n\r\n  const loading = currentStudentId === null;\r\n\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const [student, setStudent] = useState(null);  // todo rename to student\r\n  const [newGuardian, setNewGuardian] = useState(false);\r\n    const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n\r\n  useEffect(() => {\r\n    if (loading) return setStudent(null);\r\n    StudentsDataService\r\n            .getOne(currentStudentId)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setStudent(res[\"data\"]);\r\n                });\r\n  }, [currentStudentId])\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n   useEffect(()=>{\r\n    setValue(0);\r\n  }, [currentStudentId])\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n\r\n\r\n  const guardians = student === null? []: student.guardians;\r\n    // todo maybe tabs with or only with icons\r\n  return (\r\n    <Paper elevation={3} square className={classes.contentPanel}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"on\"\r\n                >\r\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\r\n\r\n                    { !newStudent && hasNeeds([NEEDS.schedules]) &&\r\n                  <Tab label={t(\"schedules\")} {...a11yProps(1)} />}\r\n                 { !newStudent  && hasNeeds([NEEDS.payments]) &&  <Tab label={t(\"payments\")} {...a11yProps(2)} />}\r\n                 { !newStudent  && hasNeeds([NEEDS.courses]) &&  <Tab label={t(\"courses\")} {...a11yProps(3)} />}\r\n\r\n                  {\r\n                  (!newStudent && guardians  && hasNeeds([NEEDS.guardians]) ) && guardians.map((contact, index) => (\r\n                  <Tab key={t(\"contact\") + \" \" + (index+1)} label={t(\"contact\") + \" \" + (index+1)} {...a11yProps(index+4)} />\r\n                      ))}\r\n\r\n\r\n                  {\r\n                    (!newStudent && newGuardian) &&\r\n                        <Tab key={t(\"new_guardian\")} label={t(\"new_guardian\")} {...a11yProps(4+guardians.length)} />\r\n                  }\r\n\r\n\r\n                </Tabs>\r\n              </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            containerStyle={{height: '100%'}}\r\n            className={classes.content}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabFrame value={value} index={0}>\r\n                <Attendee\r\n                      setNewStudent={setNewStudent}\r\n                      dir={theme.direction}\r\n                      newStudent={newStudent}\r\n                      title={t(\"attendee\")}\r\n                      currentStudent={student}\r\n                      addStudentId={addStudentId}\r\n                      patchService={StudentsDataService}\r\n                      updateCurrentStudent={setStudent}\r\n                      deleteStudent={deleteStudent}\r\n                      addNewGuardian={() => {\r\n                        setNewGuardian(true);\r\n                        setValue(4+guardians.length);\r\n                      }}/>\r\n            </TabFrame>\r\n\r\n              {hasNeeds([NEEDS.schedules]) && <TabFrame value={value} index={1}>\r\n              <Scheduler\r\n                    allowDelete={(s) => !s.is_base}\r\n                    allowView={true}\r\n                    viewUrl={(s) => ['/courses', s.course_id]}\r\n                    setScheduleIds={(ids) => setStudent({...student, schedules: ids})}\r\n                    onEventChange={(info, day_week, start_time, end_time, schedule) => {\r\n                       const newEvent = info.event;\r\n                       let body = {};\r\n                        body['day_week'] = day_week;\r\n                        body['start_time'] = start_time;\r\n                        body['end_time'] = end_time;\r\n\r\n                        if (schedule[\"is_base\"]) {\r\n                            body['course_id'] = schedule[\"course_id\"];\r\n                            body['student_id'] = currentStudentId;\r\n                            SchedulesDataService\r\n                                    .post(body)\r\n                                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\r\n                                    .then(function (res) {\r\n                                        let calendarApi = info.view.calendar;\r\n                                        newEvent['is_base'] = false;  // todo needed?\r\n                                        calendarApi.addEvent(eventFromSchedule(theme, res));\r\n                                        info.revert();\r\n                                        setStudent({...student, schedules: [...student.schedules, res.id]})\r\n                                    }).catch(function(err){\r\n                                        info.revert();\r\n                            });\r\n\r\n                        } else {\r\n                            SchedulesDataService\r\n                                    .patch({id: schedule['id'],\r\n                                                                body: body,\r\n                                                                initial_values: schedule})\r\n                                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\r\n                                    .then(function (res) {\r\n                                    }).catch(function (err){\r\n                                        info.revert();\r\n                                    });\r\n                        }\r\n                    }}\r\n                    scheduleIds={student === null ? null : student['schedules']}\r\n                    editable={true}\r\n                    selectable={false}\r\n                />\r\n\r\n              </TabFrame>}\r\n              {hasNeeds([NEEDS.payments]) && <TabFrame value={value} index={2}>\r\n                  <Payments\r\n                         paymentIds={student === null ? null : student.payments}\r\n                         addPaymentId={(payment_id) => {\r\n                             setStudent({...student, payments: [...student.payments, payment_id]})\r\n                         }}\r\n                         student_id={currentStudentId}\r\n                         deletePaymentFromStudent={(payment_id) => {\r\n                             setStudent({\r\n                                 ...student,\r\n                                 payments: student.payments.filter((p) => p !== payment_id)\r\n                             });\r\n                         }}\r\n              /></TabFrame>}\r\n\r\n              {hasNeeds([NEEDS.courses]) &&\r\n\r\n             <TabFrame value={value} index={3}> <AddDeleteSubresource\r\n                  defaultSearchBy=\"name\"\r\n                  parentItemDataService={StudentsCourseDataService}\r\n                  itemDataService={CoursesDataService}\r\n                  add_message_confirm=\"confirm_enroll_to_course\"\r\n                  parent_id={currentStudentId}\r\n                  secondaryDisplayNameField=\"description\"\r\n                  searchByOptions={[\"name\"]}\r\n                  resourceName={\"courses\"}\r\n                  displayNameField={\"name\"}\r\n                  add_message=\"enroll_to_course\"\r\n                  onSubresourceAdded={(id) => {\r\n                    setStudent({...student, courses: [...student[\"courses\"], id]})\r\n                  }}\r\n                  onSubresourceDeleted={(id) => {\r\n                    setStudent({...student, courses: student[\"courses\"].filter(x => x !== id)});\r\n                  }}\r\n             /></TabFrame>\r\n              }\r\n\r\n            {\r\n              guardians && hasNeeds([NEEDS.guardians]) && guardians.map((guardian, index) => (\r\n                  <TabFrame value={value} index={index+4}>\r\n                      <Guardian\r\n                            key={guardian}\r\n                            dir={theme.direction}\r\n                            guardianId={guardian}\r\n                            deleteGuardianId={(id) => {\r\n                              setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\r\n                              setValue(0);\r\n                            }}\r\n                  /></TabFrame>\r\n                  ))}\r\n\r\n                  <TabFrame value={value} index={4+guardians.length}>\r\n                      <Guardian\r\n                        dir={theme.direction}\r\n                        newGuardian={true}\r\n                        deleteNewGuardian={() => {\r\n                            setNewGuardian(false);\r\n                            setValue(0);\r\n                        }}\r\n                            studentId={currentStudentId}\r\n                        addGuardianId={(id) => {\r\n                            setNewGuardian(false);\r\n                            setStudent({...student, guardians: [...student.guardians, id]});\r\n                            setValue(4+guardians.length);\r\n                        }\r\n                        }\r\n                        deleteGuardianId={(id) => {\r\n                            setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\r\n                            setValue(0);\r\n                        }}\r\n                  /></TabFrame>\r\n\r\n          </SwipeableViews>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\payments.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.teacher.component.js",["630"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport TeachersDataService from \"../_services/teachers.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport TeachersCoursesDataService from \"../_services/teachers_courses.service\";\r\nimport TeacherDetails from \"./teachers.teacher.details.component\";\r\nimport TeacherSchedule from \"./teachers.teacher.schedule.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport CoursesDataService from \"../_services/courses.service\";\r\nimport AddDeleteSubresource from \"./subresource_add_delete.component\";\r\nimport TabFrame, {a11yProps} from \"./tab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentPanel: {\r\n    //flex: 1,\r\n      position: 'relative', // todo proper scrollbar\r\n    overflow: \"auto\",\r\n    boxSizing: \"border-box\",\r\n      height: '100%', // todo proper,\r\n    display: 'flex',\r\n      flexDirection: 'column'\r\n  },\r\n    content: {\r\n      overflowX: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        flex: 1,\r\n        height: '100%'\r\n    },\r\n    tab: {\r\n      height: '100%'\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Teacher({currentTeacherId, setNewTeacher, addTeacherId, newTeacher, deleteTeacher}) {\r\n  const loading = currentTeacherId === null;\r\n\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const [teacher, setTeacher] = useState(null);  // todo rename to student\r\n\r\n  useEffect(() => {\r\n    if (loading) return setTeacher(null);\r\n    TeachersDataService\r\n            .getOne(currentTeacherId)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setTeacher(res[\"data\"]);\r\n                });\r\n  }, [currentTeacherId])\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n   useEffect(()=>{\r\n    setValue(0);\r\n  }, [currentTeacherId])\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n  return (\r\n    <Paper elevation={3} square className={classes.contentPanel}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"on\"\r\n                >\r\n                  <Tab label={t(\"teacher\")} {...a11yProps(0)} />\r\n\r\n                    { !newTeacher && hasNeeds([NEEDS.schedules]) &&\r\n                  <Tab label={t(\"schedules\")} {...a11yProps(1)} />}\r\n\r\n                   { !newTeacher && hasNeeds([NEEDS.courses]) &&\r\n                  <Tab label={t(\"courses\")} {...a11yProps(2)} />}\r\n\r\n                </Tabs>\r\n              </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            containerStyle={{height: '100%'}}\r\n            className={classes.content}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n\r\n              <TabFrame value={value} index={0}>\r\n                  <TeacherDetails\r\n                    newRoom={newTeacher}\r\n                    setNewRoom={setNewTeacher}\r\n                    dir={theme.direction}\r\n                    currentStudent={teacher}\r\n                    updateCurrentStudent={setTeacher}\r\n                    deleteStudent={deleteTeacher}\r\n              /></TabFrame>\r\n\r\n\r\n              {hasNeeds([NEEDS.schedules]) && <TabFrame value={value} index={1}>\r\n                  <TeacherSchedule\r\n                                className={classes.tab}\r\n                                dir={theme.direction}\r\n                                scheduleIds={teacher === null ? null : teacher['schedules']}\r\n                                student_id={currentTeacherId}\r\n              /></TabFrame>}\r\n\r\n              {hasNeeds([NEEDS.courses]) &&\r\n<TabFrame value={value} index={2}>\r\n              <AddDeleteSubresource\r\n                  defaultSearchBy=\"name\"\r\n                  parentItemDataService={TeachersCoursesDataService}\r\n                  itemDataService={CoursesDataService}\r\n                  add_message_confirm=\"confirm_enroll_to_course\"\r\n                  parent_id={currentTeacherId}\r\n                  secondaryDisplayNameField=\"description\"\r\n                  searchByOptions={[\"name\"]}\r\n                  resourceName={\"courses\"}\r\n                  displayNameField={\"name\"}\r\n                  value={value}\r\n                  add_message=\"enroll_to_course\"\r\n                  index={2}\r\n                  onSubresourceAdded={(id) => {\r\n                    setTeacher({\r\n                                ...teacher,\r\n                                courses: [...teacher['courses'], id]\r\n                            })\r\n                  }}\r\n                  onSubresourceDeleted={(id) => {\r\n                     setTeacher({\r\n                                ...teacher,\r\n                                courses: teacher['courses'].filter((c) => c !== id)\r\n                            });\r\n                  }}\r\n              /></TabFrame>}\r\n\r\n\r\n          </SwipeableViews>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\teachers.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\needs_selection.component.js",["631","632"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport {allNeeds} from \"../_data/needs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DirtyCheckbox from \"./dirty_checkbox\";\r\n\r\nexport default function NeedsSelection({formik, name=\"needs\", noDirty=false}) {\r\n  const { t } = useTranslation();\r\n\r\n  return <React.Fragment>\r\n      <Typography>{t(\"permissions\")}</Typography>\r\n                  {allNeeds.map(need => (\r\n                    <FormControlLabel\r\n                        control={\r\n                            <DirtyCheckbox\r\n                            checked={formik.values[name]===undefined? false: formik.values[name].includes(need.name)}\r\n                            name={name}\r\n                            value={need.name}\r\n                            formik={formik}\r\n                            noDirty={noDirty}\r\n                            />\r\n                        }\r\n                        key={need.name}\r\n                        label={t(need.description)}\r\n                      />))}\r\n        </React.Fragment>\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\users.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.user.component.js",["633","634"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport UsersDataService from \"../_services/users.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport UserPerson from \"./users.user.userperson.component\";\r\nimport UserPermissions from \"./users.user.permissions.component\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport TabFrame, {a11yProps} from \"./tab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentPanel: {\r\n    //flex: 1,\r\n      position: 'relative', // todo proper scrollbar\r\n    overflow: \"auto\",\r\n    boxSizing: \"border-box\",\r\n      height: '100%', // todo proper,\r\n    display: 'flex',\r\n      flexDirection: 'column'\r\n  },\r\n    content: {\r\n      overflowX: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        flex: 1,\r\n        height: '100%'\r\n    },\r\n    tab: {\r\n      height: '100%'\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function User({currentUserId, deleteUser}) {\r\n  const loading = currentUserId === null;\r\n\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (loading) return setUser(null);\r\n    UsersDataService\r\n            .getOne(currentUserId)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setUser(res[\"data\"]);\r\n                });\r\n  }, [currentUserId])\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n   useEffect(()=>{\r\n    setValue(0);\r\n  }, [currentUserId])\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n\r\n  return (\r\n    <Paper elevation={3} square className={classes.contentPanel}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"on\"\r\n                >\r\n                  <Tab label={t(\"user\")} {...a11yProps(0)} />\r\n                  <Tab label={t(\"permissions\")} {...a11yProps(1)} />\r\n                </Tabs>\r\n              </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            containerStyle={{height: '100%'}}\r\n            className={classes.content}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabFrame value={value} index={0}>\r\n            <UserPerson\r\n                      dir={theme.direction}\r\n                      currentStudent={user}\r\n                      updateCurrentStudent={setUser}\r\n                      deleteStudent={deleteUser}\r\n            /></TabFrame>\r\n<TabFrame value={value} index={1}>\r\n            <UserPermissions\r\n                      dir={theme.direction}\r\n                      currentStudent={user}\r\n                      updateCurrentStudent={setUser}\r\n                      deleteStudent={deleteUser}\r\n            /></TabFrame>\r\n\r\n          </SwipeableViews>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\userInvites.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.room.component.js",["635"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport RoomsDataService from \"../_services/rooms.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport RoomSchedule from \"./rooms.room.schedule.component\";\r\nimport RoomDetails from \"./rooms.room.details.component\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport TabFrame from \"./tab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentPanel: {\r\n    //flex: 1,\r\n      position: 'relative', // todo proper scrollbar\r\n    overflow: \"auto\",\r\n    boxSizing: \"border-box\",\r\n      height: '100%', // todo proper,\r\n    display: 'flex',\r\n      flexDirection: 'column'\r\n  },\r\n    content: {\r\n      overflowX: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        flex: 1,\r\n        height: '100%'\r\n    },\r\n    tab: {\r\n      height: '100%'\r\n    }\r\n}));\r\n\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\nexport default function Room({setNewRoom, currentRoomId, deleteRoom, newRoom, addRoomId}) {\r\n  const loading = currentRoomId === null;\r\n\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const [room, setRoom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (loading) return setRoom(null);\r\n    RoomsDataService\r\n            .getOne(currentRoomId)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setRoom(res[\"data\"]);\r\n                });\r\n  }, [currentRoomId])\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n   useEffect(()=>{\r\n    setValue(0);\r\n  }, [currentRoomId])\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n  return (\r\n    <Paper elevation={3} square className={classes.contentPanel}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"on\"\r\n                >\r\n                  <Tab label={t(\"room\")} {...a11yProps(0)} />\r\n\r\n                    { !newRoom && hasNeeds([NEEDS.schedules]) &&\r\n                  <Tab label={t(\"schedules\")} {...a11yProps(1)} />}\r\n\r\n                </Tabs>\r\n              </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            containerStyle={{height: '100%'}}\r\n            className={classes.content}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n                  <TabFrame value={value} index={0}> <RoomDetails\r\n\r\n                                newRoom={newRoom}\r\n                                setNewRoom={setNewRoom}\r\n                      dir={theme.direction}\r\n                      currentStudent={room}\r\n                      updateCurrentStudent={setRoom}\r\n                      deleteStudent={deleteRoom}\r\n                  /></TabFrame>\r\n\r\n\r\n              {hasNeeds([NEEDS.schedules]) && <TabFrame value={value} index={1}><RoomSchedule value={value}\r\n                             index={1}\r\n                             className={classes.tab}\r\n                             dir={theme.direction}\r\n                             scheduleIds={room === null ? null : room['schedules']}\r\n                             student_id={currentRoomId}\r\n              /></TabFrame>}\r\n\r\n          </SwipeableViews>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\rooms.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\service-factory.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\tab.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.labels.component.js",["636"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\"\r\nimport CourseLabelsDataService from \"../_services/course_labels.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\nimport SaveButton from \"./formik_save_button\";\r\nimport DiscardButton from \"./formik_discard_button\";\r\nimport LabelsSelection from \"./labels_selection.component\";\r\nimport {symmetricDifference} from \"../_helpers/set_operations\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionIcon: {\r\n    float: 'right'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction CourseLabels({  currentCourse, updateCurrentCourse, patchService, deleteCourse, ...other }) {\r\n  const { t } = useTranslation();\r\n  const loading = currentCourse === null;\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n\r\n  let initialValues = loading ? {} : currentCourse;\r\n\r\n\r\n    const formik = useNormik(false, {\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: (values, {setStatus, setSubmitting}) => {\r\n               setStatus();\r\n\r\n               const a = new Set(values[\"labels\"]);\r\n               const b = new Set(initialValues[\"labels\"]);\r\n               const difference = Array.from(symmetricDifference(a, b));\r\n\r\n               if (difference.size !== 0){\r\n                   setSubmitting(true);\r\n                   const jobs = difference.map(need => {\r\n                    if (b.has(need)){\r\n                       // has been removed\r\n                        return CourseLabelsDataService.delete(currentCourse['id'], need)\r\n                          .then(...errorHandler({}));\r\n                   } else {\r\n                        // has been added\r\n                        return CourseLabelsDataService.postWithId(currentCourse['id'], need)\r\n                          .then(...errorHandler({}));\r\n                    }\r\n                });\r\n                   Promise\r\n                       .all(jobs)\r\n                       .then(...errorHandler({snackbarSuccess: true}))\r\n                       .then(() => {\r\n                           updateCurrentCourse({...currentCourse, labels: values[\"labels\"]});\r\n                       })\r\n                       .finally(() => {\r\n                           setSubmitting(false);\r\n                       })\r\n               }\r\n\r\n\r\n\r\n\r\n        }\r\n    }, true);\r\n\r\n  return (\r\n        <Box p={3}>\r\n            <Box px={2}>\r\n\r\n              {loading?\r\n                (\r\n\r\n                    <Box>\r\n                         <IconButtonSkeleton className={classes.actionIcon}/>\r\n                       <IconButtonSkeleton className={classes.actionIcon}/>\r\n\r\n\r\n                            <div style={{clear: 'both'}}>\r\n                               <Box py={0} >\r\n                                        <Skeleton variant=\"text\" width={\"100%\"} height=\"150px\"/>\r\n                                    </Box>\r\n                            </div>\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <DiscardButton className={classes.actionIcon}\r\n                                        formik={formik}/>\r\n\r\n\r\n                        <SaveButton className={classes.actionIcon}\r\n                                    formik={formik}/>\r\n\r\n                                    <Box style={{display: \"inline-block\"}}>\r\n                        <LabelsSelection\r\n                formik={formik}\r\n            /></Box>\r\n\r\n                    </form>\r\n                )\r\n\r\n            }\r\n\r\n            </Box>\r\n        </Box>\r\n  );\r\n}\r\n\r\nexport default CourseLabels;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\subresource_add_delete.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.schedule.component.js",["637","638","639","640","641","642"],"import {useTranslation} from \"react-i18next\";\r\nimport React from \"react\";\r\nimport SchedulesDataService from \"../_services/schedules.service\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    calendar: {\r\n      margin: theme.spacing(2)\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction CourseSchedule({ title, scheduleIds, setScheduleIds, student_id, ...other }) {\r\n  const errorHandler = useErrorHandler();\r\n\r\n  return (\r\n    <div\r\n      {...other}\r\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\r\n\r\n    >\r\n        <Scheduler\r\n            allowDelete={(s) => true}\r\n            allowView={(s) => !s.is_base}\r\n            viewUrl={(s) => ['/students', s.student_id]}\r\n            setScheduleIds={setScheduleIds}\r\n            onEventChange={(info, day_week, start_time, end_time, schedule) => {\r\n                SchedulesDataService\r\n                    .patch({id: schedule['id'],\r\n                                                body: {day_week: day_week, start_time: start_time, end_time: end_time},\r\n                                                initial_values: schedule})\r\n                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\r\n                    .then(function (res) {})\r\n                    .catch(function (err){ info.revert(); });\r\n            }}\r\n            viewStudent={true}\r\n            scheduleIds={scheduleIds}\r\n            editable={true}\r\n            selectable={true}\r\n            onEventSelected={(day_week, start_time, end_time) => {\r\n                    SchedulesDataService\r\n                        .post({day_week: day_week, start_time: start_time, end_time: end_time, course_id: student_id})\r\n                        .then(res => {\r\n                            setScheduleIds([...scheduleIds, res['id']])\r\n                        })\r\n            }}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseSchedule;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\courses.course.details.component.js",["643","644","645","646"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport CoursesDataService from \"../_services/courses.service\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport * as yup from 'yup';\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\nimport SaveButton from \"./formik_save_button\";\r\nimport DiscardButton from \"./formik_discard_button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {DialogContent, MenuItem, TextField} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport StudentsDataService from \"../_services/students.service\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport {useFormik} from \"formik\";\r\nimport {DEFAULT_COURSE_PRICE_TERM} from \"../_data/price_term\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {loadingContext} from \"../_context/loading-context\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {downloadCalendar} from \"../_services/calendar.service\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionIcon: {\r\n    float: 'right'\r\n  },\r\n    textField: {\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    },\r\n    choose: {\r\n      marginBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nfunction CourseDetails({ children, addCourseId, setNewCourse, newCourse, currentCourse, updateCurrentCourse, patchService, deleteCourse, ...other }) {\r\n  const { t } = useTranslation();\r\n  const loading = currentCourse === null;\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n  const deleteFullCourse = (id_) => {\r\n    CoursesDataService\r\n              .delete(id_)\r\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\r\n              .then(function (res) {\r\n                deleteCourse(id_);\r\n              });\r\n  }\r\n\r\n  const [openDownloadAttendanceList, setOpenDownloadAttendanceList] = React.useState(false);\r\n\r\nconst confirm = React.useContext(confirmContext);\r\n\r\n  let initialValues = loading ? {} : currentCourse;\r\n  if (newCourse) {\r\n      initialValues = {\r\n          price_term: DEFAULT_COURSE_PRICE_TERM,\r\n          is_published: false\r\n      }\r\n  }\r\n\r\n    const formik2 = useFormik({\r\n        initialValues: {},\r\n        validationSchema: yup.object({\r\n            startDate: yup.date().required(t(\"required\")),\r\n             endDate: yup.date().required(t(\"required\")),\r\n        }),\r\n        enableReinitialize: true,\r\n        onSubmit: (values, {setStatus, setSubmitting}) => {\r\n\r\n\r\n            setSubmitting(true);\r\n            setStatus();\r\n\r\n             CoursesDataService\r\n                    .downloadSubresource(currentCourse[\"id\"], 'attendanceList', values)\r\n                    .then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(() => {\r\n                        setOpenDownloadAttendanceList(false);\r\n                    })\r\n                 .catch(() => {\r\n                     setStatus(true);\r\n                 })\r\n                 .finally(() => {\r\n                     setSubmitting(false);\r\n                 })\r\n\r\n\r\n        }\r\n    });\r\n\r\n    const formik = useNormik(!newCourse, {\r\n        initialValues: initialValues,\r\n        validationSchema: yup.object({\r\n            name: yup.string().required(t(\"name_required\")),\r\n        }),\r\n        enableReinitialize: true,\r\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\r\n            if (Object.keys(changedValues).length > 0) {\r\n                setStatus();\r\n\r\n                if (newCourse) {\r\n                    CoursesDataService.post(changedValues)\r\n                         .then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(function (new_id) {\r\n                        updateCurrentCourse(new_id);\r\n                        setNewCourse(false);\r\n                    }).catch(function (err) {\r\n                    setStatus(true);\r\n                    }).finally(() => {\r\n                    setSubmitting(false);\r\n                });\r\n                } else {\r\n                   CoursesDataService.patch({\r\n                    id: initialValues[\"id\"],\r\n                    body: changedValues,\r\n                    initial_values: initialValues\r\n                }).then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(function (patched_body) {\r\n                        formik.resetForm(patched_body);\r\n                        updateCurrentCourse(patched_body);\r\n                    }).catch(function (err) {\r\n                        setStatus(true);\r\n                    }).finally(() => {\r\n                        setSubmitting(false);\r\n                    });\r\n                }\r\n\r\n\r\n\r\n\r\n            } else {\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n    });\r\n     const loadingCtx = React.useContext(loadingContext);\r\nconst [hasNeeds, NEEDS] = useNeeds();\r\n  return (\r\n    <div\r\n      {...other}\r\n    >\r\n\r\n\r\n         <Dialog\r\n        open={openDownloadAttendanceList}\r\n        onClose={(e) => {setOpenDownloadAttendanceList(false)}}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      ><form onSubmit={formik2.handleSubmit}>\r\n        <DialogTitle id=\"alert-dialog-title\">{t(\"download\")}</DialogTitle>\r\n            <DialogContent>\r\n                <Typography className={classes.choose}>{t(\"chose_list_dates\")}</Typography>\r\n\r\n                <TextField\r\n                    id=\"date\"\r\n                    label={t(\"start\")}\r\n                    type=\"date\"\r\n                    value={formik2.values[\"startDate\"]}\r\n                    name={\"startDate\"}\r\n                    onChange={formik2.handleChange}\r\n                    onBlur={formik2.handleBlur}\r\n                    error={formik2.status  || formik2.errors[\"startDate\"] !== undefined}\r\n                    helperText={formik2.touched[\"startDate\"] && formik2.errors[\"startDate\"]}\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label={t(\"end\")}\r\n                    type=\"date\"\r\n                    value={formik2.values[\"endDate\"]}\r\n                    name={\"endDate\"}\r\n                    onChange={formik2.handleChange}\r\n                    error={formik2.status  || formik2.errors[\"endDate\"] !== undefined}\r\n                    helperText={formik2.touched[\"endDate\"] && formik2.errors[\"endDate\"]}\r\n                    onBlur={formik2.handleBlur}\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n            </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={(e) => {\r\n            setOpenDownloadAttendanceList(false);\r\n          }} color=\"primary\">\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          <Button type=\"submit\" color=\"primary\"   disabled={formik2.isSubmitting} autoFocus>\r\n            {t(\"download\")}\r\n          </Button>\r\n        </DialogActions></form>\r\n      </Dialog>\r\n\r\n\r\n        <Box p={3}>\r\n            <Box px={2}>\r\n\r\n              {!newCourse && loading ?\r\n                  <IconButtonSkeleton className={classes.actionIcon}/>\r\n              :\r\n               hasNeeds([NEEDS.delete]) && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\r\n                <IconButton onClick={(e) => {\r\n                    if (newCourse) {\r\n                        setNewCourse(false);\r\n                    } else{\r\n                        confirm.confirm(\"delete_course_question\", \"not_undone\", () => {\r\n                            deleteFullCourse(currentCourse['id']);\r\n                        })\r\n                    }\r\n\r\n                }}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              }\r\n\r\n              {!newCourse && loading?\r\n                (\r\n\r\n                    <Box>\r\n                         <IconButtonSkeleton className={classes.actionIcon}/>\r\n                       <IconButtonSkeleton className={classes.actionIcon}/>\r\n\r\n\r\n                            <div style={{clear: 'both'}}>\r\n                               {   [\"100%\", \"100%\", \"100%\"].map((value, idx) => {\r\n                                return (\r\n                                    <Box key={idx} py={0} >\r\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\r\n                                    </Box>);\r\n                            })}\r\n                            </div>\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <DiscardButton className={classes.actionIcon}\r\n                                        formik={formik}/>\r\n\r\n\r\n                        <SaveButton className={classes.actionIcon}\r\n                                    formik={formik}/>\r\n\r\n\r\n\r\n                        <DirtyTextField\r\n                            label={t(\"id\")}\r\n                            name=\"id\"\r\n                            disabled\r\n                            className={classes.line}\r\n                            formik={formik}\r\n                        />\r\n\r\n\r\n                        <DirtyTextField\r\n                            label={t(\"calendar_url\")}\r\n                            name=\"calendar_url\"\r\n                            disabled\r\n                            className={classes.line}\r\n                            formik={formik}\r\n                            />\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"name\")}\r\n                                style={{flex: 1}}\r\n                                name=\"name\"\r\n                                formik={formik}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                           <DirtyTextField\r\n                                label={t(\"description\")}\r\n                                style={{flex: 1}}\r\n                                multiline\r\n                                rowsMax={8}\r\n                                name=\"description\"\r\n                                formik={formik}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"price_term\")}\r\n                                style={{flex: 1}}\r\n                                name=\"price_term\"\r\n                                formik={formik}\r\n                                type=\"number\"\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"public\")}\r\n                                style={{flex: 1}}\r\n                                name=\"is_published\"\r\n                                formik={formik}\r\n                                select\r\n                            >\r\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\r\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\r\n                            </DirtyTextField>\r\n                        </Box>\r\n\r\n                    </form>\r\n\r\n\r\n                )\r\n\r\n\r\n\r\n            }\r\n\r\n             {!loading && !newCourse && <Box my={3}>\r\n            <Divider />\r\n            </Box>}\r\n\r\n            <Box className={[classes.line, classes.composite]}>\r\n                {!loading && hasNeeds([NEEDS.students]) &&  !newCourse &&\r\n                <Tooltip style={{flex: 1}} title={t(\"export_attendance_list\")} aria-label={t(\"send_grant_letter\")}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      startIcon={<GetAppIcon/>}\r\n                      onClick={(e) => {\r\n                        setOpenDownloadAttendanceList(true);\r\n                      }}\r\n                  >\r\n                    {t(\"attendance_list\")}\r\n                  </Button>\r\n                </Tooltip>}\r\n\r\n                {!loading && hasNeeds([NEEDS.students, NEEDS.guardians]) && !newCourse &&\r\n                <Tooltip style={{flex: 1}} title={t(\"export_students_contact_sheet\")} aria-label={t(\"export_grant_letter\")}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      disabled={loadingCtx.loading}\r\n                      startIcon={<GetAppIcon/>}\r\n                      onClick={(e) => {\r\n                          loadingCtx.startLoading();\r\n                        CoursesDataService\r\n                            .downloadSubresource(currentCourse[\"id\"], 'contactsSheet')\r\n                            .then(...errorHandler({snackbarSuccess: true}))\r\n                            .finally(() => {\r\n                                loadingCtx.stopLoading();\r\n                            })\r\n                      }}\r\n                  >\r\n                    {t(\"students_contact_sheet\")}\r\n                  </Button>\r\n                </Tooltip>}\r\n              </Box>\r\n\r\n\r\n                <Box className={[classes.line, classes.composite]}>\r\n                {!loading && !newCourse &&\r\n                <Tooltip style={{flex: 1}} title={t(\"export_calendar\")} aria-label={t(\"send_grant_letter\")}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      startIcon={<GetAppIcon/>}\r\n                      onClick={(e) => {\r\n                        downloadCalendar(\"courses\", currentCourse['id'], currentCourse['calendar_id']).then(r => {});\r\n                      }}\r\n                  >\r\n                    {t(\"export_calendar\")}\r\n                  </Button>\r\n                </Tooltip>}\r\n              </Box>\r\n\r\n            </Box>\r\n        </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseDetails;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_rooms.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_teachers.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\scheduler.component.js",["647","648","649","650","651","652"],"import Box from \"@material-ui/core/Box\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport SchedulesDataService from \"../_services/schedules.service\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport styled from \"@emotion/styled\";\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\nimport {tabContext} from \"../_context/tab-context\";\r\n\r\n\r\nexport const eventFromSchedule = (theme, schedule) => {\r\n    return {\r\n        daysOfWeek: [schedule['day_week']],\r\n        title: schedule['display_name'],\r\n        groupId: [schedule['id']],\r\n        id: schedule['id'],\r\n        startTime: schedule['start_time'],\r\n        endTime: schedule['end_time'],\r\n        color: schedule[\"is_base\"] ? theme.palette.secondary.main : theme.palette.secondary.light,\r\n        textColor: schedule[\"is_base\"] ? theme.palette.secondary.contrastText : theme.palette.secondary.contrastText,\r\n        extendedProps: {\r\n            schedule: schedule\r\n        },\r\n    }\r\n}\r\n\r\nfunction evaluate(expression, ...args){\r\n    console.log(typeof expression);\r\n    if (typeof expression === 'function'){\r\n        return expression(...args);\r\n    }\r\n\r\n    return expression;\r\n}\r\n\r\nfunction Scheduler({snapDuration = '00:15',\r\n                       allowView=false, viewUrl=null,\r\n                        allowDelete=false,\r\n                    selectable=false,\r\n                       viewStudent=false, deleteCustom=false,\r\n                      scheduleIds,\r\n                    setScheduleIds,\r\n                       onEventClick, onEventSelected,\r\n                       onEventChange, editable=false, ...other}) {\r\n    const errorHandler = useErrorHandler();\r\n    const theme = useTheme();\r\n    const calendarRef = React.createRef();\r\n    const StyleWrapper = styled.div`\r\n      .fc-button, .fc-button.fc-button-primary {\r\n        background: ${theme.palette.primary.main};\r\n        color: ${theme.palette.primary.contrastText};\r\n        border-color: ${theme.palette.primary.main};\r\n        background-image: none;\r\n    }\r\n    .fc-button:enabled:hover {\r\n        background: ${theme.palette.primary.dark};\r\n        color: ${theme.palette.primary.contrastText};\r\n        border-color: ${theme.palette.primary.dark};\r\n        background-image: none;\r\n    }\r\n    `\r\n\r\n    const [schedules, setSchedules] = useState(null);\r\n\r\n\r\n    const loading = scheduleIds === null;\r\n    const {t} = useTranslation();\r\n    // todo right click menu to delete\r\n\r\n\r\n    useEffect(() => {\r\n        if (scheduleIds === null) return;\r\n\r\n        if (scheduleIds.length === 0) {\r\n            setSchedules([]);\r\n        } else {\r\n            SchedulesDataService\r\n                .getMany(scheduleIds)\r\n                .then(...errorHandler({}))\r\n                .then(function (res) {\r\n                    setSchedules(res.map(res => res[\"data\"]).map(schedule => {\r\n                        return eventFromSchedule(theme, schedule);\r\n                    }));\r\n                });\r\n        }\r\n    }, [scheduleIds, theme]);\r\n\r\n    const withScheduleInfo = (method, info) => {\r\n        return method(info,\r\n            info.event['start'].getDay(),\r\n            info.event['start'].toLocaleTimeString('en-US', {hour12: false}),\r\n            info.event['end'].toLocaleTimeString('en-US', {hour12: false}),\r\n            info.event.extendedProps[\"schedule\"]);\r\n    }\r\n    const navigator = React.useContext(tabContext);\r\n\r\n    const [currentSchedule, setCurrentSchedule] = React.useState({open: false, event: null, schedule: null})\r\n\r\n      const handleClickOpen = (info) => {\r\n        setCurrentSchedule({open: true, event: info.event, schedule: info.event.extendedProps['schedule']});\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setCurrentSchedule({open: false, event: null, schedule: null});\r\n      };\r\n      const handleView = () => {\r\n          navigator.goTo(...evaluate(viewUrl, currentSchedule.schedule));\r\n          handleClose();\r\n      }\r\n      const handleDelete = () => {\r\n          SchedulesDataService\r\n               .delete(currentSchedule.schedule.id)\r\n               .then(...errorHandler({snackbarSuccess: true}))\r\n               .then(function (res) {\r\n                  handleClose();\r\n                    setScheduleIds(scheduleIds.filter(id => id !== currentSchedule.schedule.id));\r\n                    setSchedules(schedules.filter(s => s.id !== currentSchedule.schedule.id));\r\n               });\r\n      }\r\n\r\n    return (\r\n        <Box p={2} style={{height: '100%', flex: 1, minHeight: \"70vh\" }}>\r\n            {loading ? <Skeleton variant=\"rect\" width=\"100%\" height=\"100%\"/>\r\n                :\r\n                <React.Fragment>\r\n                    <Dialog open={currentSchedule.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">{currentSchedule.schedule? currentSchedule.schedule[\"display_name\"]: \"\"}</DialogTitle>\r\n                        <DialogActions>\r\n                          <Button onClick={handleClose} color=\"primary\">\r\n                              {t(\"cancel\")}\r\n                          </Button>\r\n\r\n                             <Button\r\n                                 disabled={!(currentSchedule.schedule !== null &&\r\n                                            evaluate(allowView, currentSchedule.schedule))}\r\n                                 onClick={handleView}\r\n                                 color=\"primary\">\r\n                                {t(\"view\")}\r\n                            </Button>\r\n\r\n                            <Button\r\n                                    disabled={!(currentSchedule.schedule !== null &&\r\n                                            evaluate(allowDelete, currentSchedule.schedule))}\r\n                                    onClick={handleDelete}\r\n                                    color=\"secondary\">\r\n                                    {t(\"delete\")}\r\n                            </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    <StyleWrapper style={{height: \"100%\"}}>\r\n                    <FullCalendar\r\n                        plugins={[timeGridPlugin, interactionPlugin]}\r\n                        initialView=\"timeGridWeek\"\r\n                        height=\"100%\"\r\n                        firstDay={1}\r\n                        ref={calendarRef}\r\n                        editable={editable}\r\n                        buttonText={{\r\n                            prev:     '<', // <\r\n                              next:     '>', // >\r\n                              prevYear: '<<',  // <<\r\n                              nextYear: '>>',  // >>\r\n                              today:    'today',\r\n                              month:    'month',\r\n                              week:     'week',\r\n                              day:      'day'\r\n                        }}\r\n                        selectable={selectable}\r\n                        selectMirror={true}\r\n                        dayMaxEvents={true}\r\n                        weekends={true}\r\n                        snapDuration={snapDuration}\r\n                        events={schedules}\r\n                        eventAdd={function () {\r\n                        }}\r\n                        eventChange={function (clickInfo) {\r\n                            // const schedule = clickInfo.event.extendedProps[\"schedule\"];\r\n                            // if (schedule[\"is_base\"] === true) return enqueueSnackbar(t(\"cant_remove_schedule\"), {'variant': 'warning'});\r\n                        }}\r\n                        eventRemove={function () {\r\n                        }}\r\n                        select={function (selectInfo) {\r\n                            selectInfo.view.calendar.unselect();\r\n                            onEventSelected( selectInfo.start.getDay(),\r\n            selectInfo.start.toLocaleTimeString('en-US', {hour12: false}),\r\n            selectInfo.end.toLocaleTimeString('en-US', {hour12: false}),)\r\n                        }}\r\n                        eventContent={function () {\r\n                        }} // custom render function\r\n                        eventClick={(info) => {\r\n                            /* let calendarApi = calendarRef.current.getApi();\r\n                              console.log(calendarApi.getEventById(info.event.id).remove());\r\n                              setSchedules(schedules.filter(s=>s.id !== info.event.id));*/\r\n                            handleClickOpen(info);\r\n                        }}\r\n                        eventTimeFormat={{\r\n                            hour: '2-digit',\r\n                            minute: '2-digit',\r\n                            hour12: false\r\n                        }}\r\n                        eventResize={(info) => (withScheduleInfo(onEventChange, info))}\r\n                        eventDrop={(info) => (withScheduleInfo(onEventChange, info))}\r\n                    />\r\n                </StyleWrapper>\r\n                </React.Fragment>\r\n                }\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Scheduler;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\teachers_courses.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.teacher.schedule.component.js",["653","654","655","656"],"import {useTranslation} from \"react-i18next\";\r\nimport React from \"react\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    calendar: {\r\n      margin: theme.spacing(2)\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction TeacherSchedule({  setSchedulesIds, scheduleIds, ...other }) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...other}\r\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\r\n\r\n    >\r\n        <Scheduler\r\n            scheduleIds={scheduleIds}\r\n            editable={false}\r\n            allowView={true}\r\n            viewUrl={(s) => ['/courses', s.course_id]}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeacherSchedule;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\teachers.teacher.details.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\dirty_checkbox.js",["657","658","659","660","661","662","663"],"import React, {useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport {allNeeds} from \"../_data/needs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\nconst useStyles = makeStyles(theme => (createStyles({\r\n  root: dirty => ({\r\n         color: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium,\r\n    \"&.Mui-checked\": {\r\n      color: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main\r\n    }\r\n\r\n})})));\r\n\r\n\r\nconst DirtyCheckbox = ({name, value, formik, noDirty=false, ...props}) => {\r\n    const dirty = noDirty === true? false: formik.values[name] !== undefined && formik.initialValues[name] !== undefined && formik.values[name].includes(value) !== formik.initialValues[name].includes(value);\r\n\r\n    const classes = useStyles(dirty);\r\n\r\n\r\n    return  <Checkbox\r\n                      name={name}\r\n                      className={classes.root}\r\n                      value={value}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    error={formik.status  || formik.errors[name] !== undefined}\r\n                    helperText={formik.touched[name] && formik.errors[name]}\r\n                      checked={formik.values[name]}\r\n                     {...props}/>\r\n}\r\n\r\nexport default DirtyCheckbox;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\needs.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.user.permissions.component.js",["664"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\"\r\nimport UsersNeedsDataService from \"../_services/user_needs.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\nimport NeedsSelection from \"./needs_selection.component\";\r\nimport SaveButton from \"./formik_save_button\";\r\nimport DiscardButton from \"./formik_discard_button\";\r\nimport {symmetricDifference} from \"../_helpers/set_operations\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionIcon: {\r\n    float: 'right'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction UserPerson({ children, addStudentId,  newStudent, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\r\n  const { t } = useTranslation();\r\n  const loading = currentStudent === null;\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n\r\n  let initialValues = loading ? {} : currentStudent;\r\n\r\n\r\n    const formik = useNormik(false, {\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit: (values, {setStatus, setSubmitting}) => {\r\n               setStatus();\r\n\r\n               const a = new Set(values[\"needs\"]);\r\n               const b = new Set(initialValues[\"needs\"]);\r\n               const difference = Array.from(symmetricDifference(a, b));\r\n\r\n               if (difference.size !== 0){\r\n                   setSubmitting(true);\r\n                   const jobs = difference.map(need => {\r\n                    if (b.has(need)){\r\n                       // has been removed\r\n                        return UsersNeedsDataService.delete(currentStudent['id'], need)\r\n                          .then(...errorHandler({}));\r\n                   } else {\r\n                        // has been added\r\n                        return UsersNeedsDataService.postWithId(currentStudent['id'], need)\r\n                          .then(...errorHandler({}));\r\n                    }\r\n                });\r\n                   Promise\r\n                       .all(jobs)\r\n                       .then(...errorHandler({snackbarSuccess: true}))\r\n                       .then(() => {\r\n                           updateCurrentStudent({...currentStudent, needs: values[\"needs\"]});\r\n                       })\r\n                       .finally(() => {\r\n                           setSubmitting(false);\r\n                       })\r\n               }\r\n\r\n\r\n\r\n\r\n        }\r\n    }, true);\r\n\r\n  return (\r\n\r\n        <Box p={3}>\r\n            <Box px={2}>\r\n\r\n              {loading?\r\n                (\r\n\r\n                    <Box>\r\n                         <IconButtonSkeleton className={classes.actionIcon}/>\r\n                       <IconButtonSkeleton className={classes.actionIcon}/>\r\n\r\n\r\n                            <div style={{clear: 'both'}}>\r\n                               <Box py={0} >\r\n                                        <Skeleton variant=\"text\" width={\"100%\"} height=\"150px\"/>\r\n                                    </Box>\r\n                            </div>\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <DiscardButton className={classes.actionIcon}\r\n                                        formik={formik}/>\r\n\r\n\r\n                        <SaveButton className={classes.actionIcon}\r\n                                    formik={formik}/>\r\n\r\n                                    <Box style={{display: \"inline-block\"}}>\r\n                        <NeedsSelection\r\n                formik={formik}\r\n            /></Box>\r\n\r\n                    </form>\r\n                )\r\n\r\n            }\r\n\r\n            </Box>\r\n        </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default UserPerson;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\users.user.userperson.component.js",["665","666","667","668"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport * as yup from 'yup';\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport UsersDataService from \"../_services/users.service\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\nimport SaveButton from \"./formik_save_button\";\r\nimport DiscardButton from \"./formik_discard_button\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {safe_email_required} from \"../_yup/validators\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionIcon: {\r\n    float: 'right'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction UserPerson({ children, addStudentId, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\r\n  const { t } = useTranslation();\r\n  const loading = currentStudent === null;\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n\r\nconst confirm = React.useContext(confirmContext);\r\nconst deleteFullUser = () => {\r\n    UsersDataService\r\n              .delete(currentStudent['id'])\r\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\r\n              .then(function (res) {\r\n                deleteStudent(currentStudent['id']);\r\n              });\r\n  }\r\n\r\n\r\n  let initialValues = loading ? {} : currentStudent;\r\n\r\n\r\n    const formik = useNormik(true, {\r\n        initialValues: initialValues,\r\n        validationSchema: yup.object({\r\n            email: safe_email_required,\r\n            name: yup.string().required(t(\"name_required\")),\r\n        }),\r\n        enableReinitialize: true,\r\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\r\n                if (Object.keys(changedValues).length > 0) {\r\n                setStatus();\r\n\r\n                UsersDataService.patch({\r\n                    id: initialValues[\"id\"],\r\n                    body: changedValues,\r\n                    initial_values: initialValues\r\n                }).then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(function (patched_body) {\r\n                        formik.resetForm(patched_body);\r\n                        updateCurrentStudent(patched_body);\r\n                    }).catch(function (err) {\r\n                        setStatus(true);\r\n                    }).finally(() => {\r\n                        setSubmitting(false);\r\n                    });\r\n\r\n\r\n            } else {\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n    });\r\nconst [hasNeeds, NEEDS] = useNeeds();\r\n  return (\r\n        <Box p={3}>\r\n            <Box px={2}>\r\n\r\n              {loading ?\r\n                  <IconButtonSkeleton className={classes.actionIcon}/>\r\n              :\r\n               hasNeeds([NEEDS.delete]) && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\r\n                <IconButton onClick={(e) => {\r\n                 confirm.confirm(\"delete_user_question\", \"not_undone\", () => {\r\n                     deleteFullUser();\r\n                 })\r\n                }}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              }\r\n\r\n              {loading?\r\n                (\r\n\r\n                    <Box>\r\n                         <IconButtonSkeleton className={classes.actionIcon}/>\r\n                       <IconButtonSkeleton className={classes.actionIcon}/>\r\n\r\n\r\n                            <div style={{clear: 'both'}}>\r\n                               {   [\"100%\", \"100%\", \"100%\"].map((value, idx) => {\r\n                                return (\r\n                                    <Box key={idx} py={0} >\r\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\r\n                                    </Box>);\r\n                            })}\r\n                            </div>\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <DiscardButton className={classes.actionIcon}\r\n                                        formik={formik}/>\r\n\r\n\r\n                        <SaveButton className={classes.actionIcon}\r\n                                    formik={formik}/>\r\n\r\n\r\n\r\n                        <DirtyTextField\r\n                            label={t(\"id\")}\r\n                            name=\"id\"\r\n                            disabled\r\n                            className={classes.line}\r\n                            formik={formik}\r\n                        />\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"name\")}\r\n                                style={{flex: 1}}\r\n                                name=\"name\"\r\n                                formik={formik}\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"surname1\")}\r\n                                style={{flex: 1}}\r\n                                name=\"surname1\"\r\n                                formik={formik}\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"surname2\")}\r\n                                style={{flex: 1}}\r\n                                formik={formik}\r\n                                name=\"surname2\"\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"email\")}\r\n                                type=\"email\"\r\n                                style={{flex: 1}}\r\n                                formik={formik}\r\n                                name=\"email\"\r\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\r\n                            />\r\n                        </Box>\r\n\r\n                    </form>\r\n                )\r\n\r\n            }\r\n\r\n            </Box>\r\n        </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default UserPerson;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.room.details.component.js",["669"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React from \"react\";\r\nimport RoomsDataService from \"../_services/rooms.service\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport * as yup from 'yup';\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\nimport SaveButton from \"./formik_save_button\";\r\nimport DiscardButton from \"./formik_discard_button\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {safe_email_required} from \"../_yup/validators\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionIcon: {\r\n    float: 'right'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction RoomDetails({ children, addStudentId, setNewRoom, newRoom, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\r\n  const { t } = useTranslation();\r\n  const loading = currentStudent === null;\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n\r\nconst confirm = React.useContext(confirmContext);\r\n  const deleteFullStudent = () => {\r\n    RoomsDataService\r\n              .delete(currentStudent['id'])\r\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\r\n              .then(function (res) {\r\n                deleteStudent(currentStudent['id']);\r\n              });\r\n  }\r\n\r\n\r\n  let initialValues = loading ? {} : currentStudent;\r\n\r\n\r\n    const formik = useNormik(!newRoom, {\r\n        initialValues: initialValues,\r\n        validationSchema: yup.object({\r\n            name: yup.string().required(t(\"name_required\")),\r\n        }),\r\n        enableReinitialize: true,\r\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\r\n            if (Object.keys(changedValues).length > 0) {\r\n                setStatus();\r\n\r\n                if (newRoom) {\r\n                    RoomsDataService.post(changedValues)\r\n                         .then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(function (new_id) {\r\n                        updateCurrentStudent(new_id);\r\n                        setNewRoom(false);\r\n                    }).catch(function (err) {\r\n                    setStatus(true);\r\n                    }).finally(() => {\r\n                    setSubmitting(false);\r\n                });\r\n                } else {\r\n                   RoomsDataService.patch({\r\n                    id: initialValues[\"id\"],\r\n                    body: changedValues,\r\n                    initial_values: initialValues\r\n                }).then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(function (patched_body) {\r\n                        formik.resetForm(patched_body);\r\n                        updateCurrentStudent(patched_body);\r\n                    }).catch(function (err) {\r\n                        setStatus(true);\r\n                    }).finally(() => {\r\n                        setSubmitting(false);\r\n                    });\r\n                }\r\n\r\n\r\n\r\n\r\n            } else {\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n    });const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n  return (\r\n\r\n        <Box p={3}>\r\n            <Box px={2}>\r\n\r\n              {!newRoom && loading ?\r\n                  <IconButtonSkeleton className={classes.actionIcon}/>\r\n              : hasNeeds([NEEDS.delete]) &&\r\n               <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\r\n                <IconButton onClick={(e) => {\r\n                    if (newRoom) {\r\n                        setNewRoom(false);\r\n                    } else{\r\n                        confirm.confirm(\"delete_room_question\", \"not_undone\", () => {\r\n                            deleteFullStudent();\r\n                        })\r\n                    }\r\n\r\n                }}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              }\r\n\r\n              {!newRoom && loading?\r\n                (\r\n\r\n                    <Box>\r\n                         <IconButtonSkeleton className={classes.actionIcon}/>\r\n                       <IconButtonSkeleton className={classes.actionIcon}/>\r\n\r\n\r\n                            <div style={{clear: 'both'}}>\r\n                               {   [\"100%\", \"100%\", \"100%\", \"100%\"].map((value, idx) => {\r\n                                return (\r\n                                    <Box key={idx} py={0} >\r\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\r\n                                    </Box>);\r\n                            })}\r\n                            </div>\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <DiscardButton className={classes.actionIcon}\r\n                                        formik={formik}/>\r\n\r\n\r\n                        <SaveButton className={classes.actionIcon}\r\n                                    formik={formik}/>\r\n\r\n\r\n\r\n                        <DirtyTextField\r\n                            label={t(\"id\")}\r\n                            name=\"id\"\r\n                            disabled\r\n                            className={classes.line}\r\n                            formik={formik}\r\n                        />\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"name\")}\r\n                                style={{flex: 4}}\r\n                                name=\"name\"\r\n                                formik={formik}\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"capacity\")}\r\n                                style={{flex: 1}}\r\n                                name=\"capacity\"\r\n                                formik={formik}\r\n                                type=\"number\"\r\n                            />\r\n                        </Box>\r\n\r\n                    </form>\r\n                )\r\n\r\n            }\r\n\r\n            </Box>\r\n        </Box>\r\n  );\r\n}\r\n\r\nexport default RoomDetails;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\rooms.room.schedule.component.js",["670","671","672","673"],"import {useTranslation} from \"react-i18next\";\r\nimport React from \"react\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    calendar: {\r\n      margin: theme.spacing(2)\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction RoomSchedule({ scheduleIds, ...other }) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  // todo no minHeight ? and also tabpanel component\r\n  return (\r\n    <div\r\n\r\n      {...other}\r\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\r\n\r\n    >\r\n       <Scheduler\r\n            scheduleIds={scheduleIds}\r\n            editable={false}\r\n            allowView={true}\r\n            viewUrl={(s) => ['/courses', s.course_id]}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomSchedule;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_helpers\\set_operations.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\schedules.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\calendar.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\formik_discard_button.js",["674","675","676","677","678","679","680","681","682","683"],"import React, {useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport {allNeeds} from \"../_data/needs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\n\r\n\r\nconst DiscardButton = ({formik, ...props}) => {\r\n    const {t} = useTranslation();\r\n\r\n    return   <IconButton\r\n                                     onClick={formik.handleReset}\r\n                                     disabled={!formik.dirty || formik.isSubmitting}\r\n                         {...props}>\r\n                            <Tooltip title={t(\"reset\")} aria-label={t(\"reset\")}>\r\n                                <RestoreIcon/>\r\n                            </Tooltip>\r\n                        </IconButton>\r\n}\r\n\r\nexport default DiscardButton;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\formik_save_button.js",["684","685","686","687","688","689","690","691","692"],"import React, {useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport {allNeeds} from \"../_data/needs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\n\r\n\r\nconst SaveButton = ({formik, ...props}) => {\r\n    const {t} = useTranslation();\r\n    const [hasNeeds, NEEDS] = useNeeds();\r\n    return   hasNeeds([NEEDS.patch]) && <IconButton  type=\"submit\"\r\n                                    disabled={!formik.dirty || formik.isSubmitting}\r\n                          {...props}>\r\n                            <Tooltip title={t(\"save\")} aria-label={t(\"save\")}>\r\n                                <SaveIcon/>\r\n                            </Tooltip>\r\n                        </IconButton>\r\n}\r\n\r\nexport default SaveButton;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_skeletons\\iconButton.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\user_needs.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\price_term.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list_terciary.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\items_list_secondary.component.js",["693"],"import React from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport ItemsList from \"./items_list.component\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {NEEDS} from \"../_helpers/needs\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\n\r\n\r\nconst ItemsListSecondary = ({dataService, parent_id, deleteTooltip, delete_message, onItemDeleted = () => {}, ...props}) => {\r\n    const errorHandler = useErrorHandler();\r\n    const confirm = React.useContext(confirmContext);\r\n    const {t} = useTranslation();\r\n\r\n    return <ItemsList\r\n        secondaryAction={true}\r\n        withFiltersBox={false}\r\n        withAvatar={false}\r\n        secondaryActionCallable={(id) => {\r\n             confirm.confirm(delete_message, \"not_undone\", () => {\r\n                dataService\r\n                .delete(parent_id, id)\r\n                .then(...errorHandler({snackbarSuccess:true}))\r\n                .then(function (r) {\r\n                    onItemDeleted(id);\r\n                });\r\n            });\r\n        }}\r\n        parent_id={parent_id}\r\n        secondaryActionTooltip={deleteTooltip}\r\n        secondaryActionNeeds={[NEEDS.delete]}\r\n        secondaryActionIcon={<DeleteIcon/>}\r\n        dataService={dataService}\r\n        {...props}\r\n    />\r\n};\r\n\r\nexport default ItemsListSecondary;\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\labels_selection.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\course_labels.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\student_courses.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.schedule.component.js",["694","695","696","697","698","699","700","701","702"],"import {useTranslation} from \"react-i18next\";\r\nimport React from \"react\";\r\nimport SchedulesDataService from \"../_services/schedules.service\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    calendar: {\r\n      margin: theme.spacing(2)\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction Schedule({ title, scheduleIds, setScheduleIds, student_id, ...other }) {\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div style={{height: '100%', flex: 1, minHeight: \"70vh\" }}>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.guardian.component.js",["703","704"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {MenuItem} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport StudentGuardianDataService from \"../_services/student_guardians.service\"\r\nimport {student_guardian_relations} from \"../_data/relations\"\r\nimport Person from \"./students.student.person.component\";\r\nimport GuardiansDataService from \"../_services/guardians.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport * as yup from \"yup\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport {emptyGuardian} from \"../_data/empty_objects\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\n\r\nfunction Guardian({  studentId, title, guardianId, deleteGuardianId, addGuardianId, deleteNewGuardian, newGuardian=false, ...other }) {\r\n  const { t } = useTranslation();\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const [guardian, setGuardian] = useState(null);\r\n\r\n   const [hasNeeds, NEEDS] = useNeeds();\r\n  useEffect(() => {\r\n    if (newGuardian) return;\r\n\r\n    GuardiansDataService\r\n            .getOne(guardianId)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setGuardian(res[\"data\"]);\r\n\r\n                });\r\n  }, [guardianId]);\r\nconst confirm = React.useContext(confirmContext);\r\n  return (\r\n    <React.Fragment>\r\n\r\n\r\n        <Box p={3}>\r\n            <Box px={2}>\r\n\r\n\r\n              {hasNeeds([NEEDS.delete]) && <IconButton style={{float: 'right'}} onClick={(e) => {\r\n                if (!newGuardian) {\r\n                  confirm.confirm(\"delete_guardian_question\", \"not_undone\", () => {\r\n                    GuardiansDataService\r\n                      .delete(guardianId)\r\n                      .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\r\n                      .then(function (res) {\r\n                        deleteGuardianId(guardianId);\r\n                      });\r\n                  })\r\n                  return;\r\n                }\r\n                deleteNewGuardian();\r\n              }}>\r\n                <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\r\n                  <DeleteIcon/>\r\n                </Tooltip>\r\n              </IconButton>}\r\n\r\n\r\n              <Person currentPerson={newGuardian? emptyGuardian: guardian}\r\n                      studentId={studentId}\r\n                      newPerson={newGuardian}\r\n                      updateCurrentStudent={(x) => {\r\n                        if (!newGuardian) return setGuardian(x);\r\n                        StudentGuardianDataService.postWithId(studentId, x)\r\n                          .then(...errorHandler({snackbarSuccess: true}))\r\n                          .then(() => {\r\n                          addGuardianId(x);\r\n                        });\r\n                      }}\r\n                      patchService={GuardiansDataService}\r\n                      additionalValidation={{\r\n                        relation: yup.string().required(t(\"relation_required\"))}}\r\n                      additionalFields={\r\n                        [[<DirtyTextField\r\n                                label={t(\"relation\")}\r\n                                style={{flex: 1}}\r\n                                name=\"relation\"\r\n                                select\r\n                            >\r\n                          {student_guardian_relations.map((r) => (\r\n                                   <MenuItem key={r} value={r}>{t(r)}</MenuItem>\r\n                                ))}\r\n                                ))}\r\n\r\n                        </DirtyTextField>]]}\r\n              />\r\n\r\n            </Box>\r\n        </Box>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Guardian;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.attendee.component.js",["705","706"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport {MenuItem} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport StudentsDataService from \"../_services/students.service\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport * as yup from 'yup';\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\"\r\nimport Person from \"./students.student.person.component\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GuardiansDataService from \"../_services/guardians.service\";\r\nimport PaymentsDataService from \"../_services/payments.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport {sendEnrollmentEmail} from \"../_services/emailsEnrollment.service\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {sendGrantEmail} from \"../_services/emailsGrants.service\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport {payment_methods} from \"../_data/payment_methods\";\r\nimport {emptyAttendee} from \"../_data/empty_objects\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\nimport {loadingContext} from \"../_context/loading-context\";\r\nimport {confirmContext} from \"../_context/confirm-context\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionIcon: {\r\n    float: 'right'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction Attendee({ children, setNewStudent, addStudentId, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\r\n  const { t } = useTranslation();\r\n  const loading = currentStudent === null;\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n  const [hasNeeds, NEEDS] = useNeeds();\r\n  const confirm = React.useContext(confirmContext);\r\n\r\n  const deleteFullStudent = () => {\r\n    StudentsDataService\r\n              .delete(currentStudent['id'])\r\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\r\n              .then(function (res) {\r\n                PaymentsDataService\r\n                      .deleteMany(currentStudent['payments'])\r\n                      .then(...errorHandler({}))  // todo everywhere\r\n                      .then(function (res) {\r\n\r\n                      });\r\n\r\n                GuardiansDataService\r\n                      .deleteMany(currentStudent['guardians'])\r\n                      .then(...errorHandler({}))  // todo everywhere\r\n                      .then(function (res) {\r\n\r\n                      });\r\n\r\n\r\n                // todo schedules, courses\r\n\r\n\r\n                deleteStudent(currentStudent['id']);\r\n              });\r\n  }\r\n  const loadingCtx = React.useContext(loadingContext);\r\n  const sendGrantLetter = () => {\r\n      loadingCtx.startLoading();\r\n      sendGrantEmail(currentStudent['id'])\r\n          .then(...errorHandler({snackbarSuccess: true}))\r\n          .finally(() => {\r\n              loadingCtx.stopLoading();\r\n          });\r\n  }\r\n  const sendEnrollmentAgreement = () => {\r\n      loadingCtx.startLoading();\r\n      sendEnrollmentEmail(currentStudent['id'])\r\n          .then(...errorHandler({snackbarSuccess: true}))\r\n          .finally(() => {\r\n              loadingCtx.stopLoading();\r\n          });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n        <Box p={3}>\r\n            <Box px={2}>\r\n              {loading?\r\n                  !newStudent && <IconButtonSkeleton className={classes.actionIcon}/>\r\n              :\r\n              !newStudent && hasNeeds([NEEDS.guardians, NEEDS.post]) && <Tooltip style={{float: 'right'}} title={t(\"new_guardian\")} aria-label={t(\"new_guardian\")}>\r\n                <IconButton onClick={(e) => {\r\n                  addNewGuardian();\r\n                }}>\r\n                  <PersonAddIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              }\r\n\r\n\r\n              {loading && !newStudent ?\r\n                   <IconButtonSkeleton className={classes.actionIcon}/>\r\n              :\r\n                hasNeeds([NEEDS.delete]) && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\r\n                <IconButton onClick={(e) => {\r\n                    if (newStudent) {\r\n                        setNewStudent(false);\r\n                    } else {\r\n                        confirm.confirm(\"delete_student_question\",\r\n      \"student_also_deletes\",\r\n      () => {\r\n                            deleteFullStudent(currentStudent['id'])\r\n      });\r\n                    }\r\n\r\n                }}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              }\r\n\r\n              <Person\r\n                      currentPerson={newStudent? emptyAttendee: currentStudent}\r\n                      newPerson={newStudent}\r\n                      updateCurrentStudent={(x) => {\r\n                        if (!newStudent) return updateCurrentStudent(x);\r\n                        addStudentId(x);\r\n                      }}\r\n                      patchService={patchService}\r\n                      onUpdate={(changedBody) => {\r\n                        if (\"enrolment_status\" in changedBody && changedBody[\"enrolment_status\"] === \"enrolled\"){\r\n                          confirm.confirm(\"send_grant_letter_question\",\r\n                          \"this_will_be_sent\",\r\n                          () => {\r\n                                sendGrantLetter();\r\n                          });\r\n                        }\r\n                      }}\r\n                      additionalValidation={{\r\n                        enrolment_status: yup.string().required(t(\"status_required\")),\r\n                        image_agreement: yup.boolean().required(t(\"image_required\")),\r\n                        birth_date: yup.date().required(t(\"birthdate_required\"))\r\n                      }}\r\n                      additionalFields={\r\n                        [[<DirtyTextField\r\n                                label={t(\"price_term\")}\r\n                                style={{flex: 1}}\r\n                                name=\"price_term\"\r\n                                type=\"number\"\r\n                                InputProps={{endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,}}\r\n                            />,\r\n                            <DirtyTextField\r\n                                label={t(\"default_payment_method\")}\r\n                                style={{flex: 1}}\r\n                                name=\"default_payment_method\"\r\n                                select>\r\n                                { payment_methods.map(\r\n                                                    (method) => (\r\n                                                        <MenuItem key={method} value={method}>{t(method)}</MenuItem>\r\n                                                    )\r\n                                                )\r\n                                                }\r\n                            </DirtyTextField>],\r\n                            <DirtyTextField\r\n                                label={t(\"payment_comments\")}\r\n                                style={{flex: 1}}\r\n                                multiline\r\n                                rowsMax={8}\r\n                                name=\"payment_comments\"\r\n                            />,\r\n                            null,\r\n                            [<DirtyTextField\r\n                                label={t(\"birthdate\")}\r\n                                type=\"date\"\r\n                                style={{flex: 1}}\r\n                                name=\"birth_date\"\r\n                                InputLabelProps={{shrink: true}}/>,\r\n                            <DirtyTextField\r\n                              label={t(\"years_in_xamfra\")}\r\n                              type=\"number\"\r\n                              style={{flex: 1}}\r\n                              name=\"years_in_xamfra\"/>],\r\n                          [\r\n                              <DirtyTextField\r\n                                label={t(\"status\")}\r\n                                style={{flex: 1}}\r\n                                name=\"enrolment_status\"\r\n                                select>\r\n                                {['enrolled', 'early-unenrolled', 'pre-enrolled'].map((s) => (\r\n                                    <MenuItem key={s} value={s}>{t(s)}</MenuItem>\r\n                                ))}\r\n                            </DirtyTextField>,\r\n                              <DirtyTextField\r\n                                label={t(\"image_agreement\")}\r\n                                style={{flex: 1}}\r\n                                name=\"image_agreement\"\r\n                                select>\r\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\r\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\r\n                            </DirtyTextField>\r\n                          ], [<DirtyTextField\r\n                                label={t(\"pre_enrolment_date\")}\r\n                                type=\"date\"\r\n                                style={{flex: 1}}\r\n                                name=\"pre_enrolment_date\"\r\n                                InputLabelProps={{shrink: true}}/>,\r\n                                <DirtyTextField\r\n                                label={t(\"enrolment_date\")}\r\n                                type=\"date\"\r\n                                style={{flex: 1}}\r\n                                name=\"enrolment_date\"\r\n                                InputLabelProps={{shrink: true}}/>,\r\n                                <DirtyTextField\r\n                                label={t(\"early_unenrolment_date\")}\r\n                                type=\"date\"\r\n                                style={{flex: 1}}\r\n                                name=\"early_unenrolment_date\"\r\n                                InputLabelProps={{shrink: true}}/>\r\n                            ],\r\n                        <DirtyTextField\r\n                                label={t(\"other_comments\")}\r\n                                style={{flex: 1}}\r\n                                multiline\r\n                                rowsMax={8}\r\n                                name=\"other_comments\"\r\n                            />]}\r\n              >\r\n\r\n              </Person>\r\n\r\n              {!loading && !newStudent && <Box my={3}>\r\n            <Divider />\r\n            </Box>}\r\n\r\n              <Box className={[classes.line, classes.composite]}>\r\n                {!loading && !newStudent && hasNeeds([NEEDS.send_email]) &&\r\n                <Tooltip style={{flex: 1}} title={t(\"send_grant_letter\")} aria-label={t(\"send_grant_letter\")}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      disabled={loadingCtx.loading}\r\n                      startIcon={<SendIcon/>}\r\n                      onClick={(e) => {\r\n                        sendGrantLetter();\r\n                      }}\r\n                  >\r\n                    {t(\"grant_letter\")}\r\n                  </Button>\r\n                </Tooltip>}\r\n\r\n                {!loading && !newStudent &&\r\n                <Tooltip style={{flex: 1}} title={t(\"export_grant_letter\")} aria-label={t(\"export_grant_letter\")}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      disabled={loadingCtx.loading}\r\n                      startIcon={<GetAppIcon/>}\r\n                      onClick={(e) => {\r\n                          if (loadingCtx.loading) return;\r\n                          loadingCtx.startLoading();\r\n                        StudentsDataService\r\n                            .downloadSubresource(currentStudent[\"id\"], 'grantLetter')\r\n                            .then(...errorHandler({snackbarSuccess: true}))\r\n                            .finally(() => {\r\n                                loadingCtx.stopLoading();\r\n                            })\r\n                      }}\r\n                  >\r\n                    {t(\"grant_letter\")}\r\n                  </Button>\r\n                </Tooltip>}\r\n              </Box>\r\n\r\n              <Box className={[classes.line, classes.composite]}>\r\n                {!loading && !newStudent && hasNeeds([NEEDS.send_email]) &&\r\n                <Tooltip style={{flex: 1}} title={t(\"send_enrolment_agreement\")}\r\n                                                     aria-label={t(\"enrolment_agreement\")}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      startIcon={<SendIcon/>}\r\n                      disabled={loadingCtx.loading}\r\n                      onClick={(e) => {\r\n                        sendEnrollmentAgreement();\r\n                      }}\r\n                  >\r\n                    {t(\"enrolment_agreement\")}\r\n                  </Button>\r\n                </Tooltip>}\r\n\r\n                {!loading && !newStudent && <Tooltip style={{flex: 1}} title={t(\"export_enrolment_agreement\")}\r\n                                                     aria-label={t(\"export_enrolment_agreement\")}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      startIcon={<GetAppIcon/>}\r\n                      disabled={loadingCtx.loading}\r\n                      onClick={(e) => {\r\n                          if (loadingCtx.loading) return;\r\n                          loadingCtx.startLoading();\r\n                        StudentsDataService\r\n                            .downloadSubresource(currentStudent[\"id\"], 'enrolmentAgreement')\r\n                            .then(...errorHandler({snackbarSuccess: true}))\r\n                            .finally(() => {\r\n                                loadingCtx.stopLoading();\r\n                            })\r\n                      }}\r\n                  >\r\n                    {t(\"enrolment_agreement\")}\r\n                  </Button>\r\n                </Tooltip>}\r\n              </Box>\r\n            </Box>\r\n        </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default Attendee;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.payments.component.js",["707"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PaymentsDataService from \"../_services/payments.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport PaymentCard from \"./students.student.payments.payment.component\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\r\nimport {useNeeds} from \"../_helpers/needs\";\r\n\r\nconst getDefaultValues = () => {\r\n    const date = new Date();\r\n    const dd = date.getDate();\r\n    const mm = date.getMonth() + 1; //Month from 0 to 11\r\n    const yyyy = date.getFullYear();\r\n    return {'id': null, 'date': `${yyyy}-${mm<=9 ? '0' + mm : mm}-${dd <= 9 ? '0' + dd : dd}`, 'quantity': null, 'concept': null, 'method': null}\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  actionIcon: {\r\n    float: 'right'\r\n  },\r\n  newLine: {\r\n    width: '100%',\r\n       marginTop: theme.spacing(1),\r\n        display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n}));\r\n\r\nfunction Payments({ children,  title, paymentIds, deletePaymentFromStudent, addPaymentId, student_id, ...other }) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n  const loading = paymentIds === null;\r\n\r\n  const [payments, setPayments] = useState([]);\r\n  const [newPaymentCard, setNewPaymentCard] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    setNewPaymentCard(false);\r\n  }, [payments])\r\n\r\n  const updatePayment = (id, body) => {\r\n    setPayments(payments.map(payment => {\r\n      if (payment.id !== id) return payment;\r\n      return body;\r\n    }))\r\n  }\r\n  const [hasNeeds, NEEDS] = useNeeds();\r\n\r\n  const deletePayment = (id) => {\r\n    PaymentsDataService.delete(id)\r\n        .then(...errorHandler({snackbarSuccess:true}))\r\n        .then(function (r) {\r\n             deletePaymentFromStudent(id);\r\n        });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (paymentIds === null) return;\r\n\r\n    if (paymentIds.length === 0){\r\n      setPayments([]);\r\n    } else {\r\n      PaymentsDataService\r\n            .getMany(paymentIds)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setPayments(res.map(res => res[\"data\"]).sort((p1, p2) => p1.date.localeCompare(p2.date)));\r\n                });\r\n    }\r\n  }, [paymentIds])\r\n\r\n  return (\r\n    <Box p={3}>  {// todo simplify everywhere\r\n        } <Box px={2}>\r\n\r\n              {loading?\r\n                  <IconButtonSkeleton className={classes.actionIcon}/>\r\n              :\r\n              hasNeeds([NEEDS.post]) && <Tooltip className={classes.actionIcon} title={t(\"new_payment\")} aria-label={t(\"new_payment\")}>\r\n                <IconButton onClick={(e) => { setNewPaymentCard(true); }}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              }\r\n\r\n              <div className={classes.newLine}>\r\n\r\n              {\r\n                payments && payments.map(payment =>\r\n                    (<PaymentCard payment={payment} key={payment['id']} updatePayment={updatePayment} deletePayment={deletePayment}/>)\r\n                )\r\n              }\r\n\r\n              {newPaymentCard &&\r\n                <PaymentCard payment={getDefaultValues()}\r\n                             updatePayment={updatePayment}\r\n                             deletePayment={(_) => {setNewPaymentCard(false)}}\r\n                            newPayment={true}\r\n                             student_id={student_id}\r\n                addPaymentId={addPaymentId}/>\r\n              }\r\n\r\n              {loading &&\r\n                <Skeleton width=\"100%\" height=\"250px\"/>  // todo we can do better\r\n              }\r\n\r\n              {!loading && payments.length === 0 && !newPaymentCard &&\r\n                <Typography>{t(\"no_payments\")}</Typography>\r\n              }\r\n              </div>\r\n            </Box>\r\n        </Box>\r\n  );\r\n}\r\n\r\nPayments.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Payments;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_data\\payment_methods.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\bulkEmail.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\guardians.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.payments.payment.component.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\emailsGrants.service.js",["708","709"],"import serviceFactory from \"./service-factory\";\r\nimport {API_VERSION, BACKEND_URL} from \"../config\";\r\nimport {authHeader} from \"../_helpers/auth-header\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const sendGrantEmail = (id) => {  // todo abstract\r\n            return new Promise(function (resolve, reject) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${BACKEND_URL}/emails/v1/grantEmail/${id}`,\r\n                    headers: {\r\n                        ...{\r\n                            'Content-Type': 'application/json',\r\n                            'Cache-Control': 'no-cache'\r\n                        }, ...authHeader()\r\n                    }\r\n                }).then(function (res) {\r\n                        resolve(res);\r\n                    }).catch(function (err) {\r\n                        reject(err);\r\n                });\r\n            });\r\n        };\r\n\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\emailsEnrollment.service.js",["710","711"],"import serviceFactory from \"./service-factory\";\r\nimport {API_VERSION, BACKEND_URL} from \"../config\";\r\nimport {authHeader} from \"../_helpers/auth-header\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const sendEnrollmentEmail = (id) => {  // todo abstract\r\n            return new Promise(function (resolve, reject) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${BACKEND_URL}/emails/v1/enrolmentEmail/${id}`,\r\n                    headers: {\r\n                        ...{\r\n                            'Content-Type': 'application/json',\r\n                            'Cache-Control': 'no-cache'\r\n                        }, ...authHeader()\r\n                    }\r\n                }).then(function (res) {\r\n                        resolve(res);\r\n                    }).catch(function (err) {\r\n                        reject(err);\r\n                });\r\n            });\r\n        };\r\n\r\n","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\student_guardians.service.js",[],"C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_components\\students.student.person.component.js",["712"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {MenuItem} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport * as yup from 'yup';\r\nimport DirtyCountrySelect from \"./contry-select.component\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\nimport {education_years} from \"../_data/education\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\r\nimport DiscardButton from \"./formik_discard_button\";\r\nimport SaveButton from \"./formik_save_button\";\r\nimport {safe_email} from \"../_yup/validators\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    },\r\n    actionIcon: {\r\n        float: 'right'\r\n    }\r\n}));\r\n\r\nfunction Person(props) {\r\n    const currentPerson = props.currentPerson;\r\n    const dataService = props.patchService;\r\n    const newPerson = props.newPerson;\r\n    const updateCurrentPerson = props.updateCurrentStudent;\r\n    const additionalFields = props.additionalFields;\r\n    const additionalValidation = props.additionalValidation === undefined? {}: props.additionalValidation;\r\n    const studentId = props.studentId;\r\n    const onUpdate = props.onUpdate;\r\n    const loading = currentPerson === null;\r\n\r\n    const {t} = useTranslation();\r\n    const classes = useStyles();\r\n    const errorHandler = useErrorHandler();\r\n    let initialValues = loading ? {} : currentPerson;\r\n\r\n\r\n    const formik = useNormik(!newPerson, {\r\n        initialValues: initialValues,\r\n        validationSchema: yup.object({...{\r\n            email: safe_email(t),\r\n            name: yup.string().required(t(\"name_required\")),\r\n            is_studying: yup.boolean().required(t(\"studying_required\")),\r\n            is_working: yup.boolean().required(t(\"working_required\")),\r\n            career: yup.string().when('is_working', {\r\n                                                  is: true,\r\n                                                  then: yup.string().required(t(\"career_required\"))\r\n                                                }),\r\n            education_entity: yup.string().when('is_studying', {\r\n                                                  is: true,\r\n                                                  then: yup.string().required(t(\"education_entity_required\"))\r\n                                                }),\r\n            education_year: yup.string().when('is_studying', {\r\n                                                  is: true,\r\n                                                  then: yup.string().required(t(\"education_year_required\"))\r\n                                                })\r\n        }, ...additionalValidation}),\r\n        enableReinitialize: true,\r\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\r\n            if (newPerson) {\r\n                setStatus();\r\n                dataService.post({...changedValues})\r\n                    .then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(function (new_id) {\r\n                        updateCurrentPerson(new_id['id']);\r\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\r\n                    }).catch(function (err) {\r\n                    setStatus(true);\r\n                    }).finally(() => {\r\n                    setSubmitting(false);\r\n                });\r\n            } else {\r\n                if (Object.keys(changedValues).length > 0) {\r\n                setStatus();\r\n                dataService.patch({\r\n                    id: initialValues[\"id\"],\r\n                    body: changedValues,\r\n                    initial_values: initialValues\r\n                }).then(...errorHandler({snackbarSuccess: true}))\r\n                    .then(function (patched_body) {\r\n                        formik.resetForm(patched_body);\r\n                        updateCurrentPerson(patched_body);\r\n\r\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\r\n                    }).catch(function (err) {\r\n                        setStatus(true);\r\n                    }).finally(() => {\r\n                        setSubmitting(false);\r\n                    });\r\n\r\n\r\n            } else {\r\n                setSubmitting(false);\r\n            }\r\n            }\r\n        }\r\n    });\r\n\r\n    function recursiveForm(elements) {\r\n        if (elements === undefined) return null;\r\n\r\n        return <div>\r\n            <Box my={3}>\r\n            <Divider />\r\n            </Box>\r\n            {\r\n            elements.map((res, idx) => (\r\n                res == null? <Box my={3}>\r\n            <Divider />\r\n            </Box>:\r\n                <Box key={idx} className={`${classes.line} ${classes.composite}`}>\r\n                    {res instanceof Array ?\r\n                        res.map((r, idx2) => (\r\n                            React.cloneElement(r, {formik: formik, key: idx+\"-\"+idx2})\r\n                        ))\r\n                        : React.cloneElement(res, {formik: formik})}\r\n                </Box>))\r\n        }\r\n        </div>;\r\n    }\r\n\r\n\r\n    return (\r\n        <Box>\r\n            {loading?\r\n                (\r\n\r\n                    <Box>\r\n                         <IconButtonSkeleton className={classes.actionIcon}/>\r\n                       <IconButtonSkeleton className={classes.actionIcon}/>\r\n\r\n\r\n                            <div style={{clear: 'both'}}>\r\n                               {   [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map((value, idx) => {\r\n                                return (\r\n                                    <Box key={idx} py={0} >\r\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\r\n                                    </Box>);\r\n                            })}\r\n                            </div>\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <DiscardButton className={classes.actionIcon}\r\n                                        formik={formik}/>\r\n\r\n\r\n                        <SaveButton className={classes.actionIcon}\r\n                                    formik={formik}/>\r\n\r\n\r\n                        <DirtyTextField\r\n                            label={t(\"id\")}\r\n                            name=\"id\"\r\n                            disabled\r\n                            className={classes.line}\r\n                            formik={formik}\r\n                        />\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"name\")}\r\n                                style={{flex: 1}}\r\n                                name=\"name\"\r\n                                formik={formik}\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"surname1\")}\r\n                                style={{flex: 1}}\r\n                                name=\"surname1\"\r\n                                formik={formik}\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"surname2\")}\r\n                                style={{flex: 1}}\r\n                                formik={formik}\r\n                                name=\"surname2\"\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"email\")}\r\n                                type=\"email\"\r\n                                style={{flex: 1}}\r\n                                formik={formik}\r\n                                name=\"email\"\r\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\r\n                            />\r\n                        </Box>\r\n\r\n                       <Box my={3}>\r\n            <Divider />\r\n            </Box>\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"address\")}\r\n                                formik={formik}\r\n                                style={{flex: 4}}\r\n                                name=\"address\"\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"city\")}\r\n                                style={{flex: 2}}\r\n                                formik={formik}\r\n                                name=\"city\"\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"zip\")}\r\n                                formik={formik}\r\n                                type=\"number\"\r\n                                style={{flex: 1}}\r\n                                name=\"zip\"\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"dni\")}\r\n                                style={{flex: 1}}\r\n                                formik={formik}\r\n                                name=\"dni\"\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"phone\")}\r\n                                type=\"tel\"\r\n                                style={{flex: 1}}\r\n                                formik={formik}\r\n                                name=\"phone\"\r\n                            />\r\n\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n\r\n                            <DirtyCountrySelect\r\n                                formik={formik}\r\n                                style={{flex: 1}}\r\n                                name={\"country_of_origin\"}\r\n                                label={t(\"country_of_origin\")}\r\n                            />\r\n<DirtyTextField\r\n                                label={t(\"gender\")}\r\n                                style={{flex: 1}}\r\n                                formik={formik}\r\n                                name=\"gender\"\r\n                                select>\r\n                                <MenuItem value=\"m\">{t(\"male\")}</MenuItem>\r\n                                <MenuItem value=\"f\">{t(\"female\")}</MenuItem>\r\n                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\r\n                            </DirtyTextField>\r\n                        </Box>\r\n<Box my={3}>\r\n            <Divider />\r\n            </Box>\r\n                        <Box className={[classes.line, classes.composite]}>\r\n                            <DirtyTextField\r\n                                label={t(\"is_studying\")}\r\n                                style={{flex: 1}}\r\n                                name=\"is_studying\"\r\n                                formik={formik}\r\n                                select>\r\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\r\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\r\n                            </DirtyTextField>\r\n                            <DirtyTextField\r\n                                label={t(\"education_entity\")}\r\n                                style={{flex: 2}}\r\n                                formik={formik}\r\n                                name=\"education_entity\"\r\n                            />\r\n                            <DirtyTextField\r\n                                label={t(\"education_year\")}\r\n                                style={{flex: 2}}\r\n                                name=\"education_year\"\r\n                                formik={formik}\r\n                                select>\r\n                                {education_years.map((level) => (\r\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\r\n                                ))}\r\n                            </DirtyTextField>\r\n                        </Box>\r\n\r\n                        <Box className={[classes.line, classes.composite]}>\r\n\r\n\r\n                            <DirtyTextField\r\n                                label={t(\"is_working\")}\r\n                                style={{flex: 1}}\r\n                                name=\"is_working\"\r\n                                formik={formik}\r\n                                select>\r\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\r\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\r\n                            </DirtyTextField>\r\n                            <DirtyTextField\r\n                                label={t(\"career\")}\r\n                                style={{flex: 4}}\r\n                                formik={formik}\r\n                                name=\"career\"\r\n                            />\r\n                        </Box>\r\n\r\n                        {recursiveForm(additionalFields)}\r\n\r\n                    </form>\r\n                )\r\n\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport default Person;","C:\\Users\\vazqu\\PycharmProjects\\centrifuga4\\web_app\\src\\_services\\emailsReceipts.service.js",["713","714"],"import serviceFactory from \"./service-factory\";\r\nimport {API_VERSION, BACKEND_URL} from \"../config\";\r\nimport {authHeader} from \"../_helpers/auth-header\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const sendReceiptEmail = (id) => {  // todo abstract\r\n            return new Promise(function (resolve, reject) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${BACKEND_URL}/emails/v1/paymentReceipt/${id}`,\r\n                    headers: {\r\n                        ...{\r\n                            'Content-Type': 'application/json',\r\n                            'Cache-Control': 'no-cache'\r\n                        }, ...authHeader()\r\n                    }\r\n                }).then(function (res) {\r\n                        resolve(res);\r\n                    }).catch(function (err) {\r\n                        reject(err);\r\n                });\r\n            });\r\n        };\r\n\r\n",{"ruleId":"715","replacedBy":"716"},{"ruleId":"717","replacedBy":"718"},{"ruleId":"719","severity":1,"message":"720","line":11,"column":31,"nodeType":"721","messageId":"722","endLine":11,"endColumn":37},{"ruleId":"719","severity":1,"message":"723","line":3,"column":16,"nodeType":"721","messageId":"722","endLine":3,"endColumn":25},{"ruleId":"719","severity":1,"message":"724","line":30,"column":5,"nodeType":"721","messageId":"722","endLine":30,"endColumn":18},{"ruleId":"719","severity":1,"message":"725","line":37,"column":10,"nodeType":"721","messageId":"722","endLine":37,"endColumn":20},{"ruleId":"719","severity":1,"message":"726","line":137,"column":22,"nodeType":"721","messageId":"722","endLine":137,"endColumn":27},{"ruleId":"719","severity":1,"message":"727","line":1,"column":8,"nodeType":"721","messageId":"722","endLine":1,"endColumn":15},{"ruleId":"719","severity":1,"message":"728","line":2,"column":8,"nodeType":"721","messageId":"722","endLine":2,"endColumn":18},{"ruleId":"719","severity":1,"message":"729","line":3,"column":8,"nodeType":"721","messageId":"722","endLine":3,"endColumn":23},{"ruleId":"719","severity":1,"message":"730","line":4,"column":8,"nodeType":"721","messageId":"722","endLine":4,"endColumn":11},{"ruleId":"731","severity":1,"message":"732","line":10,"column":34,"nodeType":"733","messageId":"734","endLine":10,"endColumn":36},{"ruleId":"719","severity":1,"message":"735","line":11,"column":11,"nodeType":"721","messageId":"722","endLine":11,"endColumn":19},{"ruleId":"719","severity":1,"message":"736","line":12,"column":12,"nodeType":"721","messageId":"722","endLine":12,"endColumn":13},{"ruleId":"719","severity":1,"message":"737","line":1,"column":27,"nodeType":"721","messageId":"722","endLine":1,"endColumn":33},{"ruleId":"719","severity":1,"message":"738","line":5,"column":5,"nodeType":"721","messageId":"722","endLine":5,"endColumn":9},{"ruleId":"719","severity":1,"message":"739","line":5,"column":11,"nodeType":"721","messageId":"722","endLine":5,"endColumn":22},{"ruleId":"719","severity":1,"message":"740","line":9,"column":5,"nodeType":"721","messageId":"722","endLine":9,"endColumn":9},{"ruleId":"719","severity":1,"message":"741","line":10,"column":5,"nodeType":"721","messageId":"722","endLine":10,"endColumn":14},{"ruleId":"719","severity":1,"message":"742","line":11,"column":5,"nodeType":"721","messageId":"722","endLine":11,"endColumn":12},{"ruleId":"719","severity":1,"message":"743","line":11,"column":23,"nodeType":"721","messageId":"722","endLine":11,"endColumn":33},{"ruleId":"719","severity":1,"message":"744","line":19,"column":8,"nodeType":"721","messageId":"722","endLine":19,"endColumn":13},{"ruleId":"719","severity":1,"message":"745","line":40,"column":8,"nodeType":"721","messageId":"722","endLine":40,"endColumn":19},{"ruleId":"719","severity":1,"message":"746","line":41,"column":8,"nodeType":"721","messageId":"722","endLine":41,"endColumn":18},{"ruleId":"719","severity":1,"message":"747","line":47,"column":9,"nodeType":"721","messageId":"722","endLine":47,"endColumn":25},{"ruleId":"719","severity":1,"message":"748","line":47,"column":39,"nodeType":"721","messageId":"722","endLine":47,"endColumn":58},{"ruleId":"719","severity":1,"message":"749","line":48,"column":9,"nodeType":"721","messageId":"722","endLine":48,"endColumn":26},{"ruleId":"719","severity":1,"message":"750","line":48,"column":28,"nodeType":"721","messageId":"722","endLine":48,"endColumn":46},{"ruleId":"719","severity":1,"message":"751","line":145,"column":12,"nodeType":"721","messageId":"722","endLine":145,"endColumn":27},{"ruleId":"719","severity":1,"message":"752","line":176,"column":13,"nodeType":"721","messageId":"722","endLine":176,"endColumn":24},{"ruleId":"753","severity":1,"message":"754","line":249,"column":62,"nodeType":"755","messageId":"756","endLine":249,"endColumn":64},{"ruleId":"753","severity":1,"message":"754","line":249,"column":74,"nodeType":"755","messageId":"756","endLine":249,"endColumn":76},{"ruleId":"753","severity":1,"message":"754","line":255,"column":57,"nodeType":"755","messageId":"756","endLine":255,"endColumn":59},{"ruleId":"753","severity":1,"message":"754","line":255,"column":68,"nodeType":"755","messageId":"756","endLine":255,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":260,"column":56,"nodeType":"755","messageId":"756","endLine":260,"endColumn":58},{"ruleId":"753","severity":1,"message":"754","line":260,"column":68,"nodeType":"755","messageId":"756","endLine":260,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":265,"column":55,"nodeType":"755","messageId":"756","endLine":265,"endColumn":57},{"ruleId":"753","severity":1,"message":"754","line":265,"column":66,"nodeType":"755","messageId":"756","endLine":265,"endColumn":68},{"ruleId":"753","severity":1,"message":"754","line":270,"column":55,"nodeType":"755","messageId":"756","endLine":270,"endColumn":57},{"ruleId":"753","severity":1,"message":"754","line":270,"column":67,"nodeType":"755","messageId":"756","endLine":270,"endColumn":69},{"ruleId":"753","severity":1,"message":"754","line":275,"column":56,"nodeType":"755","messageId":"756","endLine":275,"endColumn":58},{"ruleId":"753","severity":1,"message":"754","line":275,"column":67,"nodeType":"755","messageId":"756","endLine":275,"endColumn":69},{"ruleId":"753","severity":1,"message":"754","line":280,"column":56,"nodeType":"755","messageId":"756","endLine":280,"endColumn":58},{"ruleId":"753","severity":1,"message":"754","line":280,"column":68,"nodeType":"755","messageId":"756","endLine":280,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":285,"column":56,"nodeType":"755","messageId":"756","endLine":285,"endColumn":58},{"ruleId":"753","severity":1,"message":"754","line":285,"column":68,"nodeType":"755","messageId":"756","endLine":285,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":295,"column":55,"nodeType":"755","messageId":"756","endLine":295,"endColumn":57},{"ruleId":"753","severity":1,"message":"754","line":295,"column":67,"nodeType":"755","messageId":"756","endLine":295,"endColumn":69},{"ruleId":"753","severity":1,"message":"754","line":300,"column":56,"nodeType":"755","messageId":"756","endLine":300,"endColumn":58},{"ruleId":"753","severity":1,"message":"754","line":300,"column":68,"nodeType":"755","messageId":"756","endLine":300,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":305,"column":57,"nodeType":"755","messageId":"756","endLine":305,"endColumn":59},{"ruleId":"753","severity":1,"message":"754","line":305,"column":68,"nodeType":"755","messageId":"756","endLine":305,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":310,"column":56,"nodeType":"755","messageId":"756","endLine":310,"endColumn":58},{"ruleId":"753","severity":1,"message":"754","line":310,"column":68,"nodeType":"755","messageId":"756","endLine":310,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":315,"column":57,"nodeType":"755","messageId":"756","endLine":315,"endColumn":59},{"ruleId":"753","severity":1,"message":"754","line":315,"column":68,"nodeType":"755","messageId":"756","endLine":315,"endColumn":70},{"ruleId":"753","severity":1,"message":"754","line":320,"column":55,"nodeType":"755","messageId":"756","endLine":320,"endColumn":57},{"ruleId":"753","severity":1,"message":"754","line":320,"column":66,"nodeType":"755","messageId":"756","endLine":320,"endColumn":68},{"ruleId":"753","severity":1,"message":"754","line":325,"column":57,"nodeType":"755","messageId":"756","endLine":325,"endColumn":59},{"ruleId":"753","severity":1,"message":"754","line":325,"column":69,"nodeType":"755","messageId":"756","endLine":325,"endColumn":71},{"ruleId":"753","severity":1,"message":"754","line":330,"column":56,"nodeType":"755","messageId":"756","endLine":330,"endColumn":58},{"ruleId":"753","severity":1,"message":"754","line":330,"column":68,"nodeType":"755","messageId":"756","endLine":330,"endColumn":70},{"ruleId":"757","severity":1,"message":"758","line":368,"column":27,"nodeType":"759","messageId":"760","endLine":368,"endColumn":29},{"ruleId":"761","severity":1,"message":"762","line":420,"column":10,"nodeType":"763","endLine":420,"endColumn":90,"suggestions":"764"},{"ruleId":"761","severity":1,"message":"765","line":420,"column":29,"nodeType":"766","endLine":420,"endColumn":60},{"ruleId":"761","severity":1,"message":"765","line":420,"column":62,"nodeType":"766","endLine":420,"endColumn":89},{"ruleId":"719","severity":1,"message":"767","line":1,"column":8,"nodeType":"721","messageId":"722","endLine":1,"endColumn":13},{"ruleId":"719","severity":1,"message":"768","line":41,"column":11,"nodeType":"721","messageId":"722","endLine":41,"endColumn":22},{"ruleId":"719","severity":1,"message":"769","line":61,"column":11,"nodeType":"721","messageId":"722","endLine":61,"endColumn":33},{"ruleId":"719","severity":1,"message":"730","line":4,"column":8,"nodeType":"721","messageId":"722","endLine":4,"endColumn":11},{"ruleId":"719","severity":1,"message":"729","line":3,"column":8,"nodeType":"721","messageId":"722","endLine":3,"endColumn":23},{"ruleId":"719","severity":1,"message":"730","line":4,"column":8,"nodeType":"721","messageId":"722","endLine":4,"endColumn":11},{"ruleId":"719","severity":1,"message":"770","line":6,"column":9,"nodeType":"721","messageId":"722","endLine":6,"endColumn":21},{"ruleId":"761","severity":1,"message":"771","line":6,"column":6,"nodeType":"763","endLine":6,"endColumn":8,"suggestions":"772"},{"ruleId":"719","severity":1,"message":"773","line":3,"column":9,"nodeType":"721","messageId":"722","endLine":3,"endColumn":20},{"ruleId":"719","severity":1,"message":"774","line":4,"column":9,"nodeType":"721","messageId":"722","endLine":4,"endColumn":23},{"ruleId":"719","severity":1,"message":"775","line":5,"column":9,"nodeType":"721","messageId":"722","endLine":5,"endColumn":15},{"ruleId":"719","severity":1,"message":"776","line":3,"column":9,"nodeType":"721","messageId":"722","endLine":3,"endColumn":20},{"ruleId":"719","severity":1,"message":"728","line":17,"column":8,"nodeType":"721","messageId":"722","endLine":17,"endColumn":18},{"ruleId":"719","severity":1,"message":"777","line":18,"column":8,"nodeType":"721","messageId":"722","endLine":18,"endColumn":18},{"ruleId":"761","severity":1,"message":"778","line":103,"column":8,"nodeType":"763","endLine":103,"endColumn":18,"suggestions":"779"},{"ruleId":"761","severity":1,"message":"780","line":128,"column":6,"nodeType":"763","endLine":128,"endColumn":40,"suggestions":"781"},{"ruleId":"761","severity":1,"message":"765","line":128,"column":7,"nodeType":"766","endLine":128,"endColumn":29},{"ruleId":"761","severity":1,"message":"778","line":137,"column":6,"nodeType":"763","endLine":137,"endColumn":8,"suggestions":"782"},{"ruleId":"719","severity":1,"message":"783","line":3,"column":8,"nodeType":"721","messageId":"722","endLine":3,"endColumn":12},{"ruleId":"719","severity":1,"message":"784","line":8,"column":5,"nodeType":"721","messageId":"722","endLine":8,"endColumn":11},{"ruleId":"719","severity":1,"message":"785","line":9,"column":5,"nodeType":"721","messageId":"722","endLine":9,"endColumn":18},{"ruleId":"719","severity":1,"message":"786","line":10,"column":5,"nodeType":"721","messageId":"722","endLine":10,"endColumn":18},{"ruleId":"719","severity":1,"message":"787","line":11,"column":5,"nodeType":"721","messageId":"722","endLine":11,"endColumn":16},{"ruleId":"719","severity":1,"message":"788","line":27,"column":8,"nodeType":"721","messageId":"722","endLine":27,"endColumn":16},{"ruleId":"719","severity":1,"message":"789","line":28,"column":8,"nodeType":"721","messageId":"722","endLine":28,"endColumn":32},{"ruleId":"719","severity":1,"message":"790","line":29,"column":8,"nodeType":"721","messageId":"722","endLine":29,"endColumn":26},{"ruleId":"719","severity":1,"message":"791","line":30,"column":8,"nodeType":"721","messageId":"722","endLine":30,"endColumn":21},{"ruleId":"719","severity":1,"message":"739","line":33,"column":8,"nodeType":"721","messageId":"722","endLine":33,"endColumn":19},{"ruleId":"719","severity":1,"message":"792","line":34,"column":8,"nodeType":"721","messageId":"722","endLine":34,"endColumn":27},{"ruleId":"719","severity":1,"message":"793","line":35,"column":8,"nodeType":"721","messageId":"722","endLine":35,"endColumn":19},{"ruleId":"719","severity":1,"message":"794","line":36,"column":8,"nodeType":"721","messageId":"722","endLine":36,"endColumn":12},{"ruleId":"719","severity":1,"message":"795","line":37,"column":8,"nodeType":"721","messageId":"722","endLine":37,"endColumn":22},{"ruleId":"719","severity":1,"message":"796","line":38,"column":8,"nodeType":"721","messageId":"722","endLine":38,"endColumn":16},{"ruleId":"719","severity":1,"message":"745","line":39,"column":8,"nodeType":"721","messageId":"722","endLine":39,"endColumn":19},{"ruleId":"719","severity":1,"message":"797","line":40,"column":9,"nodeType":"721","messageId":"722","endLine":40,"endColumn":17},{"ruleId":"719","severity":1,"message":"798","line":41,"column":8,"nodeType":"721","messageId":"722","endLine":41,"endColumn":22},{"ruleId":"719","severity":1,"message":"799","line":42,"column":9,"nodeType":"721","messageId":"722","endLine":42,"endColumn":24},{"ruleId":"719","severity":1,"message":"800","line":43,"column":8,"nodeType":"721","messageId":"722","endLine":43,"endColumn":22},{"ruleId":"761","severity":1,"message":"778","line":134,"column":6,"nodeType":"763","endLine":134,"endColumn":8,"suggestions":"801"},{"ruleId":"719","severity":1,"message":"802","line":139,"column":11,"nodeType":"721","messageId":"722","endLine":139,"endColumn":22},{"ruleId":"719","severity":1,"message":"803","line":5,"column":8,"nodeType":"721","messageId":"722","endLine":5,"endColumn":15},{"ruleId":"719","severity":1,"message":"804","line":9,"column":8,"nodeType":"721","messageId":"722","endLine":9,"endColumn":17},{"ruleId":"719","severity":1,"message":"804","line":22,"column":8,"nodeType":"721","messageId":"722","endLine":22,"endColumn":17},{"ruleId":"719","severity":1,"message":"804","line":9,"column":8,"nodeType":"721","messageId":"722","endLine":9,"endColumn":17},{"ruleId":"719","severity":1,"message":"723","line":1,"column":16,"nodeType":"721","messageId":"722","endLine":1,"endColumn":25},{"ruleId":"719","severity":1,"message":"805","line":1,"column":27,"nodeType":"721","messageId":"722","endLine":1,"endColumn":35},{"ruleId":"719","severity":1,"message":"783","line":3,"column":8,"nodeType":"721","messageId":"722","endLine":3,"endColumn":12},{"ruleId":"719","severity":1,"message":"804","line":10,"column":8,"nodeType":"721","messageId":"722","endLine":10,"endColumn":17},{"ruleId":"719","severity":1,"message":"806","line":11,"column":8,"nodeType":"721","messageId":"722","endLine":11,"endColumn":24},{"ruleId":"719","severity":1,"message":"723","line":3,"column":16,"nodeType":"721","messageId":"722","endLine":3,"endColumn":25},{"ruleId":"719","severity":1,"message":"807","line":10,"column":10,"nodeType":"721","messageId":"722","endLine":10,"endColumn":23},{"ruleId":"719","severity":1,"message":"736","line":55,"column":11,"nodeType":"721","messageId":"722","endLine":55,"endColumn":12},{"ruleId":"761","severity":1,"message":"808","line":64,"column":6,"nodeType":"763","endLine":64,"endColumn":23,"suggestions":"809"},{"ruleId":"719","severity":1,"message":"810","line":15,"column":8,"nodeType":"721","messageId":"722","endLine":15,"endColumn":18},{"ruleId":"719","severity":1,"message":"726","line":85,"column":23,"nodeType":"721","messageId":"722","endLine":85,"endColumn":28},{"ruleId":"761","severity":1,"message":"811","line":119,"column":8,"nodeType":"763","endLine":119,"endColumn":17,"suggestions":"812"},{"ruleId":"761","severity":1,"message":"813","line":121,"column":23,"nodeType":"763","endLine":121,"endColumn":50,"suggestions":"814"},{"ruleId":"719","severity":1,"message":"815","line":4,"column":15,"nodeType":"721","messageId":"722","endLine":4,"endColumn":31},{"ruleId":"719","severity":1,"message":"770","line":8,"column":9,"nodeType":"721","messageId":"722","endLine":8,"endColumn":21},{"ruleId":"719","severity":1,"message":"816","line":21,"column":9,"nodeType":"721","messageId":"722","endLine":21,"endColumn":16},{"ruleId":"719","severity":1,"message":"817","line":15,"column":8,"nodeType":"721","messageId":"722","endLine":15,"endColumn":16},{"ruleId":"761","severity":1,"message":"808","line":69,"column":6,"nodeType":"763","endLine":69,"endColumn":24,"suggestions":"818"},{"ruleId":"761","severity":1,"message":"808","line":60,"column":6,"nodeType":"763","endLine":60,"endColumn":24,"suggestions":"819"},{"ruleId":"719","severity":1,"message":"820","line":2,"column":9,"nodeType":"721","messageId":"722","endLine":2,"endColumn":19},{"ruleId":"719","severity":1,"message":"821","line":4,"column":9,"nodeType":"721","messageId":"722","endLine":4,"endColumn":17},{"ruleId":"719","severity":1,"message":"822","line":14,"column":13,"nodeType":"721","messageId":"722","endLine":14,"endColumn":22},{"ruleId":"761","severity":1,"message":"808","line":57,"column":6,"nodeType":"763","endLine":57,"endColumn":21,"suggestions":"823"},{"ruleId":"761","severity":1,"message":"808","line":64,"column":6,"nodeType":"763","endLine":64,"endColumn":21,"suggestions":"824"},{"ruleId":"719","severity":1,"message":"736","line":33,"column":11,"nodeType":"721","messageId":"722","endLine":33,"endColumn":12},{"ruleId":"719","severity":1,"message":"774","line":1,"column":9,"nodeType":"721","messageId":"722","endLine":1,"endColumn":23},{"ruleId":"719","severity":1,"message":"825","line":4,"column":21,"nodeType":"721","messageId":"722","endLine":4,"endColumn":29},{"ruleId":"719","severity":1,"message":"773","line":6,"column":9,"nodeType":"721","messageId":"722","endLine":6,"endColumn":20},{"ruleId":"719","severity":1,"message":"826","line":7,"column":20,"nodeType":"721","messageId":"722","endLine":7,"endColumn":37},{"ruleId":"719","severity":1,"message":"827","line":8,"column":9,"nodeType":"721","messageId":"722","endLine":8,"endColumn":23},{"ruleId":"719","severity":1,"message":"828","line":9,"column":7,"nodeType":"721","messageId":"722","endLine":9,"endColumn":16},{"ruleId":"719","severity":1,"message":"829","line":23,"column":8,"nodeType":"721","messageId":"722","endLine":23,"endColumn":16},{"ruleId":"719","severity":1,"message":"830","line":25,"column":8,"nodeType":"721","messageId":"722","endLine":25,"endColumn":27},{"ruleId":"719","severity":1,"message":"773","line":27,"column":9,"nodeType":"721","messageId":"722","endLine":27,"endColumn":20},{"ruleId":"719","severity":1,"message":"831","line":33,"column":8,"nodeType":"721","messageId":"722","endLine":33,"endColumn":12},{"ruleId":"719","severity":1,"message":"820","line":4,"column":9,"nodeType":"721","messageId":"722","endLine":4,"endColumn":19},{"ruleId":"719","severity":1,"message":"786","line":12,"column":32,"nodeType":"721","messageId":"722","endLine":12,"endColumn":45},{"ruleId":"719","severity":1,"message":"832","line":12,"column":60,"nodeType":"721","messageId":"722","endLine":12,"endColumn":69},{"ruleId":"719","severity":1,"message":"833","line":13,"column":8,"nodeType":"721","messageId":"722","endLine":13,"endColumn":25},{"ruleId":"719","severity":1,"message":"827","line":16,"column":9,"nodeType":"721","messageId":"722","endLine":16,"endColumn":23},{"ruleId":"761","severity":1,"message":"778","line":95,"column":8,"nodeType":"763","endLine":95,"endColumn":28,"suggestions":"834"},{"ruleId":"719","severity":1,"message":"825","line":3,"column":21,"nodeType":"721","messageId":"722","endLine":3,"endColumn":29},{"ruleId":"719","severity":1,"message":"826","line":4,"column":20,"nodeType":"721","messageId":"722","endLine":4,"endColumn":37},{"ruleId":"719","severity":1,"message":"736","line":17,"column":11,"nodeType":"721","messageId":"722","endLine":17,"endColumn":12},{"ruleId":"719","severity":1,"message":"816","line":18,"column":9,"nodeType":"721","messageId":"722","endLine":18,"endColumn":16},{"ruleId":"719","severity":1,"message":"723","line":1,"column":16,"nodeType":"721","messageId":"722","endLine":1,"endColumn":25},{"ruleId":"719","severity":1,"message":"774","line":3,"column":9,"nodeType":"721","messageId":"722","endLine":3,"endColumn":23},{"ruleId":"719","severity":1,"message":"835","line":4,"column":19,"nodeType":"721","messageId":"722","endLine":4,"endColumn":35},{"ruleId":"719","severity":1,"message":"836","line":5,"column":9,"nodeType":"721","messageId":"722","endLine":5,"endColumn":17},{"ruleId":"719","severity":1,"message":"837","line":6,"column":8,"nodeType":"721","messageId":"722","endLine":6,"endColumn":18},{"ruleId":"719","severity":1,"message":"832","line":8,"column":8,"nodeType":"721","messageId":"722","endLine":8,"endColumn":17},{"ruleId":"719","severity":1,"message":"825","line":9,"column":8,"nodeType":"721","messageId":"722","endLine":9,"endColumn":16},{"ruleId":"719","severity":1,"message":"736","line":33,"column":11,"nodeType":"721","messageId":"722","endLine":33,"endColumn":12},{"ruleId":"719","severity":1,"message":"787","line":8,"column":8,"nodeType":"721","messageId":"722","endLine":8,"endColumn":19},{"ruleId":"719","severity":1,"message":"785","line":9,"column":8,"nodeType":"721","messageId":"722","endLine":9,"endColumn":21},{"ruleId":"719","severity":1,"message":"775","line":10,"column":8,"nodeType":"721","messageId":"722","endLine":10,"endColumn":14},{"ruleId":"719","severity":1,"message":"784","line":12,"column":8,"nodeType":"721","messageId":"722","endLine":12,"endColumn":14},{"ruleId":"719","severity":1,"message":"748","line":18,"column":9,"nodeType":"721","messageId":"722","endLine":18,"endColumn":28},{"ruleId":"719","severity":1,"message":"825","line":3,"column":21,"nodeType":"721","messageId":"722","endLine":3,"endColumn":29},{"ruleId":"719","severity":1,"message":"826","line":4,"column":20,"nodeType":"721","messageId":"722","endLine":4,"endColumn":37},{"ruleId":"719","severity":1,"message":"736","line":17,"column":11,"nodeType":"721","messageId":"722","endLine":17,"endColumn":12},{"ruleId":"719","severity":1,"message":"816","line":18,"column":9,"nodeType":"721","messageId":"722","endLine":18,"endColumn":16},{"ruleId":"719","severity":1,"message":"723","line":1,"column":16,"nodeType":"721","messageId":"722","endLine":1,"endColumn":25},{"ruleId":"719","severity":1,"message":"820","line":2,"column":9,"nodeType":"721","messageId":"722","endLine":2,"endColumn":19},{"ruleId":"719","severity":1,"message":"821","line":4,"column":9,"nodeType":"721","messageId":"722","endLine":4,"endColumn":17},{"ruleId":"719","severity":1,"message":"835","line":4,"column":19,"nodeType":"721","messageId":"722","endLine":4,"endColumn":35},{"ruleId":"719","severity":1,"message":"836","line":5,"column":9,"nodeType":"721","messageId":"722","endLine":5,"endColumn":17},{"ruleId":"719","severity":1,"message":"837","line":6,"column":8,"nodeType":"721","messageId":"722","endLine":6,"endColumn":18},{"ruleId":"719","severity":1,"message":"838","line":7,"column":8,"nodeType":"721","messageId":"722","endLine":7,"endColumn":20},{"ruleId":"719","severity":1,"message":"832","line":8,"column":8,"nodeType":"721","messageId":"722","endLine":8,"endColumn":17},{"ruleId":"719","severity":1,"message":"825","line":9,"column":8,"nodeType":"721","messageId":"722","endLine":9,"endColumn":16},{"ruleId":"719","severity":1,"message":"839","line":12,"column":8,"nodeType":"721","messageId":"722","endLine":12,"endColumn":16},{"ruleId":"719","severity":1,"message":"723","line":1,"column":16,"nodeType":"721","messageId":"722","endLine":1,"endColumn":25},{"ruleId":"719","severity":1,"message":"820","line":2,"column":9,"nodeType":"721","messageId":"722","endLine":2,"endColumn":19},{"ruleId":"719","severity":1,"message":"821","line":4,"column":9,"nodeType":"721","messageId":"722","endLine":4,"endColumn":17},{"ruleId":"719","severity":1,"message":"835","line":4,"column":19,"nodeType":"721","messageId":"722","endLine":4,"endColumn":35},{"ruleId":"719","severity":1,"message":"836","line":5,"column":9,"nodeType":"721","messageId":"722","endLine":5,"endColumn":17},{"ruleId":"719","severity":1,"message":"837","line":6,"column":8,"nodeType":"721","messageId":"722","endLine":6,"endColumn":18},{"ruleId":"719","severity":1,"message":"838","line":7,"column":8,"nodeType":"721","messageId":"722","endLine":7,"endColumn":20},{"ruleId":"719","severity":1,"message":"832","line":8,"column":8,"nodeType":"721","messageId":"722","endLine":8,"endColumn":17},{"ruleId":"719","severity":1,"message":"825","line":9,"column":8,"nodeType":"721","messageId":"722","endLine":9,"endColumn":16},{"ruleId":"719","severity":1,"message":"736","line":13,"column":12,"nodeType":"721","messageId":"722","endLine":13,"endColumn":13},{"ruleId":"719","severity":1,"message":"774","line":1,"column":9,"nodeType":"721","messageId":"722","endLine":1,"endColumn":23},{"ruleId":"719","severity":1,"message":"840","line":3,"column":8,"nodeType":"721","messageId":"722","endLine":3,"endColumn":28},{"ruleId":"719","severity":1,"message":"773","line":6,"column":9,"nodeType":"721","messageId":"722","endLine":6,"endColumn":20},{"ruleId":"719","severity":1,"message":"841","line":7,"column":8,"nodeType":"721","messageId":"722","endLine":7,"endColumn":17},{"ruleId":"719","severity":1,"message":"826","line":7,"column":20,"nodeType":"721","messageId":"722","endLine":7,"endColumn":37},{"ruleId":"719","severity":1,"message":"827","line":8,"column":9,"nodeType":"721","messageId":"722","endLine":8,"endColumn":23},{"ruleId":"719","severity":1,"message":"816","line":21,"column":9,"nodeType":"721","messageId":"722","endLine":21,"endColumn":16},{"ruleId":"719","severity":1,"message":"842","line":22,"column":9,"nodeType":"721","messageId":"722","endLine":22,"endColumn":21},{"ruleId":"719","severity":1,"message":"843","line":23,"column":9,"nodeType":"721","messageId":"722","endLine":23,"endColumn":14},{"ruleId":"719","severity":1,"message":"822","line":4,"column":8,"nodeType":"721","messageId":"722","endLine":4,"endColumn":17},{"ruleId":"761","severity":1,"message":"844","line":37,"column":6,"nodeType":"763","endLine":37,"endColumn":18,"suggestions":"845"},{"ruleId":"719","severity":1,"message":"822","line":5,"column":8,"nodeType":"721","messageId":"722","endLine":5,"endColumn":17},{"ruleId":"719","severity":1,"message":"832","line":31,"column":8,"nodeType":"721","messageId":"722","endLine":31,"endColumn":17},{"ruleId":"761","severity":1,"message":"778","line":79,"column":6,"nodeType":"763","endLine":79,"endColumn":18,"suggestions":"846"},{"ruleId":"719","severity":1,"message":"847","line":1,"column":8,"nodeType":"721","messageId":"722","endLine":1,"endColumn":22},{"ruleId":"719","severity":1,"message":"776","line":2,"column":9,"nodeType":"721","messageId":"722","endLine":2,"endColumn":20},{"ruleId":"719","severity":1,"message":"847","line":1,"column":8,"nodeType":"721","messageId":"722","endLine":1,"endColumn":22},{"ruleId":"719","severity":1,"message":"776","line":2,"column":9,"nodeType":"721","messageId":"722","endLine":2,"endColumn":20},{"ruleId":"719","severity":1,"message":"848","line":40,"column":11,"nodeType":"721","messageId":"722","endLine":40,"endColumn":20},{"ruleId":"719","severity":1,"message":"847","line":1,"column":8,"nodeType":"721","messageId":"722","endLine":1,"endColumn":22},{"ruleId":"719","severity":1,"message":"776","line":2,"column":9,"nodeType":"721","messageId":"722","endLine":2,"endColumn":20},"no-native-reassign",["849"],"no-negated-in-lhs",["850"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useMediaQuery' is defined but never used.","'useHistory' is defined but never used.","'NEEDS' is assigned a value but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","'Brightness4Icon' is defined but never used.","'Box' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'themeCtx' is assigned a value but never used.","'t' is assigned a value but never used.","'useRef' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Stepper' is defined but never used.","'withStyles' is defined but never used.","'Paper' is defined but never used.","'CardContent' is defined but never used.","'DeleteIcon' is defined but never used.","'DNI_OR_NIE_REGEX' is defined but never used.","'safe_email_required' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik.values'. Either include it or remove the dependency array.","ArrayExpression",["851"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'React' is defined but never used.","'changeTheme' is assigned a value but never used.","'handleLanguageMenuOpen' is assigned a value but never used.","'themeContext' is defined but never used.","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["852"],"'useSnackbar' is defined but never used.","'useTranslation' is defined but never used.","'Button' is defined but never used.","'API_VERSION' is defined but never used.","'SearchIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.",["853"],"React Hook useEffect has missing dependencies: 'errorHandler' and 'formik.values'. Either include them or remove the dependency array.",["854"],["855"],"'Grid' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'EuroIcon' is defined but never used.","'AccountBalanceWalletIcon' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'PaymentsDataService' is defined but never used.","'ReceiptIcon' is defined but never used.","'clsx' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Collapse' is defined but never used.","'Skeleton' is defined but never used.","'DirtyTextField' is defined but never used.","'payment_methods' is defined but never used.","'InputAdornment' is defined but never used.",["856"],"'getFormData' is assigned a value but never used.","'Student' is defined but never used.","'ItemsList' is defined but never used.","'useState' is defined but never used.","'ExportSearchChip' is defined but never used.","'countryToFlag' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'loading'. Either include them or remove the dependency array.",["857"],"'GetAppIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'page' and 'search'. Either include them or remove the dependency array.",["858"],"React Hook useEffect has missing dependencies: 'dataService', 'displayNameField', 'errorHandler', 'getFilters', 'searchTerm', 'secondaryDisplayNameField', and 'setItems'. Either include them or remove the dependency array. If 'setItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["859"],"'CircularProgress' is defined but never used.","'classes' is assigned a value but never used.","'Schedule' is defined but never used.",["860"],["861"],"'makeStyles' is defined but never used.","'Checkbox' is defined but never used.","'PropTypes' is defined but never used.",["862"],["863"],"'useTheme' is defined but never used.","'eventFromSchedule' is defined but never used.","'confirmContext' is defined but never used.","'useStyles' is assigned a value but never used.","'SendIcon' is defined but never used.","'StudentsDataService' is defined but never used.","'Link' is defined but never used.","'TextField' is defined but never used.","'DialogContentText' is defined but never used.",["864"],"'FormControlLabel' is defined but never used.","'allNeeds' is defined but never used.","'Typography' is defined but never used.","'createStyles' is defined but never used.","'SaveIcon' is defined but never used.","'SchedulesDataService' is defined but never used.","'Scheduler' is defined but never used.","'errorHandler' is assigned a value but never used.","'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'newGuardian'. Either include them or remove the dependency array.",["865"],["866"],"'serviceFactory' is defined but never used.","'studentId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"867","fix":"868"},{"desc":"869","fix":"870"},{"desc":"871","fix":"872"},{"desc":"873","fix":"874"},{"desc":"875","fix":"876"},{"desc":"875","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"desc":"890","fix":"891"},{"desc":"892","fix":"893"},{"desc":"894","fix":"895"},{"desc":"896","fix":"897"},"Update the dependencies array to be: [availableCourses, formik.values]",{"range":"898","text":"899"},"Update the dependencies array to be: [handler]",{"range":"900","text":"901"},"Update the dependencies array to be: [courseId, errorHandler]",{"range":"902","text":"903"},"Update the dependencies array to be: [courseId, errorHandler, formik.values]",{"range":"904","text":"905"},"Update the dependencies array to be: [errorHandler]",{"range":"906","text":"907"},{"range":"908","text":"907"},"Update the dependencies array to be: [currentCourseId, errorHandler, loading]",{"range":"909","text":"910"},"Update the dependencies array to be: [filters, page, search]",{"range":"911","text":"912"},"Update the dependencies array to be: [page, searchBy, parent_id, dataService, searchTerm, displayNameField, secondaryDisplayNameField, getFilters, errorHandler, setItems]",{"range":"913","text":"914"},"Update the dependencies array to be: [currentStudentId, errorHandler, loading]",{"range":"915","text":"916"},"Update the dependencies array to be: [currentTeacherId, errorHandler, loading]",{"range":"917","text":"918"},"Update the dependencies array to be: [currentUserId, errorHandler, loading]",{"range":"919","text":"920"},"Update the dependencies array to be: [currentRoomId, errorHandler, loading]",{"range":"921","text":"922"},"Update the dependencies array to be: [errorHandler, scheduleIds, theme]",{"range":"923","text":"924"},"Update the dependencies array to be: [errorHandler, guardianId, newGuardian]",{"range":"925","text":"926"},"Update the dependencies array to be: [errorHandler, paymentIds]",{"range":"927","text":"928"},[19262,19342],"[availableCourses, formik.values]",[134,136],"[handler]",[3200,3210],"[courseId, errorHandler]",[4119,4153],"[courseId, errorHandler, formik.values]",[4385,4387],"[errorHandler]",[4554,4556],[2470,2487],"[currentCourseId, errorHandler, loading]",[4439,4448],"[filters, page, search]",[4485,4512],"[page, searchBy, parent_id, dataService, searchTerm, displayNameField, secondaryDisplayNameField, getFilters, errorHandler, setItems]",[2479,2497],"[currentStudentId, errorHandler, loading]",[2115,2133],"[currentTeacherId, errorHandler, loading]",[1781,1796],"[currentUserId, errorHandler, loading]",[1937,1952],"[currentRoomId, errorHandler, loading]",[3569,3589],"[errorHandler, scheduleIds, theme]",[1559,1571],"[errorHandler, guardianId, newGuardian]",[2695,2707],"[errorHandler, paymentIds]"]