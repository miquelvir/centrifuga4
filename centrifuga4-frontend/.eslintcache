[{"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\index.js":"1","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\i18nextConf.js":"2","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\App\\App.js":"4","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\theme.js":"5","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\PrivateRoute.js":"6","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\theme-context.js":"7","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\HomePage\\HomePage.js":"8","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\history.js":"9","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\user-context.js":"10","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\LoginPage\\LoginPage.js":"11","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\SignupPage\\SignupPage.js":"12","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\ResetPage\\ResetPage.js":"13","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\toolbar.home.component.js":"14","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\handle-response.js":"15","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\auth.service.js":"16","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\signup.service.js":"17","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\password-reset.service.js":"18","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_data\\password_regex.js":"19","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.component.js":"20","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\auth-header.js":"21","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.component.js":"22","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.list.component.js":"23","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.attendee.component.js":"24","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\loadingBackdrop.component.js":"25","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.person.component.js":"26","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\normik.js":"27","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\students.service.js":"28","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\dirtytextfield.component.js":"29","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\contry-select.component.js":"30","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_data\\countries.js":"31","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\service-factory.js":"32","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\searchbar.component.js":"33","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\config.js":"34","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\on-mount.js":"35","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\HomePage\\routes.js":"36","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_yup\\validators.js":"37","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\guardians.service.js":"38","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.guardian.component.js":"39","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.payments.component.js":"40","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\payments.service.js":"41","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.payments.payment.component.js":"42"},{"size":1325,"mtime":1609507774003,"results":"43","hashOfConfig":"44"},{"size":1257,"mtime":1609414645576,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1608888995468,"results":"46","hashOfConfig":"44"},{"size":2005,"mtime":1609414645560,"results":"47","hashOfConfig":"44"},{"size":1252,"mtime":1609597925558,"results":"48","hashOfConfig":"44"},{"size":729,"mtime":1609414645560,"results":"49","hashOfConfig":"44"},{"size":195,"mtime":1609414645560,"results":"50","hashOfConfig":"44"},{"size":6844,"mtime":1609769074768,"results":"51","hashOfConfig":"44"},{"size":99,"mtime":1609414645560,"results":"52","hashOfConfig":"44"},{"size":196,"mtime":1609414645560,"results":"53","hashOfConfig":"44"},{"size":7886,"mtime":1609598312566,"results":"54","hashOfConfig":"44"},{"size":11251,"mtime":1609592798430,"results":"55","hashOfConfig":"44"},{"size":7519,"mtime":1609592831574,"results":"56","hashOfConfig":"44"},{"size":6708,"mtime":1609524548659,"results":"57","hashOfConfig":"44"},{"size":6510,"mtime":1609598615208,"results":"58","hashOfConfig":"44"},{"size":1591,"mtime":1609414645560,"results":"59","hashOfConfig":"44"},{"size":863,"mtime":1609414645560,"results":"60","hashOfConfig":"44"},{"size":1210,"mtime":1609414645560,"results":"61","hashOfConfig":"44"},{"size":300,"mtime":1609592662062,"results":"62","hashOfConfig":"44"},{"size":1190,"mtime":1609769254480,"results":"63","hashOfConfig":"44"},{"size":179,"mtime":1609414645560,"results":"64","hashOfConfig":"44"},{"size":5454,"mtime":1609770149261,"results":"65","hashOfConfig":"44"},{"size":5636,"mtime":1609769366918,"results":"66","hashOfConfig":"44"},{"size":3111,"mtime":1609769657674,"results":"67","hashOfConfig":"44"},{"size":755,"mtime":1609001390974,"results":"68","hashOfConfig":"44"},{"size":11079,"mtime":1609697130801,"results":"69","hashOfConfig":"44"},{"size":1447,"mtime":1609592082206,"results":"70","hashOfConfig":"44"},{"size":107,"mtime":1609414645560,"results":"71","hashOfConfig":"44"},{"size":1723,"mtime":1609697130785,"results":"72","hashOfConfig":"44"},{"size":3290,"mtime":1609597925586,"results":"73","hashOfConfig":"44"},{"size":13749,"mtime":1609414645560,"results":"74","hashOfConfig":"44"},{"size":6611,"mtime":1609705568744,"results":"75","hashOfConfig":"44"},{"size":1392,"mtime":1609414645560,"results":"76","hashOfConfig":"44"},{"size":85,"mtime":1609414645560,"results":"77","hashOfConfig":"44"},{"size":142,"mtime":1609510106495,"results":"78","hashOfConfig":"44"},{"size":1998,"mtime":1609511396648,"results":"79","hashOfConfig":"44"},{"size":1390,"mtime":1609694131692,"results":"80","hashOfConfig":"44"},{"size":108,"mtime":1609608083168,"results":"81","hashOfConfig":"44"},{"size":2238,"mtime":1609769657647,"results":"82","hashOfConfig":"44"},{"size":3353,"mtime":1609769657661,"results":"83","hashOfConfig":"44"},{"size":107,"mtime":1609615910150,"results":"84","hashOfConfig":"44"},{"size":11001,"mtime":1609714801826,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1y56mi5",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\index.js",[],["176","177"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\i18nextConf.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\App\\App.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\theme.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\PrivateRoute.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\theme-context.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\HomePage\\HomePage.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\history.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\user-context.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\LoginPage\\LoginPage.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\SignupPage\\SignupPage.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\ResetPage\\ResetPage.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\toolbar.home.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\handle-response.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\auth.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\signup.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\password-reset.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_data\\password_regex.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\auth-header.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.component.js",["178"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.list.component.js",["179"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.attendee.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\loadingBackdrop.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.person.component.js",["180","181"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Button, DialogActions, MenuItem, TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport * as yup from 'yup';\r\nimport DirtyCountrySelect from \"./contry-select.component\";\r\nimport studentsService from \"../_services/students.service\"\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    fullWidth: {\r\n        width: \"100%\"\r\n    },\r\n    sizeSmall: {\r\n        width: \"25ch\"\r\n    },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction Person(props) {\r\n    const currentPerson = props.currentPerson;\r\n    const patchService = props.patchService;\r\n    const updateCurrentPerson = props.updateCurrentStudent;\r\n    const {t} = useTranslation();\r\n    const classes = useStyles();\r\n    const errorHandler = useErrorHandler();\r\n    let initialValues = currentPerson===null? {}:currentPerson;\r\n\r\n\r\n    const formik = useNormik(true, {\r\n        initialValues: initialValues,\r\n        validationSchema: yup.object({\r\n                                email: yup.string().email(t(\"invalid_email\")),  // todo\r\n                                name: yup.string().required(t(\"name_required\"))\r\n                            }),\r\n        enableReinitialize: true,\r\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\r\n            if (Object.keys(changedValues).length > 0){\r\n                setStatus();\r\n                    patchService.patch({\r\n                      id: initialValues[\"id\"],\r\n                      body: changedValues,\r\n                      initial_values: initialValues\r\n                  }).then(...errorHandler({snackbarSuccess:true}))\r\n                        .then(function (patched_body) {\r\n                                formik.resetForm(patched_body);\r\n                                updateCurrentPerson(patched_body);\r\n                            }).catch(function (err){\r\n                                setStatus(true);\r\n                    })\r\n                        .finally(() => {\r\n                                setSubmitting(false);\r\n                        });\r\n\r\n\r\n                    } else {\r\n                setSubmitting(false);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n            {currentPerson === null\r\n                ?\r\n                (\r\n\r\n                    <Box>\r\n                        {\r\n                            [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map((value, idx) => {\r\n                                return (\r\n                                    <Box key={idx} py={0}>\r\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\r\n                                    </Box>);\r\n                            })\r\n                        }\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                                        <DirtyTextField\r\n                                            label={t(\"id\")}\r\n                                            name=\"id\"\r\n                                            disabled\r\n                                            className={classes.line}\r\n                                            formik={formik}\r\n                                            />\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                label={t(\"name\")}\r\n                                                style={{flex: 1}}\r\n                                                name=\"name\"\r\n                                                formik={formik}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                label={t(\"surname1\")}\r\n                                                style={{flex: 1}}\r\n                                                name=\"surname1\"\r\n                                                formik={formik}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                label={t(\"surname2\")}\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"surname2\"\r\n                                            />\r\n                                        </Box>\r\n\r\n                                    <Box className={[classes.line, classes.composite]}>\r\n                                        <DirtyTextField\r\n                                            label={t(\"email\")}\r\n                                            type=\"email\"\r\n                                            style={{flex: 1}}\r\n                                            formik={formik}\r\n                                            name=\"email\"\r\n                                            helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\r\n                                        />\r\n                                    </Box>\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                label={t(\"address\")}\r\n                                                formik={formik}\r\n                                                style={{flex: 4}}\r\n                                                name=\"address\"\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"city\")}\r\n                                                style={{flex: 2}}\r\n                                                formik={formik}\r\n                                                name=\"city\"\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"zip\")}\r\n                                                formik={formik}\r\n                                                type=\"number\"\r\n                                                style={{flex: 1}}\r\n                                                name=\"zip\"\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"dni\")}\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"dni\"\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"phone\")}\r\n                                                type=\"tel\"\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"phone\"\r\n                                            />\r\n\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"gender\")}\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"gender\"\r\n                                                select>\r\n                                                <MenuItem value=\"m\">{t(\"male\")}</MenuItem>\r\n                                                <MenuItem value=\"f\">{t(\"female\")}</MenuItem>\r\n                                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\r\n                                            </DirtyTextField>\r\n\r\n                                        </Box>\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"birthdate\")}\r\n                                                formik={formik}\r\n                                                type=\"date\"\r\n                                                style={{flex: 1}}\r\n                                                name=\"birth_date\"\r\n                                                InputLabelProps={{shrink: true}}/>\r\n\r\n                                            <DirtyCountrySelect\r\n                                                formik={formik}\r\n                                                name={\"country_of_origin\"}\r\n                                                label={t(\"country_of_origin\")}\r\n                                            />\r\n\r\n                                        </Box>\r\n\r\n                                        <DialogActions>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                className=\"outline\"\r\n                                                onClick={formik.handleReset}\r\n                                                disabled={!formik.dirty || formik.isSubmitting}\r\n                                            >\r\n                                                {t(\"reset\")}\r\n                                            </Button>\r\n                                            <Button type=\"submit\" disabled={!formik.dirty || formik.isSubmitting}>\r\n                                                {t(\"save\")}\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                    </form>\r\n                )\r\n\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport default Person;","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\normik.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\students.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\dirtytextfield.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\contry-select.component.js",["182","183","184","185"],"import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport React from \"react\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {countries} from \"../_data/countries\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode\r\n        .toUpperCase()\r\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => (createStyles({\r\n  textField: dirty => ({\r\n    '& label.Mui-focused':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},  // todo color to theme\r\n    '& .MuiInput-underline:after': {borderBottomColor: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},\r\n      '& label':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\r\n      '& fieldset': {borderColor: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\r\n  }\r\n  ),\r\n    option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },})));\r\n\r\nexport default function DirtyCountrySelect({formik, name, label, ...textFieldProps}) {\r\n  const getInitialOption = (code) => {\r\n      if (code === undefined) return '';\r\n      return countries.find(x=>x.code===code);\r\n  }\r\n\r\n  const [option, _setOption] = React.useState(getInitialOption(formik.values[name]));\r\n  React.useEffect(() => {\r\n    _setOption(getInitialOption(formik.values[name]));\r\n  }, [formik.values[name]]);\r\n\r\n  const setOption = (option) => {\r\n      const newOption = (option !== null)? option.code: '';\r\n      formik.setFieldValue(name, newOption);\r\n      _setOption(newOption);\r\n  }\r\n\r\n  const dirty = formik.values[name] !== formik.initialValues[name];\r\n  const classes = useStyles(dirty);\r\n\r\n  const [inputValue, setInputValue] = React.useState('');\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Autocomplete  // o¡todo use\r\n      style={{ width: 300 }}\r\n      options={countries}\r\n      classes={{\r\n        option: classes.option,\r\n      }}\r\n      autoHighlight\r\n      getOptionLabel={(option) => option.label}\r\n      value={option}\r\n        onChange={(event, newValue) => {\r\n          setOption(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        name={name}\r\n      onBlur={formik.handleBlur}\r\n      renderOption={(option) => (\r\n        <React.Fragment>\r\n          <span>{countryToFlag(option.code)}</span>\r\n          {option.label} ({option.code}) +{option.phone}\r\n        </React.Fragment>\r\n      )}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          className={classes.textField}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_data\\countries.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\service-factory.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\searchbar.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\config.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\on-mount.js",["186"],"import { useEffect } from \"react\";\r\n\r\nexport const useOnMount = handler => {\r\n  return useEffect(() => {\r\n    return handler();\r\n  }, []);\r\n};","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\HomePage\\routes.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_yup\\validators.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\guardians.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.guardian.component.js",["187","188","189","190","191","192"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Person from \"./students.student.person.component\";\r\nimport GuardiansDataService from \"../_services/guardians.service\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  sizeSmall: {\r\n    width: \"25ch\"\r\n  },\r\n  line: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  composite: {display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n    gap: theme.spacing(1), width: \"100%\"}\r\n}));\r\n\r\nfunction Guardian({ children, value, index, title, guardianId, patchService, ...other }) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const [guardian, setGuardian] = useState(null)\r\n\r\n  useEffect(() => {\r\n    GuardiansDataService\r\n            .getOne(guardianId)\r\n            .then(...errorHandler({}))  // todo everywhere\r\n            .then(function (res) {\r\n                    setGuardian(res[\"data\"]);\r\n\r\n                });\r\n  }, [guardianId])\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n            <Box px={2}>\r\n\r\n              <Person currentPerson={guardian} updateCurrentStudent={setGuardian} patchService={patchService}/>\r\n\r\n            </Box>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nGuardian.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Guardian;","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.payments.component.js",["193"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\payments.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.payments.payment.component.js",["194","195","196","197","198","199","200","201","202","203","204"],"import {useTranslation} from \"react-i18next\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport EuroIcon from '@material-ui/icons/Euro';\r\nimport PaymentsDataService from '../_services/payments.service'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport {Button, DialogActions, MenuItem} from \"@material-ui/core\";\r\nimport DirtyCountrySelect from \"./contry-select.component\";\r\nimport {useNormik} from \"../_helpers/normik\";\r\nimport * as yup from \"yup\";\r\nimport {one_of} from \"../_yup/validators\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: '100%',\r\n    backgroundColor: theme.palette.type === 'dark'? '#575757': null\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },fullWidth: {\r\n        width: \"100%\"\r\n    },\r\n    sizeSmall: {\r\n        width: \"25ch\"\r\n    },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function PaymentCard({ payment, updatePayment, deletePayment }) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const errorHandler = useErrorHandler();\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const formik = useNormik(true, {\r\n        initialValues: payment,\r\n        validationSchema: yup.object({method: one_of(t, ['bank-transfer', 'cash']),\r\n                                        quantity: yup.number().required(t(\"import_required\"))}),  // todo\r\n        enableReinitialize: true,\r\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\r\n            if (Object.keys(changedValues).length > 0){\r\n                setStatus();\r\n                    PaymentsDataService.patch({\r\n                      id: payment[\"id\"],    // id\r\n                      body: changedValues,\r\n                      initial_values: payment\r\n                  }).then(...errorHandler({snackbarSuccess:true}))\r\n                        .then(function (patched_body) {\r\n                                formik.resetForm(patched_body);\r\n                                updatePayment(patched_body['id'], patched_body);\r\n                            }).catch(function (err){\r\n                                setStatus(true);\r\n                    })\r\n                        .finally(() => {\r\n                                setSubmitting(false);\r\n                        });\r\n\r\n\r\n                    } else {\r\n                setSubmitting(false);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n\r\n  return (\r\n      <Box my={2}>\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Tooltip title={payment[\"method\"] === 'cash'? t('has_paid_cash'):\r\n                payment[\"method\"] === 'bank-transfer'? t('bank-transfer'):\r\n                    t('other-payment-method')\r\n            }>\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {payment[\"method\"] === 'cash'? <EuroIcon/>:\r\n                payment[\"method\"] === 'bank-transfer'? <AccountBalanceIcon/>:\r\n                    <MoreHorizIcon/>\r\n            }\r\n          </Avatar>\r\n        </Tooltip>\r\n\r\n        }\r\n        action={\r\n          <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\r\n          <IconButton onClick={(e) => {deletePayment(payment['id'])}}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        }\r\n        title={`${t(\"has_paid\")} ${payment['quantity']}€`}\r\n        subheader={payment['date']}\r\n      />\r\n      <CardActions disableSpacing>\r\n        <Tooltip title={t(\"export_receipt\")} aria-label={t(\"export_receipt\")}>\r\n          <IconButton aria-label={t(\"export_receipt\")}>\r\n            <ReceiptIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title={t(\"send_receipt\")} aria-label={t(\"send_receipt\")}>\r\n          <IconButton aria-label={t(\"send_receipt\")}>\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Box>\r\n            {payment === null\r\n                ?\r\n                (\r\n\r\n                    <Box>\r\n                        {\r\n                            [\"100%\", \"100%\", \"100%\"].map((value, idx) => {\r\n                                return (\r\n                                    <Box key={idx} py={0}>\r\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\r\n                                    </Box>);\r\n                            })\r\n                        }\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                                        <DirtyTextField\r\n                                            label={t(\"id\")}\r\n                                            name=\"id\"\r\n                                            disabled\r\n                                            className={classes.line}\r\n                                            formik={formik}\r\n                                            />\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                label={t(\"method\")}\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"method\"\r\n                                                select>\r\n                                                <MenuItem value=\"bank-transfer\">{t(\"bank_transfer\")}</MenuItem>\r\n                                                <MenuItem value=\"cash\">{t(\"cash\")}</MenuItem>\r\n                                            </DirtyTextField>\r\n                                            <DirtyTextField\r\n                                                label={t(\"import\")}\r\n                                                formik={formik}\r\n                                                type=\"number\"\r\n                                                style={{flex: 1}}\r\n                                                name=\"quantity\"\r\n                                                InputProps={{\r\n                                                    endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\r\n                                                  }}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                label={t(\"date\")}\r\n                                                formik={formik}\r\n                                                type=\"date\"\r\n                                                style={{flex: 1}}\r\n                                                name=\"date\"\r\n                                                InputLabelProps={{shrink: true}}/>\r\n                                        </Box>\r\n\r\n                             <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                label={t(\"concept\")}\r\n                                                formik={formik}\r\n                                                style={{flex: 1}}\r\n                                                multiline\r\n                                                rowsMax={8}\r\n                                                name=\"concept\"\r\n                                            />\r\n                                        </Box>\r\n\r\n\r\n                                        <DialogActions>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                className=\"outline\"\r\n                                                onClick={formik.handleReset}\r\n                                                disabled={!formik.dirty || formik.isSubmitting}\r\n                                            >\r\n                                                {t(\"reset\")}\r\n                                            </Button>\r\n                                            <Button type=\"submit\" disabled={!formik.dirty || formik.isSubmitting}>\r\n                                                {t(\"save\")}\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                    </form>\r\n                )\r\n\r\n            }\r\n        </Box>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card></Box>\r\n  );\r\n}\r\n",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":70,"column":6,"nodeType":"211","endLine":70,"endColumn":24,"suggestions":"212"},{"ruleId":"209","severity":1,"message":"213","line":81,"column":23,"nodeType":"211","endLine":81,"endColumn":42,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":3,"column":42,"nodeType":"217","messageId":"218","endLine":3,"endColumn":51},{"ruleId":"215","severity":1,"message":"219","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":23},{"ruleId":"215","severity":1,"message":"220","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":22},{"ruleId":"209","severity":1,"message":"221","line":46,"column":6,"nodeType":"211","endLine":46,"endColumn":27,"suggestions":"222"},{"ruleId":"209","severity":1,"message":"223","line":46,"column":7,"nodeType":"224","endLine":46,"endColumn":26},{"ruleId":"215","severity":1,"message":"225","line":59,"column":11,"nodeType":"217","messageId":"218","endLine":59,"endColumn":12},{"ruleId":"209","severity":1,"message":"226","line":6,"column":6,"nodeType":"211","endLine":6,"endColumn":8,"suggestions":"227"},{"ruleId":"215","severity":1,"message":"216","line":4,"column":9,"nodeType":"217","messageId":"218","endLine":4,"endColumn":18},{"ruleId":"215","severity":1,"message":"228","line":8,"column":9,"nodeType":"217","messageId":"218","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"229","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":15},{"ruleId":"215","severity":1,"message":"225","line":37,"column":11,"nodeType":"217","messageId":"218","endLine":37,"endColumn":12},{"ruleId":"215","severity":1,"message":"230","line":38,"column":9,"nodeType":"217","messageId":"218","endLine":38,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":51,"column":6,"nodeType":"211","endLine":51,"endColumn":18,"suggestions":"231"},{"ruleId":"209","severity":1,"message":"210","line":73,"column":6,"nodeType":"211","endLine":73,"endColumn":18,"suggestions":"232"},{"ruleId":"215","severity":1,"message":"233","line":2,"column":16,"nodeType":"217","messageId":"218","endLine":2,"endColumn":25},{"ruleId":"215","severity":1,"message":"234","line":2,"column":27,"nodeType":"217","messageId":"218","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"235","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"236","line":13,"column":8,"nodeType":"217","messageId":"218","endLine":13,"endColumn":17},{"ruleId":"215","severity":1,"message":"237","line":19,"column":8,"nodeType":"217","messageId":"218","endLine":19,"endColumn":18},{"ruleId":"215","severity":1,"message":"238","line":20,"column":10,"nodeType":"217","messageId":"218","endLine":20,"endColumn":13},{"ruleId":"215","severity":1,"message":"239","line":23,"column":8,"nodeType":"217","messageId":"218","endLine":23,"endColumn":20},{"ruleId":"215","severity":1,"message":"240","line":24,"column":8,"nodeType":"217","messageId":"218","endLine":24,"endColumn":17},{"ruleId":"215","severity":1,"message":"241","line":26,"column":8,"nodeType":"217","messageId":"218","endLine":26,"endColumn":20},{"ruleId":"215","severity":1,"message":"242","line":27,"column":8,"nodeType":"217","messageId":"218","endLine":27,"endColumn":13},{"ruleId":"215","severity":1,"message":"243","line":33,"column":8,"nodeType":"217","messageId":"218","endLine":33,"endColumn":26},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.","ArrayExpression",["246"],"React Hook useEffect has missing dependencies: 'errorHandler' and 'searchTerm'. Either include them or remove the dependency array.",["247"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'studentsService' is defined but never used.","'DirtyTextField' is defined but never used.","React Hook React.useEffect has missing dependencies: 'formik.values' and 'name'. Either include them or remove the dependency array. If '_setOption' needs the current value of 'formik.values', you can also switch to useReducer instead of useState and read 'formik.values' in the reducer.",["248"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'t' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["249"],"'Skeleton' is defined but never used.","'Divider' is defined but never used.","'classes' is assigned a value but never used.",["250"],["251"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'EmailIcon' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'Paper' is defined but never used.","'DirtyCountrySelect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [currentStudentId, errorHandler]",{"range":"264","text":"265"},"Update the dependencies array to be: [errorHandler, page, searchTerm, setStudents]",{"range":"266","text":"267"},"Update the dependencies array to be: [formik.values, name]",{"range":"268","text":"269"},"Update the dependencies array to be: [handler]",{"range":"270","text":"271"},"Update the dependencies array to be: [errorHandler, guardianId]",{"range":"272","text":"273"},"Update the dependencies array to be: [errorHandler, paymentIds]",{"range":"274","text":"275"},[2059,2077],"[currentStudentId, errorHandler]",[2617,2636],"[errorHandler, page, searchTerm, setStudents]",[1795,1816],"[formik.values, name]",[134,136],"[handler]",[1561,1573],"[errorHandler, guardianId]",[2303,2315],"[errorHandler, paymentIds]"]