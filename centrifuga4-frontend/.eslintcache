[{"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js":"1","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js":"2","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/not_found.js":"3","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js":"4","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js":"5","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/translate_button.component.js":"6","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/tab-context.js":"7","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/confirm-context.js":"8","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js":"9","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js":"10","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js":"11","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_translations/utils.js":"12","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.component.js":"13","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.component.js":"14","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/attendance.component.js":"15","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/god.service.js":"16","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/bulkEmail.service.js":"17","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/tab.js":"18","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js":"19","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/ExportSearchChip.component.js":"20","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js":"21","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_skeletons/iconButton.js":"22","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_students.service.js":"23","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/needs_selection.component.js":"24","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.component.js":"25","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js":"26","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.permissions.component.js":"27","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js":"28","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js":"29","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.labels.component.js":"30","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js":"31","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.teacher.details.component.js":"32","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list_secondary.component.js":"33","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/labels_selection.component.js":"34","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js":"35","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/price_term.js":"36","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js":"37","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/pre-enrolment.service.js":"38","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/email.component.js":"39","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_attendance.service.js":"40","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js":"41","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js":"42","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/PreEnrolmentPage/PreEnrolmentPage.js":"43","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.component.js":"44","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.component.js":"45","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.teacher.component.js":"46","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.teacher.schedule.component.js":"47","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/subresource_add_delete.component.js":"48","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.room.details.component.js":"49","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/calendar.service.js":"50","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/formik_save_button.js":"51","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js":"52","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/users.service.js":"53","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js":"54","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/emailTo.component.js":"55","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.component.js":"56","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.userperson.component.js":"57","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.schedule.component.js":"58","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_rooms.service.js":"59","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.details.component.js":"60","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js":"61","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js":"62","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js":"63","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js":"64","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js":"65","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js":"66","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js":"67","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js":"68","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/loading-context.js":"69","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js":"70","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js":"71","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js":"72","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js":"73","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_teachers.service.js":"74","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list.component.js":"75","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/set_operations.js":"76","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/scheduler.component.js":"77","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js":"78","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js":"79","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js":"80","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js":"81","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js":"82","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js":"83","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/theme_button.component.js":"84","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js":"85","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js":"86","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list_main.component.js":"87","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/teachers_courses.service.js":"88","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirty_checkbox.js":"89","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/userInvites.service.js":"90","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js":"91"},{"size":1086,"mtime":1610975076039,"results":"92","hashOfConfig":"93"},{"size":2495,"mtime":1611599210998,"results":"94","hashOfConfig":"93"},{"size":594,"mtime":1611445095451,"results":"95","hashOfConfig":"93"},{"size":237,"mtime":1611587298442,"results":"96","hashOfConfig":"93"},{"size":11341,"mtime":1611955315682,"results":"97","hashOfConfig":"93"},{"size":1130,"mtime":1611583472896,"results":"98","hashOfConfig":"93"},{"size":215,"mtime":1611944426350,"results":"99","hashOfConfig":"93"},{"size":258,"mtime":1611660088362,"results":"100","hashOfConfig":"93"},{"size":1282,"mtime":1611581759912,"results":"101","hashOfConfig":"93"},{"size":1530,"mtime":1614241057689,"results":"102","hashOfConfig":"93"},{"size":6383,"mtime":1610534696698,"results":"103","hashOfConfig":"93"},{"size":282,"mtime":1611663995539,"results":"104","hashOfConfig":"93"},{"size":2974,"mtime":1611955315694,"results":"105","hashOfConfig":"93"},{"size":5315,"mtime":1614241009242,"results":"106","hashOfConfig":"93"},{"size":7804,"mtime":1616529527474,"results":"107","hashOfConfig":"93"},{"size":1062,"mtime":1611532448608,"results":"108","hashOfConfig":"93"},{"size":897,"mtime":1616433429350,"results":"109","hashOfConfig":"93"},{"size":513,"mtime":1611962141156,"results":"110","hashOfConfig":"93"},{"size":11960,"mtime":1611745232983,"results":"111","hashOfConfig":"93"},{"size":1897,"mtime":1611596655721,"results":"112","hashOfConfig":"93"},{"size":1362,"mtime":1611618101543,"results":"113","hashOfConfig":"93"},{"size":368,"mtime":1610537113987,"results":"114","hashOfConfig":"93"},{"size":113,"mtime":1611509949967,"results":"115","hashOfConfig":"93"},{"size":1178,"mtime":1611490049037,"results":"116","hashOfConfig":"93"},{"size":3547,"mtime":1611962141168,"results":"117","hashOfConfig":"93"},{"size":11278,"mtime":1611963508729,"results":"118","hashOfConfig":"93"},{"size":4094,"mtime":1611962384177,"results":"119","hashOfConfig":"93"},{"size":885,"mtime":1611962055245,"results":"120","hashOfConfig":"93"},{"size":3899,"mtime":1611962055145,"results":"121","hashOfConfig":"93"},{"size":4051,"mtime":1611962354074,"results":"122","hashOfConfig":"93"},{"size":14651,"mtime":1615318400754,"results":"123","hashOfConfig":"93"},{"size":10563,"mtime":1614241009274,"results":"124","hashOfConfig":"93"},{"size":1336,"mtime":1616493120120,"results":"125","hashOfConfig":"93"},{"size":1639,"mtime":1611508076410,"results":"126","hashOfConfig":"93"},{"size":12935,"mtime":1612199783806,"results":"127","hashOfConfig":"93"},{"size":44,"mtime":1611584594719,"results":"128","hashOfConfig":"93"},{"size":3593,"mtime":1614241631150,"results":"129","hashOfConfig":"93"},{"size":1624,"mtime":1611599210986,"results":"130","hashOfConfig":"93"},{"size":8901,"mtime":1616514721216,"results":"131","hashOfConfig":"93"},{"size":1170,"mtime":1616529527478,"results":"132","hashOfConfig":"93"},{"size":362,"mtime":1608812823740,"results":"133","hashOfConfig":"93"},{"size":8248,"mtime":1614241009282,"results":"134","hashOfConfig":"93"},{"size":45410,"mtime":1614242412000,"results":"135","hashOfConfig":"93"},{"size":3469,"mtime":1611955315650,"results":"136","hashOfConfig":"93"},{"size":2895,"mtime":1611955315638,"results":"137","hashOfConfig":"93"},{"size":5593,"mtime":1611962245035,"results":"138","hashOfConfig":"93"},{"size":830,"mtime":1611964402402,"results":"139","hashOfConfig":"93"},{"size":5587,"mtime":1611962055157,"results":"140","hashOfConfig":"93"},{"size":6651,"mtime":1614241009230,"results":"141","hashOfConfig":"93"},{"size":1036,"mtime":1611829390476,"results":"142","hashOfConfig":"93"},{"size":1206,"mtime":1611591330685,"results":"143","hashOfConfig":"93"},{"size":103,"mtime":1610534696698,"results":"144","hashOfConfig":"93"},{"size":99,"mtime":1610534696698,"results":"145","hashOfConfig":"93"},{"size":102,"mtime":1610534696698,"results":"146","hashOfConfig":"93"},{"size":2809,"mtime":1616495715830,"results":"147","hashOfConfig":"93"},{"size":8740,"mtime":1612206051784,"results":"148","hashOfConfig":"93"},{"size":6900,"mtime":1614241009234,"results":"149","hashOfConfig":"93"},{"size":2153,"mtime":1611965154529,"results":"150","hashOfConfig":"93"},{"size":110,"mtime":1612205910434,"results":"151","hashOfConfig":"93"},{"size":15018,"mtime":1611962289410,"results":"152","hashOfConfig":"93"},{"size":893,"mtime":1611227296865,"results":"153","hashOfConfig":"93"},{"size":890,"mtime":1610534696698,"results":"154","hashOfConfig":"93"},{"size":13594,"mtime":1614624461386,"results":"155","hashOfConfig":"93"},{"size":1191,"mtime":1610013084917,"results":"156","hashOfConfig":"93"},{"size":9609,"mtime":1614241009290,"results":"157","hashOfConfig":"93"},{"size":300,"mtime":1611590133151,"results":"158","hashOfConfig":"93"},{"size":829,"mtime":1611444412114,"results":"159","hashOfConfig":"93"},{"size":136,"mtime":1610534696698,"results":"160","hashOfConfig":"93"},{"size":248,"mtime":1611596655765,"results":"161","hashOfConfig":"93"},{"size":5452,"mtime":1611531872788,"results":"162","hashOfConfig":"93"},{"size":174,"mtime":1610534696698,"results":"163","hashOfConfig":"93"},{"size":5743,"mtime":1611955315698,"results":"164","hashOfConfig":"93"},{"size":91,"mtime":1610534696698,"results":"165","hashOfConfig":"93"},{"size":113,"mtime":1611509838768,"results":"166","hashOfConfig":"93"},{"size":11186,"mtime":1615320885886,"results":"167","hashOfConfig":"93"},{"size":283,"mtime":1611507801886,"results":"168","hashOfConfig":"93"},{"size":9417,"mtime":1611965154541,"results":"169","hashOfConfig":"93"},{"size":101,"mtime":1610534696698,"results":"170","hashOfConfig":"93"},{"size":442,"mtime":1610187820379,"results":"171","hashOfConfig":"93"},{"size":113,"mtime":1610534696698,"results":"172","hashOfConfig":"93"},{"size":103,"mtime":1610534696698,"results":"173","hashOfConfig":"93"},{"size":13289,"mtime":1614241009262,"results":"174","hashOfConfig":"93"},{"size":226,"mtime":1611442219444,"results":"175","hashOfConfig":"93"},{"size":896,"mtime":1611583472912,"results":"176","hashOfConfig":"93"},{"size":292,"mtime":1611257166053,"results":"177","hashOfConfig":"93"},{"size":1334,"mtime":1611600504662,"results":"178","hashOfConfig":"93"},{"size":773,"mtime":1615320885898,"results":"179","hashOfConfig":"93"},{"size":113,"mtime":1611501849922,"results":"180","hashOfConfig":"93"},{"size":1606,"mtime":1611584467377,"results":"181","hashOfConfig":"93"},{"size":681,"mtime":1610485187600,"results":"182","hashOfConfig":"93"},{"size":115,"mtime":1610534696698,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d3a0qb",{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"189"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"198"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"198"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"198"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"198"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"198"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"189"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"198"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"189"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"232"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"232"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"198"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"198"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"189"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"198"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"189"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"189"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"189"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"189"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js",["392"],"import React, {useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport {darkTheme, lightTheme} from '../theme';\nimport {SnackbarProvider} from 'notistack';\n\nimport PrivateRoute from '../_components/PrivateRoute';\nimport HomePage from '../HomePage/HomePage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport {BrowserRouter, Route, Router, Switch} from 'react-router-dom';\nimport {userContext} from '../_context/user-context';\nimport {themeContext} from '../_context/theme-context';\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport ResetPage from \"../ResetPage/ResetPage\";\nimport PreEnrolmentPage from \"../PreEnrolmentPage/PreEnrolmentPage\";\nimport NotFound from \"../_components/not_found\";\n\nfunction App() {\n    const [theme, setTheme] = useState(localStorage.getItem(\"darkTheme\") === \"true\");\n    const appliedTheme = createMuiTheme(theme ? darkTheme : lightTheme);\n\n\n    const [user, setUser] = useState({logged: false, ping: true});\n    const [needs, _setNeeds] = useState([]);\n    const setNeeds = (needs) => {\n        if (!Array.isArray(needs)) return _setNeeds([]);\n        return _setNeeds(needs);\n    }\n\n    return (\n      <ThemeProvider theme={appliedTheme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={3}>\n            <userContext.Provider value={{user: user, setUser: setUser, needs: needs, setNeeds: setNeeds}}>\n                <themeContext.Provider value={{theme: theme, switchTheme: () => {\n                    localStorage.setItem(\"darkTheme\", (!theme).toString());\n                    setTheme(!theme);\n                }, label: theme? \"dark\": \"light\"}}>\n                    <BrowserRouter basename=\"/app\">\n                        <Switch>\n                        <PrivateRoute path={'/home'}  component={HomePage}/>\n                        <Route path={'/login'} component={LoginPage}/>\n                        <Route path={'/signup'} component={SignupPage}/>\n                        <Route path={'/password-reset'} component={ResetPage}/>\n                        <Route path={'/prematricula'} component={PreEnrolmentPage}/>\n                        <Route component={NotFound}/>\n                        </Switch>\n                    </BrowserRouter>\n                </themeContext.Provider>\n            </userContext.Provider>\n        </SnackbarProvider>\n      </ThemeProvider>\n    );\n}\n\nexport default App\n",["393","394"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/not_found.js",["395","396","397","398","399","400","401"],"import Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {useTranslation} from \"react-i18next\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function NotFound({}){\n    const themeCtx = React.useContext(themeContext);\n    const {t} = useTranslation();\n\n    return  <Typography variant=\"h1\">Nope, not found... 👻</Typography>;\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js",["402","403","404","405"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport createStyles from \"@material-ui/styles/createStyles\";\nimport React, {useEffect} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Routes from \"./routes\";\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport HomeToolbar from \"../_components/toolbar.home.component\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport {\n    Backdrop,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    useMediaQuery\n} from \"@material-ui/core\";\nimport {loadingContext} from '../_context/loading-context';\nimport {confirmContext} from '../_context/confirm-context';\nimport {tabContext} from '../_context/tab-context';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => (createStyles({\n    root: {\n        display: 'flex',\n        height: '100vh'\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        background: theme.palette.neutral.main,\n        color: theme.palette.neutral.emphasisText.medium,\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        display: 'flex',\n        flexFlow: 'column',\n        height: \"100%\",\n        width: \"100%\",\n        overflow: 'auto'\n    },\n    main: {\n        flex: 1,\n        padding: theme.spacing(3),\n        overflow: 'auto'\n    },\n    icon: {\n      '&': {\n          color: theme.palette.neutral.emphasisText.medium,\n      }\n    },\n    selectedIcon: {\n      '&': {\n          color: theme.palette.primary.main,\n      }\n    },\n    grow: {\n        flexGrow: 1,\n    },\n})));\n\nconst HomePage = (props) => {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    const { t } = useTranslation();\n\n    const [open, setOpen] = React.useState(false);\n    const [currentRoute, setCurrentRoute] = React.useState('/students');\n    const [hasNeeds, NEEDS] = useNeeds();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const onItemClick = p => {\n        setCurrentRoute(p.path);\n    };\n\n    const [loading, setLoading] = React.useState(false);\n      const handleClose = () => {\n        setLoading(false);\n      };\n\n      const [confirmDialog, setConfirmDialog] = React.useState({\n          open: false,\n          title: null,\n          subtitle: null,\n          success: () => {},\n          cancel: () => {},\n          args: []\n      });\n      const confirm = (title, subtitle, successCallable, cancelCallable=null, args=[]) => {\n          setConfirmDialog(\n              {\n                open: true,\n                title: title,\n                subtitle: subtitle,\n                success: successCallable,\n                cancel: cancelCallable === null? () => {}: cancelCallable,\n                  args: args\n              }\n          );\n      }\n      const handleCloseConfirm = () => {\n          setConfirmDialog({...confirmDialog, open: false});\n      }\n\n      const routerRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n                <loadingContext.Provider value={{loading: loading, startLoading: () => {setLoading(true)}, stopLoading: () =>{setLoading(false)}}}>\n                    <confirmContext.Provider value={{confirm: confirm}}>\n\n                            <AppBar\n                                position=\"fixed\"\n                                className={clsx(classes.appBar, {\n                                    [classes.appBarShift]: open,\n                                })}>\n                                <HomeToolbar\n                                    changeTheme={props.changeTheme}\n                                    handleDrawerOpen={handleDrawerOpen}\n                                    handleDrawerClose={handleDrawerClose}\n                                    open={open}\n                                />\n                            </AppBar>\n                            <BrowserRouter ref={routerRef} basename=\"/app/home\">\n                                <tabContext.Provider value={{currentTab: currentRoute, goTo: (res, id=null) => {\n                                setCurrentRoute(res);\n                                if (id === null) {\n                                    routerRef.current.history.push(res);\n                                } else {\n                                    routerRef.current.history.push(`${res}?id=${id}`);\n                                }\n                            }}}>\n                                <Drawer\n                                    variant=\"permanent\"\n                                    className={clsx(classes.drawer, {\n                                        [classes.drawerOpen]: open,\n                                        [classes.drawerClose]: !open,\n                                    })}\n                                    classes={{\n                                        paper: clsx({\n                                            [classes.drawerOpen]: open,\n                                            [classes.drawerClose]: !open,\n                                        }),\n                                    }}\n                                >\n                                    <div className={classes.toolbar}>\n                                        <IconButton onClick={handleDrawerClose}>\n                                            {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                                        </IconButton>\n                                    </div>\n                                    <Divider/>\n                                    <List>\n                                        {Routes\n                                            .filter(route => hasNeeds(route.needs))\n                                            .map((prop) =>(\n                                                  <ListItem key={prop.title} to={prop.path } button component={Link} onClick={() => onItemClick(prop)}>\n                                                    <ListItemIcon className={prop.path === currentRoute? classes.selectedIcon: classes.icon}>\n                                                        <Tooltip title={t(prop.title)} aria-label={t(prop.title)}>\n                                                            {<prop.icon/>}\n                                                        </Tooltip>\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={t(prop.title)}/>\n                                                </ListItem>\n                                                ))}\n                                    </List>\n                                </Drawer>\n\n\n                                <div className={classes.content}>\n                                    <div className={classes.toolbar}/>\n                                    <main className={classes.main}>\n                                        {Routes\n                                            .filter(route => hasNeeds(route.needs))\n                                            .map((prop) => {\n                                            return (\n                                                <Route key={prop.title} path={prop.path} component={prop.component}/>)\n                                        })}\n                                    </main>\n                                </div>\n                                     </tabContext.Provider>\n                            </BrowserRouter>\n\n                    <Backdrop className={classes.backdrop} open={loading} onClick={handleClose}>\n                    <CircularProgress color=\"inherit\" />\n                  </Backdrop>\n\n                        <Dialog\n        open={confirmDialog.open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        {confirmDialog.title &&\n        <DialogTitle id=\"responsive-dialog-title\">\n            {t(confirmDialog.title)}\n        </DialogTitle>\n        }\n        {confirmDialog.subtitle && <DialogContent>\n            <DialogContentText>\n                {t(confirmDialog.subtitle)}\n            </DialogContentText>\n        </DialogContent>}\n        <DialogActions>\n          <Button autoFocus onClick={() => {\n              confirmDialog.cancel(...confirmDialog.args);\n              handleCloseConfirm();\n          }} color=\"primary\">\n              {t(\"cancel\")}\n          </Button>\n          <Button onClick={() => {\n              confirmDialog.success(...confirmDialog.args);\n              handleCloseConfirm();\n          }} color=\"primary\" autoFocus>\n              {t(\"continue\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n                    </confirmContext.Provider>\n            </loadingContext.Provider>\n        </div>\n    );\n}\n\nexport default HomePage;",["406","407"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/translate_button.component.js",["408","409","410"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/tab-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/confirm-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_translations/utils.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.component.js",["411"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {useTranslation} from \"react-i18next\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {Tooltip} from \"@material-ui/core\";\nimport TeachersDataService from \"../_services/teachers.service\";\nimport ItemsList from \"./items_list.component\";\nimport Teacher from \"./teachers.teacher.component\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport ItemsListMain from \"./items_list_main.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  left: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n      position: 'relative',\n\n  },fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  }\n}));\n\n\nexport default function Teachers({...other}) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [teachers, setTeachers] = useState([]);\n  const [newTeacher, setNewTeacher] = useState(false);\n  const [currentTeacherId, setCurrentTeacherId] = useState(null);\nconst [hasNeeds, NEEDS] = useNeeds();\n  const query = new URLSearchParams(window.location.search);\n  const id = query.get('id');\n  useEffect(() => {\n      if (id !== null && id !== undefined) setCurrentTeacherId(id);\n  }, [id])\n\n  useEffect(() => {\n      if (currentTeacherId !== null) setNewTeacher(false);\n  }, [currentTeacherId])\n\n  return (\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={4} className={classes.left}>\n          <h1>{t(\"teachers\")}</h1>\n            <ItemsListMain\n                setCurrentItemId={setCurrentTeacherId}\n                currentItemId={currentTeacherId}\n                items={teachers}\n                setItems={setTeachers}\n                defaultSearchBy=\"full_name\"\n                searchByOptions={[\"full_name\", \"id\"]}\n                dataService={TeachersDataService}\n                searchBarLabel=\"teachers\"\n            />\n\n            {hasNeeds([NEEDS.post]) && <Tooltip title={t(\"new_teacher\")}>\n                <Fab className={classes.fab} color=\"primary\" onClick={(e) => {\n                    setCurrentTeacherId(null);\n                    setNewTeacher(true);\n                }}>\n                    <AddIcon/>\n                </Fab>\n            </Tooltip>}\n        </Grid>\n\n        <Grid item xs={8} className={classes.left}>\n          <Teacher\n            currentTeacherId={currentTeacherId}\n            newTeacher={newTeacher}\n            setNewTeacher={setNewTeacher}\n            addTeacherId={(id) =>{\n                setCurrentTeacherId(id);\n            }}\n            deleteTeacher={(studentId) => {\n                if (studentId === currentTeacherId) setCurrentTeacherId(null);\n\n                setTeachers(teachers.filter((s) => s['id'] !== studentId));\n            }}\n          />\n        </Grid>\n      </Grid>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.component.js",["412"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {useTranslation} from \"react-i18next\";\nimport Fab from \"@material-ui/core/Fab\";\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Tooltip\n} from \"@material-ui/core\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport * as yup from \"yup\";\nimport {useFormik} from \"formik\";\nimport {invitationsService} from \"../_services/userInvites.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport User from \"./users.user.component\";\nimport ItemsList from \"./items_list.component\";\nimport UsersDataService from \"../_services/users.service\";\nimport NeedsSelection from \"./needs_selection.component\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport {safe_email_required} from \"../_yup/validators\";\nimport ItemsListMain from \"./items_list_main.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n    root2: {\n    display: 'flex',\n  },\n  formControl: {\n      padding: theme.spacing(2),\n        maxHeight: '50vh',\n      overflow: 'auto',\n      minWidth: '40vw'\n  },\n    dialog: {\n\n    },\n  left: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n      position: 'relative',\n\n  },fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  }\n}));\n\nexport default function Users({...other}) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [users, setUsers] = useState([]);\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const [open, setOpen] = React.useState(false);\n    const [hasNeeds, NEEDS] = useNeeds();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const query = new URLSearchParams(window.location.search);\n  const id = query.get('id');\n  useEffect(() => {\n      if (id !== null && id !== undefined) setCurrentUserId(id);\n  }, [id]);\n  const errorHandler = useErrorHandler();\n\n  const formik = useFormik({\n        initialValues: {email: '', needs: []},\n        validationSchema: yup.object({\n            email: safe_email_required(t)}),\n        enableReinitialize: true,\n        onSubmit: (values, {setStatus, setSubmitting}) => {\n            setSubmitting(true);\n            invitationsService\n                .inviteUser(values['email'], values['needs'])\n                .then(...errorHandler({snackbarSuccess: true}))\n                .then(res => {\n                    handleClose();\n                }).catch(_ => {\n                    setStatus(true);\n                }).finally(() => {\n                    setSubmitting(false);\n            })\n        }\n    });\n\n\n  return (\n      <Grid container spacing={3} className={classes.root}>\n          <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n            {t(\"invite_user\")}\n        </DialogTitle> <form onSubmit={formik.handleSubmit}>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"email\"\n            name=\"email\"\n            label={t(\"email\")}\n            type=\"email\"\n            fullWidth\n            value={formik.values['email']}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.status  || formik.errors['email'] !== undefined}\n            helperText={formik.touched['email'] && formik.errors['email']}\n          />\n          <Box my={2} className={classes.dialog}>\n\n                  <NeedsSelection\n                      noDirty={true}\n                    formik={formik}\n                  />\n\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              {t(\"cancel\")}\n          </Button>\n          <Button type=\"submit\" color=\"primary\" disabled={formik.isSubmitting}>\n              {t(\"invite\")}\n          </Button>\n        </DialogActions></form>\n      </Dialog>\n        <Grid item xs={4} className={classes.left}>\n          <h1>{t(\"users\")}</h1>\n          <ItemsListMain\n                setCurrentItemId={setCurrentUserId}\n                currentItemId={currentUserId}\n                items={users}\n                setItems={setUsers}\n                defaultSearchBy=\"full_name\"\n                searchByOptions={[\"full_name\", \"id\"]}\n                dataService={UsersDataService}\n                searchBarLabel=\"users\"\n            />\n            {hasNeeds([NEEDS.invite_users]) && <Tooltip title={t(\"new_user\")}>\n                <Fab className={classes.fab} color=\"primary\" onClick={handleClickOpen}>\n                    <PersonAddIcon/>\n                </Fab>\n            </Tooltip>}\n        </Grid>\n\n        <Grid item xs={8} className={classes.left}>\n          <User\n            currentUserId={currentUserId}\n            deleteUser={(userId) => {\n                if (userId === currentUserId) setCurrentUserId(null);\n\n                setUsers(users.filter((s) => s['id'] !== userId));\n            }}\n          />\n        </Grid>\n      </Grid>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/attendance.component.js",["413","414","415","416","417","418"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/god.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/bulkEmail.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/tab.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/ExportSearchChip.component.js",["419","420","421"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useTranslation} from \"react-i18next\";\nimport {Chip, CircularProgress} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {loadingContext} from \"../_context/loading-context\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n}));\n\nexport default function ExportSearchChip({searchTermField=\"full_name\", searchTerm=null, page=null, dataService, exportAll=false, getFilters=null}) {\n  const classes = useStyles();\n\n  const {t} = useTranslation();\n  const errorHandler = useErrorHandler();\n  const loadingCtx = React.useContext(loadingContext);\n\n  return (\n      <Tooltip title={t(exportAll ? \"export_all_csv\" : \"export_results_csv\")}\n               aria-label={t(exportAll ? \"export_all_csv\" : \"export_results_csv\")}>\n\n        <Chip variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              disabled={loadingCtx.loading}\n              avatar={<Avatar>csv</Avatar>}\n              label={t(exportAll ? \"export_all\" : \"export\")}\n              onClick={() => {\n                if (loadingCtx.loading) return;\n\n                loadingCtx.startLoading();\n                dataService\n                    .downloadCsv(searchTermField, searchTerm,\n                        exportAll ? \"*\" : page,\n                        getFilters === null ? {} : getFilters(),\n                        exportAll)\n                    .then(...errorHandler({}))\n                    .finally(() => {\n                      loadingCtx.stopLoading();\n                    })\n              }}/>\n      </Tooltip>\n\n  );\n}",["422","423"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_skeletons/iconButton.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_students.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/needs_selection.component.js",["424","425"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useTranslation} from \"react-i18next\";\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport {allNeeds} from \"../_data/needs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DirtyCheckbox from \"./dirty_checkbox\";\n\nexport default function NeedsSelection({formik, name=\"needs\", noDirty=false}) {\n  const { t } = useTranslation();\n\n  return <React.Fragment>\n      <Typography>{t(\"permissions\")}</Typography>\n                  {allNeeds.map(need => (\n                    <FormControlLabel\n                        control={\n                            <DirtyCheckbox\n                            checked={formik.values[name]===undefined? false: formik.values[name].includes(need.name)}\n                            name={name}\n                            value={need.name}\n                            formik={formik}\n                            noDirty={noDirty}\n                            />\n                        }\n                        key={need.name}\n                        label={t(need.description)}\n                      />))}\n        </React.Fragment>\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.component.js",["426","427"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport UsersDataService from \"../_services/users.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport UserPerson from \"./users.user.userperson.component\";\nimport UserPermissions from \"./users.user.permissions.component\";\nimport * as PropTypes from \"prop-types\";\nimport TabFrame, {a11yProps} from \"./tab\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    display: 'flex',\n      flexDirection: 'column'\n  },\n    content: {\n      overflowX: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        flex: 1,\n        height: '100%'\n    },\n    tab: {\n      height: '100%'\n    }\n}));\n\n\n\nexport default function User({currentUserId, deleteUser}) {\n  const loading = currentUserId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (loading) return setUser(null);\n    UsersDataService\n            .getOne(currentUserId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setUser(res[\"data\"]);\n                });\n  }, [currentUserId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentUserId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                >\n                  <Tab label={t(\"user\")} {...a11yProps(0)} />\n                  <Tab label={t(\"permissions\")} {...a11yProps(1)} />\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            containerStyle={{height: '100%'}}\n            className={classes.content}\n            onChangeIndex={handleChangeIndex}\n          >\n            <TabFrame value={value} index={0}>\n            <UserPerson\n                      dir={theme.direction}\n                      currentStudent={user}\n                      updateCurrentStudent={setUser}\n                      deleteStudent={deleteUser}\n            /></TabFrame>\n<TabFrame value={value} index={1}>\n            <UserPermissions\n                      dir={theme.direction}\n                      currentStudent={user}\n                      updateCurrentStudent={setUser}\n                      deleteStudent={deleteUser}\n            /></TabFrame>\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js",["428","429"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\nimport Guardian from \"./students.student.guardian.component\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Payments from \"./students.student.payments.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport Schedule from \"./students.student.schedule.component\";\nimport StudentsCourseDataService from \"../_services/student_courses.service\";\nimport CoursesDataService from \"../_services/courses.service\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport AddDeleteSubresource from \"./subresource_add_delete.component\";\nimport TabFrame, {a11yProps} from \"./tab\";\nimport SchedulesDataService from \"../_services/schedules.service\";\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    display: 'flex',\n      flexDirection: 'column'\n  },\n    content: {\n      overflowX: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        flex: 1,\n        height: '100%'\n    },\n    tab: {\n      height: '100%'\n    }\n}));\n\n\n\n\nexport default function Student({setNewStudent,newStudent,addStudentId, currentStudentId, deleteStudent, ...props}) {\n\n  const loading = currentStudentId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [student, setStudent] = useState(null);  // todo rename to student\n  const [newGuardian, setNewGuardian] = useState(false);\n    const [hasNeeds, NEEDS] = useNeeds();\n\n\n  useEffect(() => {\n    if (loading) return setStudent(null);\n    StudentsDataService\n            .getOne(currentStudentId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setStudent(res[\"data\"]);\n                });\n  }, [currentStudentId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentStudentId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n\n\n  const guardians = student === null? []: student.guardians;\n    // todo maybe tabs with or only with icons\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                >\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\n\n                    { !newStudent && hasNeeds([NEEDS.schedules]) &&\n                  <Tab label={t(\"schedules\")} {...a11yProps(1)} />}\n                 { !newStudent  && hasNeeds([NEEDS.payments]) &&  <Tab label={t(\"payments\")} {...a11yProps(2)} />}\n                 { !newStudent  && hasNeeds([NEEDS.courses]) &&  <Tab label={t(\"courses\")} {...a11yProps(3)} />}\n\n                  {\n                  (!newStudent && guardians  && hasNeeds([NEEDS.guardians]) ) && guardians.map((contact, index) => (\n                  <Tab key={t(\"contact\") + \" \" + (index+1)} label={t(\"contact\") + \" \" + (index+1)} {...a11yProps(index+4)} />\n                      ))}\n\n\n                  {\n                    (!newStudent && newGuardian) &&\n                        <Tab key={t(\"new_guardian\")} label={t(\"new_guardian\")} {...a11yProps(4+guardians.length)} />\n                  }\n\n\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            containerStyle={{height: '100%'}}\n            className={classes.content}\n            onChangeIndex={handleChangeIndex}\n          >\n            <TabFrame value={value} index={0}>\n                <Attendee\n                      setNewStudent={setNewStudent}\n                      dir={theme.direction}\n                      newStudent={newStudent}\n                      title={t(\"attendee\")}\n                      currentStudent={student}\n                      addStudentId={addStudentId}\n                      patchService={StudentsDataService}\n                      updateCurrentStudent={setStudent}\n                      deleteStudent={deleteStudent}\n                      addNewGuardian={() => {\n                        setNewGuardian(true);\n                        setValue(4+guardians.length);\n                      }}/>\n            </TabFrame>\n\n              {hasNeeds([NEEDS.schedules]) && <TabFrame value={value} index={1}>\n              <Scheduler\n                    allowDelete={(s) => !s.is_base}\n                    allowView={true}\n                    viewUrl={(s) => ['/courses', s.course_id]}\n                    setScheduleIds={(ids) => setStudent({...student, schedules: ids})}\n                    onEventChange={(info, day_week, start_time, end_time, schedule) => {\n                       const newEvent = info.event;\n                       let body = {};\n                        body['day_week'] = day_week;\n                        body['start_time'] = start_time;\n                        body['end_time'] = end_time;\n\n                        if (schedule[\"is_base\"]) {\n                            body['course_id'] = schedule[\"course_id\"];\n                            body['student_id'] = currentStudentId;\n                            SchedulesDataService\n                                    .post(body)\n                                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                                    .then(function (res) {\n                                        let calendarApi = info.view.calendar;\n                                        newEvent['is_base'] = false;  // todo needed?\n                                        calendarApi.addEvent(eventFromSchedule(theme, res));\n                                        info.revert();\n                                        setStudent({...student, schedules: [...student.schedules, res.id]})\n                                    }).catch(function(err){\n                                        info.revert();\n                            });\n\n                        } else {\n                            SchedulesDataService\n                                    .patch({id: schedule['id'],\n                                                                body: body,\n                                                                initial_values: schedule})\n                                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                                    .then(function (res) {\n                                    }).catch(function (err){\n                                        info.revert();\n                                    });\n                        }\n                    }}\n                    scheduleIds={student === null ? null : student['schedules']}\n                    editable={true}\n                    selectable={false}\n                />\n\n              </TabFrame>}\n              {hasNeeds([NEEDS.payments]) && <TabFrame value={value} index={2}>\n                  <Payments\n                         paymentIds={student === null ? null : student.payments}\n                         addPaymentId={(payment_id) => {\n                             setStudent({...student, payments: [...student.payments, payment_id]})\n                         }}\n                         student_id={currentStudentId}\n                         deletePaymentFromStudent={(payment_id) => {\n                             setStudent({\n                                 ...student,\n                                 payments: student.payments.filter((p) => p !== payment_id)\n                             });\n                         }}\n              /></TabFrame>}\n\n              {hasNeeds([NEEDS.courses]) &&\n\n             <TabFrame value={value} index={3}> <AddDeleteSubresource\n                  defaultSearchBy=\"name\"\n                  parentItemDataService={StudentsCourseDataService}\n                  itemDataService={CoursesDataService}\n                  add_message_confirm=\"confirm_enroll_to_course\"\n                  parent_id={currentStudentId}\n                  secondaryDisplayNameField=\"description\"\n                  searchByOptions={[\"name\"]}\n                  resourceName={\"courses\"}\n                  displayNameField={\"name\"}\n                  add_message=\"enroll_to_course\"\n                  onSubresourceAdded={(id) => {\n                    setStudent({...student, courses: [...student[\"courses\"], id]})\n                  }}\n                  onSubresourceDeleted={(id) => {\n                    setStudent({...student, courses: student[\"courses\"].filter(x => x !== id)});\n                  }}\n             /></TabFrame>\n              }\n\n            {\n              guardians && hasNeeds([NEEDS.guardians]) && guardians.map((guardian, index) => (\n                  <TabFrame value={value} index={index+4}>\n                      <Guardian\n                            key={guardian}\n                            dir={theme.direction}\n                            guardianId={guardian}\n                            deleteGuardianId={(id) => {\n                              setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                              setValue(0);\n                            }}\n                  /></TabFrame>\n                  ))}\n\n                  <TabFrame value={value} index={4+guardians.length}>\n                      <Guardian\n                        dir={theme.direction}\n                        newGuardian={true}\n                        deleteNewGuardian={() => {\n                            setNewGuardian(false);\n                            setValue(0);\n                        }}\n                            studentId={currentStudentId}\n                        addGuardianId={(id) => {\n                            setNewGuardian(false);\n                            setStudent({...student, guardians: [...student.guardians, id]});\n                            setValue(4+guardians.length);\n                        }\n                        }\n                        deleteGuardianId={(id) => {\n                            setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                            setValue(0);\n                        }}\n                  /></TabFrame>\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.permissions.component.js",["430"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js",["431","432","433","434","435","436","437","438","439"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js",["440","441"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {MenuItem} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport StudentGuardianDataService from \"../_services/student_guardians.service\"\nimport {student_guardian_relations} from \"../_data/relations\"\nimport Person from \"./students.student.person.component\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport * as yup from \"yup\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {emptyGuardian} from \"../_data/empty_objects\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport {confirmContext} from \"../_context/confirm-context\";\n\nfunction Guardian({  studentId, title, guardianId, deleteGuardianId, addGuardianId, deleteNewGuardian, newGuardian=false, ...other }) {\n  const { t } = useTranslation();\n  const errorHandler = useErrorHandler();\n\n  const [guardian, setGuardian] = useState(null);\n\n   const [hasNeeds, NEEDS] = useNeeds();\n  useEffect(() => {\n    if (newGuardian) return;\n\n    GuardiansDataService\n            .getOne(guardianId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setGuardian(res[\"data\"]);\n\n                });\n  }, [guardianId]);\nconst confirm = React.useContext(confirmContext);\n  return (\n    <React.Fragment>\n\n\n        <Box p={3}>\n            <Box px={2}>\n\n\n              {hasNeeds([NEEDS.delete]) && <IconButton style={{float: 'right'}} onClick={(e) => {\n                if (!newGuardian) {\n                  confirm.confirm(\"delete_guardian_question\", \"not_undone\", () => {\n                    GuardiansDataService\n                      .delete(guardianId)\n                      .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n                      .then(function (res) {\n                        deleteGuardianId(guardianId);\n                      });\n                  })\n                  return;\n                }\n                deleteNewGuardian();\n              }}>\n                <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\n                  <DeleteIcon/>\n                </Tooltip>\n              </IconButton>}\n\n\n              <Person currentPerson={newGuardian? emptyGuardian: guardian}\n                      studentId={studentId}\n                      newPerson={newGuardian}\n                      updateCurrentStudent={(x) => {\n                        if (!newGuardian) return setGuardian(x);\n                        StudentGuardianDataService.postWithId(studentId, x)\n                          .then(...errorHandler({snackbarSuccess: true}))\n                          .then(() => {\n                          addGuardianId(x);\n                        });\n                      }}\n                      patchService={GuardiansDataService}\n                      additionalValidation={{\n                        relation: yup.string().required(t(\"relation_required\"))}}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"relation\")}\n                                style={{flex: 1}}\n                                name=\"relation\"\n                                select\n                            >\n                          {student_guardian_relations.map((r) => (\n                                   <MenuItem key={r} value={r}>{t(r)}</MenuItem>\n                                ))}\n                                ))}\n\n                        </DirtyTextField>]]}\n              />\n\n            </Box>\n        </Box>\n\n    </React.Fragment>\n  );\n}\n\nexport default Guardian;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.labels.component.js",["442"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js",["443","444"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport {MenuItem} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport * as yup from 'yup';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\"\nimport Person from \"./students.student.person.component\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport {sendEnrollmentEmail} from \"../_services/emailsEnrollment.service\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {sendGrantEmail} from \"../_services/emailsGrants.service\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {payment_methods} from \"../_data/payment_methods\";\nimport {emptyAttendee} from \"../_data/empty_objects\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport {loadingContext} from \"../_context/loading-context\";\nimport {confirmContext} from \"../_context/confirm-context\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: {\n    float: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction Attendee({ children, setNewStudent, addStudentId, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\n  const { t } = useTranslation();\n  const loading = currentStudent === null;\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const [hasNeeds, NEEDS] = useNeeds();\n  const confirm = React.useContext(confirmContext);\n\n  const deleteFullStudent = () => {\n    StudentsDataService\n              .delete(currentStudent['id'])\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                PaymentsDataService\n                      .deleteMany(currentStudent['payments'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n                GuardiansDataService\n                      .deleteMany(currentStudent['guardians'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n\n                // todo schedules, courses\n\n\n                deleteStudent(currentStudent['id']);\n              });\n  }\n  const loadingCtx = React.useContext(loadingContext);\n  const sendGrantLetter = () => {\n      loadingCtx.startLoading();\n      sendGrantEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}))\n          .finally(() => {\n              loadingCtx.stopLoading();\n          });\n  }\n  const sendEnrollmentAgreement = () => {\n      loadingCtx.startLoading();\n      sendEnrollmentEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}))\n          .finally(() => {\n              loadingCtx.stopLoading();\n          });\n  }\n\n\n\n  return (\n    <React.Fragment>\n\n        <Box p={3}>\n            <Box px={2}>\n              {loading?\n                  !newStudent && <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n              !newStudent && hasNeeds([NEEDS.guardians, NEEDS.post]) && <Tooltip style={{float: 'right'}} title={t(\"new_guardian\")} aria-label={t(\"new_guardian\")}>\n                <IconButton onClick={(e) => {\n                  addNewGuardian();\n                }}>\n                  <PersonAddIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n\n              {loading && !newStudent ?\n                   <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n                hasNeeds([NEEDS.delete]) && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\n                <IconButton onClick={(e) => {\n                    if (newStudent) {\n                        setNewStudent(false);\n                    } else {\n                        confirm.confirm(\"delete_student_question\",\n      \"student_also_deletes\",\n      () => {\n                            deleteFullStudent(currentStudent['id'])\n      });\n                    }\n\n                }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <Person\n                      currentPerson={newStudent? emptyAttendee: currentStudent}\n                      newPerson={newStudent}\n                      updateCurrentStudent={(x) => {\n                        if (!newStudent) return updateCurrentStudent(x);\n                        addStudentId(x);\n                      }}\n                      patchService={patchService}\n                      onUpdate={(changedBody) => {\n                        if (\"enrolment_status\" in changedBody && changedBody[\"enrolment_status\"] === \"enrolled\"){\n                          confirm.confirm(\"send_grant_letter_question\",\n                          \"this_will_be_sent\",\n                          () => {\n                                sendGrantLetter();\n                          });\n                        }\n                      }}\n                      additionalValidation={{\n                        enrolment_status: yup.string().required(t(\"status_required\")),\n                        image_agreement: yup.boolean().required(t(\"image_required\")),\n                        birth_date: yup.date().required(t(\"birthdate_required\"))\n                      }}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"price_term\")}\n                                style={{flex: 1}}\n                                name=\"price_term\"\n                                type=\"number\"\n                                InputProps={{endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,}}\n                            />,\n                            <DirtyTextField\n                                label={t(\"default_payment_method\")}\n                                style={{flex: 1}}\n                                name=\"default_payment_method\"\n                                select>\n                                { payment_methods.map(\n                                                    (method) => (\n                                                        <MenuItem key={method} value={method}>{t(method)}</MenuItem>\n                                                    )\n                                                )\n                                                }\n                            </DirtyTextField>],\n                            <DirtyTextField\n                                label={t(\"payment_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"payment_comments\"\n                            />,\n                            [<DirtyTextField\n                                label={t(\"birthdate\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                name=\"birth_date\"\n                                InputLabelProps={{shrink: true}}/>,\n                            <DirtyTextField\n                              label={t(\"years_in_xamfra\")}\n                              type=\"number\"\n                              style={{flex: 1}}\n                              name=\"years_in_xamfra\"/>],\n                          [\n                              <DirtyTextField\n                                label={t(\"status\")}\n                                style={{flex: 1}}\n                                name=\"enrolment_status\"\n                                select>\n                                {['enrolled', 'early-unenrolled', 'pre-enrolled'].map((s) => (\n                                    <MenuItem key={s} value={s}>{t(s)}</MenuItem>\n                                ))}\n                            </DirtyTextField>,\n                              <DirtyTextField\n                                label={t(\"image_agreement\")}\n                                style={{flex: 1}}\n                                name=\"image_agreement\"\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                          ], [<DirtyTextField\n                                label={t(\"pre_enrolment_date\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                name=\"pre_enrolment_date\"\n                                InputLabelProps={{shrink: true}}/>,\n                                <DirtyTextField\n                                label={t(\"enrolment_date\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                name=\"enrolment_date\"\n                                InputLabelProps={{shrink: true}}/>,\n                                <DirtyTextField\n                                label={t(\"early_unenrolment_date\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                name=\"early_unenrolment_date\"\n                                InputLabelProps={{shrink: true}}/>\n                            ],\n                        <DirtyTextField\n                                label={t(\"other_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"other_comments\"\n                            />]}\n              >\n\n              </Person>\n\n              {!loading && !newStudent && <Box my={3}>\n            <Divider />\n            </Box>}\n\n              <Box className={[classes.line, classes.composite]}>\n                {!loading && !newStudent && hasNeeds([NEEDS.send_email]) &&\n                <Tooltip style={{flex: 1}} title={t(\"send_grant_letter\")} aria-label={t(\"send_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      disabled={loadingCtx.loading}\n                      startIcon={<SendIcon/>}\n                      onClick={(e) => {\n                        sendGrantLetter();\n                      }}\n                  >\n                    {t(\"grant_letter\")}\n                  </Button>\n                </Tooltip>}\n\n                {!loading && !newStudent &&\n                <Tooltip style={{flex: 1}} title={t(\"export_grant_letter\")} aria-label={t(\"export_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      disabled={loadingCtx.loading}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                          if (loadingCtx.loading) return;\n                          loadingCtx.startLoading();\n                        StudentsDataService\n                            .downloadSubresource(currentStudent[\"id\"], 'grantLetter')\n                            .then(...errorHandler({snackbarSuccess: true}))\n                            .finally(() => {\n                                loadingCtx.stopLoading();\n                            })\n                      }}\n                  >\n                    {t(\"grant_letter\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n\n              <Box className={[classes.line, classes.composite]}>\n                {!loading && !newStudent && hasNeeds([NEEDS.send_email]) &&\n                <Tooltip style={{flex: 1}} title={t(\"send_enrolment_agreement\")}\n                                                     aria-label={t(\"enrolment_agreement\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<SendIcon/>}\n                      disabled={loadingCtx.loading}\n                      onClick={(e) => {\n                        sendEnrollmentAgreement();\n                      }}\n                  >\n                    {t(\"enrolment_agreement\")}\n                  </Button>\n                </Tooltip>}\n\n                {!loading && !newStudent && <Tooltip style={{flex: 1}} title={t(\"export_enrolment_agreement\")}\n                                                     aria-label={t(\"export_enrolment_agreement\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<GetAppIcon/>}\n                      disabled={loadingCtx.loading}\n                      onClick={(e) => {\n                          if (loadingCtx.loading) return;\n                          loadingCtx.startLoading();\n                        StudentsDataService\n                            .downloadSubresource(currentStudent[\"id\"], 'enrolmentAgreement')\n                            .then(...errorHandler({snackbarSuccess: true}))\n                            .finally(() => {\n                                loadingCtx.stopLoading();\n                            })\n                      }}\n                  >\n                    {t(\"enrolment_agreement\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n            </Box>\n        </Box>\n    </React.Fragment>\n  );\n}\n\n\nexport default Attendee;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.teacher.details.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list_secondary.component.js",["445"],"import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport ItemsList from \"./items_list.component\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {NEEDS} from \"../_helpers/needs\";\nimport {confirmContext} from \"../_context/confirm-context\";\n\n\nconst ItemsListSecondary = ({dataService, parent_id, deleteTooltip, delete_message, onItemDeleted = () => {}, ...props}) => {\n    const errorHandler = useErrorHandler();\n    const confirm = React.useContext(confirmContext);\n    const {t} = useTranslation();\n\n    return <ItemsList\n        secondaryAction={true}\n        withFiltersBox={false}\n        withAvatar={false}\n        secondaryActionCallable={(id) => {\n             confirm.confirm(delete_message, \"not_undone\", () => {\n                dataService\n                .delete(parent_id, id)\n                .then(...errorHandler({snackbarSuccess:true}))\n                .then(function (r) {\n                    onItemDeleted(id);\n                });\n            });\n        }}\n        parent_id={parent_id}\n        secondaryActionTooltip={deleteTooltip}\n        secondaryActionNeeds={[NEEDS.delete]}\n        secondaryActionIcon={<DeleteIcon/>}\n        dataService={dataService}\n        {...props}\n    />\n};\n\nexport default ItemsListSecondary;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/labels_selection.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/price_term.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/pre-enrolment.service.js",["446"],"import axios from \"axios\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\n\nexport const preEnrolmentService = {\n    getCourses,\n    postPreEnrollment\n};\n\nfunction getCourses() {\n        return new Promise(function (resolve, reject) {\n\n            axios({\n                method: 'get',\n                url: `${BACKEND_URL}/pre-enrolment/v1/courses`,\n                headers: {\n                    ...{\n                        'Content-Type': 'application/json',\n                        'Cache-Control': 'no-cache'\n                    }, ...authHeader()  // todo are auth headers needed for gets?\n                }\n            }).then(function (response) {\n                    resolve(response.data);\n                }).catch(function (err) {\n                    reject(err);\n            });\n        });\n    }\n\n\n    function postPreEnrollment(data, recaptcha) {\n        return new Promise(function (resolve, reject) {\n\n            axios({\n                method: 'post',\n                url: `${BACKEND_URL}/pre-enrolment/v1/pre-enrolment`,\n                data: {\n                    body: data,\n                    recaptcha: recaptcha\n                },\n                headers: {\n                    ...{\n                        'Content-Type': 'application/json',\n                        'Cache-Control': 'no-cache'\n                    }, ...authHeader()\n                }\n            }).then(function (response) {\n                    resolve(response);\n                }).catch(function (err) {\n                    reject(err);\n            });\n        });\n    }\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/email.component.js",["447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {useTranslation} from \"react-i18next\";\nimport Fab from \"@material-ui/core/Fab\";\nimport {\n    Chip,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, MenuItem,\n    TextField,\n    Tooltip\n} from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport dataService from \"../_services/courses.service\";\nimport * as yup from \"yup\";\nimport {useFormik} from \"formik\";\nimport {bulkEmailService} from \"../_services/bulkEmail.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {safe_email_required} from \"../_yup/validators\";\nimport EmailTo from \"./emailTo.component\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport EuroIcon from \"@material-ui/icons/Euro\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport clsx from \"clsx\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {payment_methods} from \"../_data/payment_methods\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Card from \"@material-ui/core/Card\";\nimport {loadingContext} from \"../_context/loading-context\";\nimport {confirmContext} from \"../_context/confirm-context\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n\n    textBox: {\n      width: \"100%\",\n        border: \"red\"\n    },\n    chip: {\n      margin: theme.spacing(0.5)\n    },\n    chips: {\n      marginBottom: theme.spacing(1)\n    },\n    in: {\n      marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(2)\n    },fab: {\n    position: 'absolute',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  }, attach: {\n      marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    },\n    card: {\n      marginTop: theme.spacing(1)\n    }\n}));\n\nexport default function Email({...other}) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [groups, setGroups] = useState([]);\n  const [to, setTo] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const addTo = (t) => {\n        setTo([...to, t]);\n    }\n    const removeTo = (id) => {\n        setTo(to.filter(x => x.id !== id));\n    }\n    const loadingCtx = React.useContext(loadingContext);\n     const confirm = React.useContext(confirmContext);\n    const handleSendEmail = () => {\n        if (loadingCtx.loading) return;\n        if (formik.isSubmitting) return;\n\n        confirm.confirm(\"send_bulk_email\", \"send_bulk_email_description\", () => {\n                  loadingCtx.startLoading();\n        formik.setSubmitting(true);\n        bulkEmailService\n            .bulkSend(to.map(g => g.id), formik.values[\"subject\"],\n                formik.values[\"body\"], formik.values[\"emailPreference\"], selectedFiles)\n\n            .then(...errorHandler({snackbarSuccess: true}))\n            .finally(() => {\n                formik.setSubmitting(false);\n                loadingCtx.stopLoading();\n        })\n              });\n\n    }\n\n  const errorHandler = useErrorHandler();\n\n  const formik = useFormik({\n        initialValues: {emailPreference: \"resolved\"},\n        validationSchema: yup.object({\n            email: safe_email_required(t)}),\n        enableReinitialize: true,\n        onSubmit: (values, {setStatus, setSubmitting}) => {\n            setSubmitting(true);\n\n        }\n    });\n  useEffect(() => {\n      dataService\n            .getAll(null, \"*\", ['id', \"name\"])\n            .then(...errorHandler({}))\n            .then(function (res) {\n                setGroups(res[\"data\"]);\n            });\n  }, [])\n    const onFileChange = event => {\n      // Update the state\n      setSelectedFiles([...event.target.files]);\n    };\n    const getFormData = () => {\n        if (selectedFiles.length === 0) return null;\n      // Create an object of formData\n      const formData = new FormData();\n\n      // Update the formData object\n        selectedFiles.forEach(sf => {\n            formData.append(\n            sf.name,\n            sf,\n            sf.name\n          );\n        })\n\n\n      return formData;\n    };\n\n    const fileDataRepresentation = () =>  {\n        console.log(\"sfs\", selectedFiles);\n      return selectedFiles.map(selectedFile => (\n          <Card className={classes.card}>\n      <CardHeader\n        action={\n         <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\n          <IconButton onClick={(e) => {\n              setSelectedFiles(selectedFiles.filter(x => x !== selectedFile));\n          }}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        }\n        titleTypographyProps={{variant: 'subheading'}}\n        title={selectedFile.name}\n      />\n    </Card>));\n    }\n\n\n  return (\n      <div>\n          <h1>{t(\"email\")}</h1>\n          <Box className={classes.chips}>\n              {t(\"to\")}: {\n                  to.length > 0? to.map(x =>\n                      <Tooltip title={t(\"delete\")}>\n                  <Chip variant=\"outlined\"\n              color=\"primary\"\n                        className={classes.chip}\n              size=\"small\"\n              avatar={<Avatar>G</Avatar>}\n              label={x.name}\n              onClick={() => {\n                removeTo(x.id);\n              }}/></Tooltip>\n                  ) : \" - \"\n              }\n          </Box>\n\n          <TextField\n              className={classes.in}\n            label={t(\"use_emails\")}\n            style={{width: \"100%\"}}\n              value={formik.values[\"emailPreference\"] === undefined? '': formik.values[\"emailPreference\"]}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.status  || formik.errors[\"emailPreference\"] !== undefined}\n        helperText={formik.touched[\"emailPreference\"] && formik.errors[\"emailPreference\"]}\n\n            name=\"emailPreference\"\n            select>\n            <MenuItem value=\"contacts\">{t(\"contacts\")}</MenuItem>\n            <MenuItem value=\"resolved\">{t(\"resolved\")}</MenuItem>\n          <MenuItem value=\"student\">{t(\"student\")}</MenuItem>\n          <MenuItem value=\"all\">{t(\"all\")}</MenuItem>\n        </TextField>\n\n\n\n          <EmailTo\n            formik={formik}\n            style={{width: \"100%\"}}\n            options={groups.filter(g => !to.includes(g))}\n            addTo={addTo}\n            name={\"courses\"}\n            label={t(\"courses\")}\n        />\n        <TextField\n              className={classes.in}\n            label={t(\"subject\")}\n            style={{width: \"100%\"}}\n            value={formik.values[\"subject\"] === undefined? '': formik.values[\"subject\"]}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.status  || formik.errors[\"subject\"] !== undefined}\n            helperText={formik.touched[\"subject\"] && formik.errors[\"subject\"]}\n            name=\"subject\"\n            />\n\n        <TextField\n            className={classes.textBox}\n            multiline\n            rows={16}\n            value={formik.values[\"body\"] === undefined? '': formik.values[\"body\"]}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.status  || formik.errors[\"body\"] !== undefined}\n            helperText={formik.touched[\"body\"] && formik.errors[\"body\"]}\n            name={\"body\"}\n          />\n          <div>\n          {fileDataRepresentation()}\n          <input\n              style={{ display: \"none\" }}\n              id=\"contained-button-file\"\n              type=\"file\"\n              multiple\n              onChange={onFileChange}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button className={classes.attach} variant=\"contained\" color=\"primary\" component=\"span\">\n                {t(\"upload\")}\n            </Button>\n          </label>\n          </div>\n          <Tooltip title={t(\"send_email\")}>\n                <Fab className={classes.fab} color=\"primary\" onClick={handleSendEmail} disabled={formik.isSubmitting || to.length === 0}>\n                    <SendIcon/>\n                </Fab>\n            </Tooltip>\n      </div>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_attendance.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/PreEnrolmentPage/PreEnrolmentPage.js",["469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.component.js",["508","509"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.teacher.component.js",["510"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/teachers.teacher.schedule.component.js",["511","512","513","514"],"import {useTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n    calendar: {\n      margin: theme.spacing(2)\n    }\n\n}));\n\n\nfunction TeacherSchedule({  setSchedulesIds, scheduleIds, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  return (\n    <div\n      {...other}\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\n\n    >\n        <Scheduler\n            scheduleIds={scheduleIds}\n            editable={false}\n            allowView={true}\n            viewUrl={(s) => ['/courses', s.course_id]}\n        />\n    </div>\n  );\n}\n\nexport default TeacherSchedule;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/subresource_add_delete.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.room.details.component.js",["515"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/calendar.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/formik_save_button.js",["516","517","518","519","520","521","522","523","524"],"import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useTranslation} from \"react-i18next\";\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport {allNeeds} from \"../_data/needs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport createStyles from \"@material-ui/styles/createStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport {useNeeds} from \"../_helpers/needs\";\n\n\nconst SaveButton = ({formik, ...props}) => {\n    const {t} = useTranslation();\n    const [hasNeeds, NEEDS] = useNeeds();\n    return   hasNeeds([NEEDS.patch]) && <IconButton  type=\"submit\"\n                                    disabled={!formik.dirty || formik.isSubmitting}\n                          {...props}>\n                            <Tooltip title={t(\"save\")} aria-label={t(\"save\")}>\n                                <SaveIcon/>\n                            </Tooltip>\n                        </IconButton>\n}\n\nexport default SaveButton;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/users.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/emailTo.component.js",["525","526","527"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.component.js",["528"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport CoursesDataService from \"../_services/courses.service\";\nimport StudentsDataService from \"../_services/students.service\";\nimport TeachersDataService from \"../_services/teachers.service\";\nimport CourseRoomsDataService from \"../_services/course_rooms.service\";\nimport RoomsDataService from \"../_services/rooms.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport CourseStudentsDataService from \"../_services/course_students.service\";\nimport CourseTeachersDataService from \"../_services/course_teachers.service\";\nimport CourseDetails from \"./courses.course.details.component\";\nimport CourseLabels from \"./courses.course.labels.component\";\nimport CourseSchedule from \"./courses.course.schedule.component\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport AddDeleteSubresource from \"./subresource_add_delete.component\";\nimport TabFrame, {a11yProps} from \"./tab\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    display: 'flex',\n      flexDirection: 'column'\n  },\n    content: {\n      overflowX: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        flex: 1,\n        height: '100%'\n    },\n    tab: {\n      height: '100%'\n    }\n}));\n\n\nexport default function Course({currentCourseId, setNewCourse, addCourseId, newCourse, deleteCourse}) {\n  const loading = currentCourseId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [course, setCourse] = useState(null);  // todo rename to student\nconst [hasNeeds, NEEDS] = useNeeds();\n  useEffect(() => {\n    if (loading) return setCourse(null);\n    CoursesDataService\n            .getOne(currentCourseId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setCourse(res[\"data\"]);\n                });\n  }, [currentCourseId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentCourseId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                >\n                  <Tab label={t(\"course\")} {...a11yProps(0)} />\n                   { !newCourse &&\n                  <Tab label={t(\"labels\")} {...a11yProps(1)} />}\n\n                    { !newCourse && hasNeeds([NEEDS.schedules]) &&\n                  <Tab label={t(\"schedules\")} {...a11yProps(2)} />}\n\n                   { !newCourse && hasNeeds([NEEDS.students]) &&\n                  <Tab label={t(\"students\")} {...a11yProps(3)} />}\n\n                   { !newCourse && hasNeeds([NEEDS.teachers]) &&\n                  <Tab label={t(\"teachers\")} {...a11yProps(4)} />}\n\n                   { !newCourse && hasNeeds([NEEDS.rooms]) &&\n                  <Tab label={t(\"rooms\")} {...a11yProps(5)} />}\n\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            containerStyle={{height: '100%'}}\n            className={classes.content}\n            onChangeIndex={handleChangeIndex}\n          >\n\n            <TabFrame value={value} index={0}>  <CourseDetails\n                    newCourse={newCourse}\n                    setNewCourse={setNewCourse}\n                    dir={theme.direction}\n                    currentCourse={course}\n                    updateCurrentCourse={setCourse}\n                    deleteCourse={deleteCourse}\n            /></TabFrame>\n\n         <TabFrame value={value} index={1}>     <CourseLabels\n                      dir={theme.direction}\n                      currentCourse={course}\n                      updateCurrentCourse={setCourse}\n                      deleteCourse={deleteCourse}\n         /></TabFrame>\n\n              {hasNeeds([NEEDS.schedules]) && <TabFrame value={value} index={2}>\n                  <CourseSchedule\n                        setScheduleIds={(ids) => setCourse({...course, schedules: ids})}\n                       className={classes.tab}\n                       dir={theme.direction}\n                       scheduleIds={course === null ? null : course.schedules}\n                       student_id={currentCourseId}\n              /></TabFrame>}\n\n              {hasNeeds([NEEDS.students]) &&\n\n            <TabFrame value={value} index={3}>  <AddDeleteSubresource\n                  defaultSearchBy=\"full_name\"\n                  parentItemDataService={CourseStudentsDataService}\n                  itemDataService={StudentsDataService}\n                  add_message_confirm=\"confirm_enroll_to_course\"\n                  parent_id={currentCourseId}\n                  searchByOptions={[\"full_name\"]}\n                  resourceName={\"students\"}\n                  displayNameField={\"full_name\"}\n                  add_message=\"enroll_student\"\n                  onSubresourceAdded={(id) => {\n                    setCourse({\n                                       ...course,\n                                       students: [...course['students'], id]\n                                   })\n                  }}\n                  onSubresourceDeleted={(id) => {\n                    setCourse({\n                           ...course,\n                           students: course['students'].filter((s) => s !== id)\n                       });\n                  }}\n            /></TabFrame>\n\n\n\n              }\n\n              {hasNeeds([NEEDS.teachers]) &&\n\n                 <TabFrame value={value} index={4}>  <AddDeleteSubresource\n                  defaultSearchBy=\"full_name\"\n                  parentItemDataService={CourseTeachersDataService}\n                  itemDataService={TeachersDataService}\n                  add_message_confirm=\"confirm_enroll_to_course\"\n                  parent_id={currentCourseId}\n                  searchByOptions={[\"full_name\"]}\n                  resourceName={\"students\"}\n                  displayNameField={\"full_name\"}\n                  add_message=\"enroll_student\"\n                  onSubresourceAdded={(id) => {\n                    setCourse({\n                                       ...course,\n                                       teachers: [...course['teachers'], id]\n                                   })\n                  }}\n                  onSubresourceDeleted={(id) => {\n                    setCourse({\n                           ...course,\n                           teachers: course['teachers'].filter((c) => c !== id)\n                       });\n                  }}\n                 /></TabFrame>\n\n              }\n\n               {hasNeeds([NEEDS.rooms]) &&\n\n                 <TabFrame value={value} index={5}>  <AddDeleteSubresource\n                  defaultSearchBy=\"name\"\n                  parentItemDataService={CourseRoomsDataService}\n                  itemDataService={RoomsDataService}\n                  add_message_confirm=\"confirm_link_to_room\"\n                  parent_id={currentCourseId}\n                  searchByOptions={[\"name\"]}\n                  resourceName={\"rooms\"}\n                  displayNameField={\"name\"}\n                  add_message=\"link_room\"\n                  onSubresourceAdded={(id) => {\n                    setCourse({\n                                       ...course,\n                                       rooms: [...course['rooms'], id]\n                                   })\n                  }}\n                  onSubresourceDeleted={(id) => {\n                    setCourse({\n                           ...course,\n                           rooms: course['rooms'].filter((c) => c !== id)\n                       });\n                  }}\n                 /></TabFrame>\n\n              }\n\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.userperson.component.js",["529","530","531","532"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport * as yup from 'yup';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport UsersDataService from \"../_services/users.service\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {useNormik} from \"../_helpers/normik\";\nimport SaveButton from \"./formik_save_button\";\nimport DiscardButton from \"./formik_discard_button\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport {safe_email_required} from \"../_yup/validators\";\nimport {confirmContext} from \"../_context/confirm-context\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: {\n    float: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction UserPerson({ children, addStudentId, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\n  const { t } = useTranslation();\n  const loading = currentStudent === null;\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n\nconst confirm = React.useContext(confirmContext);\nconst deleteFullUser = () => {\n    UsersDataService\n              .delete(currentStudent['id'])\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                deleteStudent(currentStudent['id']);\n              });\n  }\n\n\n  let initialValues = loading ? {} : currentStudent;\n\n\n    const formik = useNormik(true, {\n        initialValues: initialValues,\n        validationSchema: yup.object({\n            email: safe_email_required,\n            name: yup.string().required(t(\"name_required\")),\n        }),\n        enableReinitialize: true,\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\n                if (Object.keys(changedValues).length > 0) {\n                setStatus();\n\n                UsersDataService.patch({\n                    id: initialValues[\"id\"],\n                    body: changedValues,\n                    initial_values: initialValues\n                }).then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (patched_body) {\n                        formik.resetForm(patched_body);\n                        updateCurrentStudent(patched_body);\n                    }).catch(function (err) {\n                        setStatus(true);\n                    }).finally(() => {\n                        setSubmitting(false);\n                    });\n\n\n            } else {\n                setSubmitting(false);\n            }\n        }\n    });\nconst [hasNeeds, NEEDS] = useNeeds();\n  return (\n        <Box p={3}>\n            <Box px={2}>\n\n              {loading ?\n                  <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n               hasNeeds([NEEDS.delete]) && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\n                <IconButton onClick={(e) => {\n                 confirm.confirm(\"delete_user_question\", \"not_undone\", () => {\n                     deleteFullUser();\n                 })\n                }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              {loading?\n                (\n\n                    <Box>\n                         <IconButtonSkeleton className={classes.actionIcon}/>\n                       <IconButtonSkeleton className={classes.actionIcon}/>\n\n\n                            <div style={{clear: 'both'}}>\n                               {   [\"100%\", \"100%\", \"100%\"].map((value, idx) => {\n                                return (\n                                    <Box key={idx} py={0} >\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\n                                    </Box>);\n                            })}\n                            </div>\n                    </Box>\n                )\n                :\n                (\n                    <form onSubmit={formik.handleSubmit}>\n\n                        <DiscardButton className={classes.actionIcon}\n                                        formik={formik}/>\n\n\n                        <SaveButton className={classes.actionIcon}\n                                    formik={formik}/>\n\n\n\n                        <DirtyTextField\n                            label={t(\"id\")}\n                            name=\"id\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                        />\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                    </form>\n                )\n\n            }\n\n            </Box>\n        </Box>\n\n  );\n}\n\nexport default UserPerson;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.schedule.component.js",["533","534","535","536","537","538"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_rooms.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/courses.course.details.component.js",["539","540","541","542"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport CoursesDataService from \"../_services/courses.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport * as yup from 'yup';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {useNormik} from \"../_helpers/normik\";\nimport SaveButton from \"./formik_save_button\";\nimport DiscardButton from \"./formik_discard_button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {DialogContent, MenuItem, TextField} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {useSnackbar} from \"notistack\";\nimport {useFormik} from \"formik\";\nimport {DEFAULT_COURSE_PRICE_TERM} from \"../_data/price_term\";\nimport {useNeeds} from \"../_helpers/needs\";\nimport {loadingContext} from \"../_context/loading-context\";\nimport {confirmContext} from \"../_context/confirm-context\";\nimport Link from \"@material-ui/core/Link\";\nimport {downloadCalendar} from \"../_services/calendar.service\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: {\n    float: 'right'\n  },\n    textField: {\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    },\n    choose: {\n      marginBottom: theme.spacing(3)\n    }\n}));\n\nfunction CourseDetails({ children, addCourseId, setNewCourse, newCourse, currentCourse, updateCurrentCourse, patchService, deleteCourse, ...other }) {\n  const { t } = useTranslation();\n  const loading = currentCourse === null;\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const deleteFullCourse = (id_) => {\n    CoursesDataService\n              .delete(id_)\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                deleteCourse(id_);\n              });\n  }\n\n  const [openDownloadAttendanceList, setOpenDownloadAttendanceList] = React.useState(false);\n\nconst confirm = React.useContext(confirmContext);\n\n  let initialValues = loading ? {} : currentCourse;\n  if (newCourse) {\n      initialValues = {\n          price_term: DEFAULT_COURSE_PRICE_TERM,\n          is_published: false\n      }\n  }\n\n    const formik2 = useFormik({\n        initialValues: {},\n        validationSchema: yup.object({\n            startDate: yup.date().required(t(\"required\")),\n             endDate: yup.date().required(t(\"required\")),\n        }),\n        enableReinitialize: true,\n        onSubmit: (values, {setStatus, setSubmitting}) => {\n\n\n            setSubmitting(true);\n            setStatus();\n\n             CoursesDataService\n                    .downloadSubresource(currentCourse[\"id\"], 'attendanceList', values)\n                    .then(...errorHandler({snackbarSuccess: true}))\n                    .then(() => {\n                        setOpenDownloadAttendanceList(false);\n                    })\n                 .catch(() => {\n                     setStatus(true);\n                 })\n                 .finally(() => {\n                     setSubmitting(false);\n                 })\n\n\n        }\n    });\n\n    const formik = useNormik(!newCourse, {\n        initialValues: initialValues,\n        validationSchema: yup.object({\n            name: yup.string().required(t(\"name_required\")),\n        }),\n        enableReinitialize: true,\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\n            if (Object.keys(changedValues).length > 0) {\n                setStatus();\n\n                if (newCourse) {\n                    CoursesDataService.post(changedValues)\n                         .then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (new_id) {\n                        updateCurrentCourse(new_id);\n                        setNewCourse(false);\n                    }).catch(function (err) {\n                    setStatus(true);\n                    }).finally(() => {\n                    setSubmitting(false);\n                });\n                } else {\n                   CoursesDataService.patch({\n                    id: initialValues[\"id\"],\n                    body: changedValues,\n                    initial_values: initialValues\n                }).then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (patched_body) {\n                        formik.resetForm(patched_body);\n                        updateCurrentCourse(patched_body);\n                    }).catch(function (err) {\n                        setStatus(true);\n                    }).finally(() => {\n                        setSubmitting(false);\n                    });\n                }\n\n\n\n\n            } else {\n                setSubmitting(false);\n            }\n        }\n    });\n     const loadingCtx = React.useContext(loadingContext);\nconst [hasNeeds, NEEDS] = useNeeds();\n  return (\n    <div\n      {...other}\n    >\n\n\n         <Dialog\n        open={openDownloadAttendanceList}\n        onClose={(e) => {setOpenDownloadAttendanceList(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      ><form onSubmit={formik2.handleSubmit}>\n        <DialogTitle id=\"alert-dialog-title\">{t(\"download\")}</DialogTitle>\n            <DialogContent>\n                <Typography className={classes.choose}>{t(\"chose_list_dates\")}</Typography>\n\n                <TextField\n                    id=\"date\"\n                    label={t(\"start\")}\n                    type=\"date\"\n                    value={formik2.values[\"startDate\"]}\n                    name={\"startDate\"}\n                    onChange={formik2.handleChange}\n                    onBlur={formik2.handleBlur}\n                    error={formik2.status  || formik2.errors[\"startDate\"] !== undefined}\n                    helperText={formik2.touched[\"startDate\"] && formik2.errors[\"startDate\"]}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                  <TextField\n                    id=\"date\"\n                    label={t(\"end\")}\n                    type=\"date\"\n                    value={formik2.values[\"endDate\"]}\n                    name={\"endDate\"}\n                    onChange={formik2.handleChange}\n                    error={formik2.status  || formik2.errors[\"endDate\"] !== undefined}\n                    helperText={formik2.touched[\"endDate\"] && formik2.errors[\"endDate\"]}\n                    onBlur={formik2.handleBlur}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n            </DialogContent>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenDownloadAttendanceList(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button type=\"submit\" color=\"primary\"   disabled={formik2.isSubmitting} autoFocus>\n            {t(\"download\")}\n          </Button>\n        </DialogActions></form>\n      </Dialog>\n\n\n        <Box p={3}>\n            <Box px={2}>\n\n              {!newCourse && loading ?\n                  <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n               hasNeeds([NEEDS.delete]) && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\n                <IconButton onClick={(e) => {\n                    if (newCourse) {\n                        setNewCourse(false);\n                    } else{\n                        confirm.confirm(\"delete_course_question\", \"not_undone\", () => {\n                            deleteFullCourse(currentCourse['id']);\n                        })\n                    }\n\n                }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              {!newCourse && loading?\n                (\n\n                    <Box>\n                         <IconButtonSkeleton className={classes.actionIcon}/>\n                       <IconButtonSkeleton className={classes.actionIcon}/>\n\n\n                            <div style={{clear: 'both'}}>\n                               {   [\"100%\", \"100%\", \"100%\"].map((value, idx) => {\n                                return (\n                                    <Box key={idx} py={0} >\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\n                                    </Box>);\n                            })}\n                            </div>\n                    </Box>\n                )\n                :\n                (\n                    <form onSubmit={formik.handleSubmit}>\n\n                        <DiscardButton className={classes.actionIcon}\n                                        formik={formik}/>\n\n\n                        <SaveButton className={classes.actionIcon}\n                                    formik={formik}/>\n\n\n\n                        <DirtyTextField\n                            label={t(\"id\")}\n                            name=\"id\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                        />\n\n\n                        <DirtyTextField\n                            label={t(\"calendar_url\")}\n                            name=\"calendar_url\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                            />\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                           <DirtyTextField\n                                label={t(\"description\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"description\"\n                                formik={formik}\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"price_term\")}\n                                style={{flex: 1}}\n                                name=\"price_term\"\n                                formik={formik}\n                                type=\"number\"\n                            />\n                            <DirtyTextField\n                                label={t(\"public\")}\n                                style={{flex: 1}}\n                                name=\"is_published\"\n                                formik={formik}\n                                select\n                            >\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                        </Box>\n\n                    </form>\n\n\n                )\n\n\n\n            }\n\n             {!loading && !newCourse && <Box my={3}>\n            <Divider />\n            </Box>}\n\n            <Box className={[classes.line, classes.composite]}>\n                {!loading && hasNeeds([NEEDS.students]) &&  !newCourse &&\n                <Tooltip style={{flex: 1}} title={t(\"export_attendance_list\")} aria-label={t(\"send_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                        setOpenDownloadAttendanceList(true);\n                      }}\n                  >\n                    {t(\"attendance_list\")}\n                  </Button>\n                </Tooltip>}\n\n                {!loading && hasNeeds([NEEDS.students, NEEDS.guardians]) && !newCourse &&\n                <Tooltip style={{flex: 1}} title={t(\"export_students_contact_sheet\")} aria-label={t(\"export_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      disabled={loadingCtx.loading}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                          loadingCtx.startLoading();\n                        CoursesDataService\n                            .downloadSubresource(currentCourse[\"id\"], 'contactsSheet')\n                            .then(...errorHandler({snackbarSuccess: true}))\n                            .finally(() => {\n                                loadingCtx.stopLoading();\n                            })\n                      }}\n                  >\n                    {t(\"students_contact_sheet\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n\n\n                <Box className={[classes.line, classes.composite]}>\n                {!loading && !newCourse &&\n                <Tooltip style={{flex: 1}} title={t(\"export_calendar\")} aria-label={t(\"send_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                        downloadCalendar(\"courses\", currentCourse['id'], currentCourse['calendar_id']).then(r => {});\n                      }}\n                  >\n                    {t(\"export_calendar\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n\n            </Box>\n        </Box>\n    </div>\n  );\n}\n\nexport default CourseDetails;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js",["543","544"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js",["545","546"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendReceiptEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/paymentReceipt/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js",["547"],"import { useEffect } from \"react\";\n\nexport const useOnMount = handler => {\n  return useEffect(() => {\n    return handler();\n  }, []);\n};","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/loading-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js",["548","549"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js",["550","551"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/course_teachers.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list.component.js",["552","553","554","555"],"import React, {useEffect, useState} from \"react\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchBar from './searchbar.component'\nimport Box from \"@material-ui/core/Box\";\nimport {useTranslation} from \"react-i18next\";\nimport {Accordion, AccordionDetails, AccordionSummary, Chip, ListItemSecondaryAction} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExportSearchChip from \"./ExportSearchChip.component\";\nimport {useNeeds} from \"../_helpers/needs\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flex: 1,\n        overflow: 'auto',\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    list: {\n        overflow: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        minHeight: '150px'\n    },\n    searchAndFilters: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: theme.spacing(3)\n    },\n    chip: {\n        margin: theme.spacing(2)\n    },\n    avatar: {},\n    selectedAvatar: {\n        backgroundColor: theme.palette.primary.dark\n    },\n    chips: {\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    },\n    noResults: {\n        textAlign: 'center'\n    }\n}));\n\nconst ItemsList = ({setCurrentItemId=() => {}, onItemClick = () => {}, parent_id=null, secondaryDisplayNameField=null,\n                        secondaryAction=null, secondaryActionNeeds=[], secondaryActionTooltip=null, secondaryActionIcon=null, secondaryActionCallable=null,\n                       withAvatar=true, withFiltersBox = true,\n                       chips=[], currentItemId = null, items, setItems, displayNameField=\"full_name\",\n                       usableFilters=[], defaultSearchBy=\"full_name\", searchByOptions=[\"full_name\"],\n                        dataService, searchBarLabel, exportPage=true, exportAllPages=true}) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [filters, setFilters] = useState(usableFilters.reduce((map, f) => {\n        map[f.name] = f.initialValue;\n        return map;\n        }, {})\n    );\n    const [searchBy, setSearchBy] = useState(defaultSearchBy);\n\n    const {t} = useTranslation();\n\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const errorHandler = useErrorHandler();\n     const [hasNeeds, NEEDS] = useNeeds();\n\n    const classes = useStyles();\n\n    const onChangeSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    };\n\n    const resetSearchBy = () => {\n        setSearchBy(defaultSearchBy);\n    }\n\n    function getFilters(){\n        return Object.fromEntries(Object.entries(filters).filter(([k,v]) => (v !== null)))\n    }\n\n    function search() {\n        dataService\n            .getAll({name: searchBy, value: searchTerm}, page, [...new Set(['id', displayNameField, secondaryDisplayNameField === null? 'id': secondaryDisplayNameField])], getFilters(), parent_id)\n            .then(...errorHandler({}))\n            .then(function (res) {\n                setItems(res[\"data\"]);\n                setCount(res[\"_pagination\"][\"totalPages\"]);\n            });\n    }\n\n    // we don't want the search to trigger for each searchTerm change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => {\n        if (page === 1) {\n            search(); // no need to change page, since we are at page 1\n        } else {\n            setPage(1);  // will trigger search due tot the effect below\n        }\n    }, [filters]);  // todo\n\n    useEffect(search, [page, searchBy]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n    return (\n        <Box className={classes.root}>\n            <Box className={classes.searchAndFilters}>\n                <SearchBar\n                    label={t(searchBarLabel)}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={() => {\n                        if (page === 1){\n                            search();\n                        } else {\n                            setPage(1);  // search will be triggered\n                        }\n\n                    }}\n                />\n\n                {withFiltersBox && <Accordion>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                        <Typography className={classes.heading}>{t(\"filters_actions\")}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <Box className={classes.chips}>\n\n                            {exportPage && Array.isArray(items) && items.length > 0 && <ExportSearchChip\n                                searchTerm={searchTerm}\n                                page={page}\n                                searchTermField={searchBy}\n                                dataService={dataService}\n                                getFilters={getFilters}\n                            />}\n                            {exportAllPages && Array.isArray(items) && items.length > 0 && <ExportSearchChip\n                                searchTerm={searchTerm}\n                                page={page}\n                                dataService={dataService}\n                                searchTermField={searchBy}\n                                exportAll={true}\n                                getFilters={getFilters}\n                            />}\n\n                            {chips.map((chip) => (\n                                chip\n                            ))}\n\n                            ·\n\n                            {searchByOptions.map(option => (\n                                <Tooltip key={option} title={`${t(\"search_by\")} ${t(option)}`}>\n                                    <Chip size=\"small\"\n                                          color={searchBy === option ? \"primary\" : \"default\"}\n                                          label={`${t(\"search_by\")} ${t(option)}`}\n                                          onClick={(e) => {\n                                              if (searchBy === option) {\n                                                  resetSearchBy();\n                                              } else {\n                                                  setSearchBy(option);\n                                              }\n                                          }}/>\n                                </Tooltip>\n                            ))}\n\n\n                            {usableFilters.map(f => (\n                                <React.Fragment>\n                                    · {f['options'].map(option => (\n                                        <Tooltip key={f.name + option.name}\n                                                 title={t(option.tooltip)}\n                                                 aria-label={t(option.tooltip)}>\n                                            <Chip size=\"small\"\n                                                  color={filters[f.name] === option.name ? \"primary\" : \"default\"}\n                                                  label={t(option.label)}\n                                                  onClick={(e) => {\n                                                      setFilters({\n                                                          ...filters,\n                                                          [f.name]: (filters[f.name] === option.name) ? null : option.name\n                                                      })\n                                                  }}/>\n                                        </Tooltip>\n                                    )\n                                )}\n\n                                </React.Fragment>))\n                            }\n                        </Box>\n                    </AccordionDetails>\n                </Accordion>}\n\n\n                <Box my={2}>\n                    <Pagination\n                        className=\"pagination\"\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            </Box>\n            <List className={classes.list}>\n                {items && items.map((item) => (\n                    <div key={item[\"id\"]}>\n                        <ListItem key={item[\"id\"]} button\n                                  onClick={() => {\n                                      onItemClick(item['id']);\n                                      setCurrentItemId(item['id']);\n                                  }}>\n                            {withAvatar && <ListItemAvatar>\n                                <Avatar\n                                    className={item[\"id\"] === currentItemId ? classes.selectedAvatar : classes.avatar}>{item[displayNameField].charAt(0).toUpperCase()}</Avatar>\n                            </ListItemAvatar>}\n                            <ListItemText id=\"name\" primary={item[displayNameField]} secondary={secondaryDisplayNameField === null? null: item[secondaryDisplayNameField]}/>\n\n                            {secondaryAction &&  hasNeeds(secondaryActionNeeds) &&\n                            <ListItemSecondaryAction>\n                                <Tooltip title={t(secondaryActionTooltip)}>\n                                    <IconButton edge=\"end\" aria-label={t(\"export\")} onClick={(e) => {\n                                        secondaryActionCallable(item['id']);\n                                    }}>\n                                        {secondaryActionIcon}\n                                    </IconButton>\n                                </Tooltip>\n                            </ListItemSecondaryAction>}\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n                {\n                    (items.length === 0) && <Typography className={classes.noResults}>\n                        {t(\"no_results\") +\" 👀\"}\n                    </Typography>\n                }\n            </List>\n        </Box>\n    );\n};\n\nexport default ItemsList;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/set_operations.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/scheduler.component.js",["556","557","558","559","560","561"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js",["562"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {MenuItem} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport * as yup from 'yup';\nimport DirtyCountrySelect from \"./contry-select.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useNormik} from \"../_helpers/normik\";\nimport {education_years} from \"../_data/education\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\nimport DiscardButton from \"./formik_discard_button\";\nimport SaveButton from \"./formik_save_button\";\nimport {safe_email_required} from \"../_yup/validators\";\n\nconst useStyles = makeStyles((theme) => ({\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    },\n    actionIcon: {\n        float: 'right'\n    }\n}));\n\nfunction Person(props) {\n    const currentPerson = props.currentPerson;\n    const dataService = props.patchService;\n    const newPerson = props.newPerson;\n    const updateCurrentPerson = props.updateCurrentStudent;\n    const additionalFields = props.additionalFields;\n    const additionalValidation = props.additionalValidation === undefined? {}: props.additionalValidation;\n    const studentId = props.studentId;\n    const onUpdate = props.onUpdate;\n    const loading = currentPerson === null;\n\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const errorHandler = useErrorHandler();\n    let initialValues = loading ? {} : currentPerson;\n\n\n    const formik = useNormik(!newPerson, {\n        initialValues: initialValues,\n        validationSchema: yup.object({...{\n            email: safe_email_required(t),  // todo\n            name: yup.string().required(t(\"name_required\")),\n            is_studying: yup.boolean().required(t(\"studying_required\")),\n            is_working: yup.boolean().required(t(\"working_required\")),\n            career: yup.string().when('is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"career_required\"))\n                                                }),\n            education_entity: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_entity_required\"))\n                                                }),\n            education_year: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_year_required\"))\n                                                })\n        }, ...additionalValidation}),\n        enableReinitialize: true,\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\n            if (newPerson) {\n                setStatus();\n                dataService.post({...changedValues})\n                    .then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (new_id) {\n                        updateCurrentPerson(new_id['id']);\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                    setStatus(true);\n                    }).finally(() => {\n                    setSubmitting(false);\n                });\n            } else {\n                if (Object.keys(changedValues).length > 0) {\n                setStatus();\n                dataService.patch({\n                    id: initialValues[\"id\"],\n                    body: changedValues,\n                    initial_values: initialValues\n                }).then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (patched_body) {\n                        formik.resetForm(patched_body);\n                        updateCurrentPerson(patched_body);\n\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                        setStatus(true);\n                    }).finally(() => {\n                        setSubmitting(false);\n                    });\n\n\n            } else {\n                setSubmitting(false);\n            }\n            }\n        }\n    });\n\n    function recursiveForm(elements) {\n        if (elements === undefined) return null;\n\n        return <div>\n            <Box my={3}>\n            <Divider />\n            </Box>\n            {\n            elements.map((res, idx) => (\n                <Box key={idx} className={`${classes.line} ${classes.composite}`}>\n                    {res instanceof Array ?\n                        res.map((r, idx2) => (\n                            React.cloneElement(r, {formik: formik, key: idx+\"-\"+idx2})\n                        ))\n                        : React.cloneElement(res, {formik: formik})}\n                </Box>))\n        }\n        </div>;\n    }\n\n\n    return (\n        <Box>\n            {loading?\n                (\n\n                    <Box>\n                         <IconButtonSkeleton className={classes.actionIcon}/>\n                       <IconButtonSkeleton className={classes.actionIcon}/>\n\n\n                            <div style={{clear: 'both'}}>\n                               {   [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map((value, idx) => {\n                                return (\n                                    <Box key={idx} py={0} >\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\n                                    </Box>);\n                            })}\n                            </div>\n                    </Box>\n                )\n                :\n                (\n                    <form onSubmit={formik.handleSubmit}>\n\n                        <DiscardButton className={classes.actionIcon}\n                                        formik={formik}/>\n\n\n                        <SaveButton className={classes.actionIcon}\n                                    formik={formik}/>\n\n\n                        <DirtyTextField\n                            label={t(\"id\")}\n                            name=\"id\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                        />\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"address\")}\n                                formik={formik}\n                                style={{flex: 4}}\n                                name=\"address\"\n                            />\n                            <DirtyTextField\n                                label={t(\"city\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"city\"\n                            />\n                            <DirtyTextField\n                                label={t(\"zip\")}\n                                formik={formik}\n                                type=\"number\"\n                                style={{flex: 1}}\n                                name=\"zip\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"dni\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"dni\"\n                            />\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"phone\"\n                            />\n\n\n\n                        </Box>\n\n\n\n                        <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyCountrySelect\n                                formik={formik}\n                                style={{flex: 1}}\n                                name={\"country_of_origin\"}\n                                label={t(\"country_of_origin\")}\n                            />\n<DirtyTextField\n                                label={t(\"gender\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"gender\"\n                                select>\n                                <MenuItem value=\"m\">{t(\"male\")}</MenuItem>\n                                <MenuItem value=\"f\">{t(\"female\")}</MenuItem>\n                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\n                            </DirtyTextField>\n                        </Box>\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name=\"is_studying\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"education_entity\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"education_entity\"\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                name=\"education_year\"\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name=\"is_working\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                name=\"career\"\n                            />\n                        </Box>\n\n                        {recursiveForm(additionalFields)}\n\n                    </form>\n                )\n\n            }\n        </Box>\n    );\n}\n\n\nexport default Person;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/theme_button.component.js",["563"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list_main.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/teachers_courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirty_checkbox.js",["564","565","566","567","568","569","570"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/userInvites.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js",[],{"ruleId":"571","severity":1,"message":"572","line":11,"column":31,"nodeType":"573","messageId":"574","endLine":11,"endColumn":37},{"ruleId":"575","replacedBy":"576"},{"ruleId":"577","replacedBy":"578"},{"ruleId":"571","severity":1,"message":"579","line":1,"column":8,"nodeType":"573","messageId":"574","endLine":1,"endColumn":15},{"ruleId":"571","severity":1,"message":"580","line":2,"column":8,"nodeType":"573","messageId":"574","endLine":2,"endColumn":18},{"ruleId":"571","severity":1,"message":"581","line":3,"column":8,"nodeType":"573","messageId":"574","endLine":3,"endColumn":23},{"ruleId":"571","severity":1,"message":"582","line":4,"column":8,"nodeType":"573","messageId":"574","endLine":4,"endColumn":11},{"ruleId":"583","severity":1,"message":"584","line":10,"column":34,"nodeType":"585","messageId":"586","endLine":10,"endColumn":36},{"ruleId":"571","severity":1,"message":"587","line":11,"column":11,"nodeType":"573","messageId":"574","endLine":11,"endColumn":19},{"ruleId":"571","severity":1,"message":"588","line":12,"column":12,"nodeType":"573","messageId":"574","endLine":12,"endColumn":13},{"ruleId":"571","severity":1,"message":"589","line":3,"column":16,"nodeType":"573","messageId":"574","endLine":3,"endColumn":25},{"ruleId":"571","severity":1,"message":"590","line":30,"column":5,"nodeType":"573","messageId":"574","endLine":30,"endColumn":18},{"ruleId":"571","severity":1,"message":"591","line":37,"column":10,"nodeType":"573","messageId":"574","endLine":37,"endColumn":20},{"ruleId":"571","severity":1,"message":"592","line":137,"column":22,"nodeType":"573","messageId":"574","endLine":137,"endColumn":27},{"ruleId":"575","replacedBy":"593"},{"ruleId":"577","replacedBy":"594"},{"ruleId":"571","severity":1,"message":"581","line":3,"column":8,"nodeType":"573","messageId":"574","endLine":3,"endColumn":23},{"ruleId":"571","severity":1,"message":"582","line":4,"column":8,"nodeType":"573","messageId":"574","endLine":4,"endColumn":11},{"ruleId":"571","severity":1,"message":"595","line":6,"column":9,"nodeType":"573","messageId":"574","endLine":6,"endColumn":21},{"ruleId":"571","severity":1,"message":"596","line":9,"column":8,"nodeType":"573","messageId":"574","endLine":9,"endColumn":17},{"ruleId":"571","severity":1,"message":"596","line":22,"column":8,"nodeType":"573","messageId":"574","endLine":22,"endColumn":17},{"ruleId":"571","severity":1,"message":"580","line":17,"column":8,"nodeType":"573","messageId":"574","endLine":17,"endColumn":18},{"ruleId":"571","severity":1,"message":"597","line":18,"column":8,"nodeType":"573","messageId":"574","endLine":18,"endColumn":18},{"ruleId":"598","severity":1,"message":"599","line":103,"column":8,"nodeType":"600","endLine":103,"endColumn":18,"suggestions":"601"},{"ruleId":"598","severity":1,"message":"602","line":128,"column":6,"nodeType":"600","endLine":128,"endColumn":40,"suggestions":"603"},{"ruleId":"598","severity":1,"message":"604","line":128,"column":7,"nodeType":"605","endLine":128,"endColumn":29},{"ruleId":"598","severity":1,"message":"599","line":137,"column":6,"nodeType":"600","endLine":137,"endColumn":8,"suggestions":"606"},{"ruleId":"571","severity":1,"message":"607","line":4,"column":15,"nodeType":"573","messageId":"574","endLine":4,"endColumn":31},{"ruleId":"571","severity":1,"message":"595","line":8,"column":9,"nodeType":"573","messageId":"574","endLine":8,"endColumn":21},{"ruleId":"571","severity":1,"message":"608","line":21,"column":9,"nodeType":"573","messageId":"574","endLine":21,"endColumn":16},{"ruleId":"575","replacedBy":"609"},{"ruleId":"577","replacedBy":"610"},{"ruleId":"571","severity":1,"message":"611","line":2,"column":9,"nodeType":"573","messageId":"574","endLine":2,"endColumn":19},{"ruleId":"571","severity":1,"message":"612","line":4,"column":9,"nodeType":"573","messageId":"574","endLine":4,"endColumn":17},{"ruleId":"571","severity":1,"message":"613","line":14,"column":13,"nodeType":"573","messageId":"574","endLine":14,"endColumn":22},{"ruleId":"598","severity":1,"message":"614","line":57,"column":6,"nodeType":"600","endLine":57,"endColumn":21,"suggestions":"615"},{"ruleId":"571","severity":1,"message":"616","line":15,"column":8,"nodeType":"573","messageId":"574","endLine":15,"endColumn":16},{"ruleId":"598","severity":1,"message":"614","line":69,"column":6,"nodeType":"600","endLine":69,"endColumn":24,"suggestions":"617"},{"ruleId":"571","severity":1,"message":"588","line":33,"column":11,"nodeType":"573","messageId":"574","endLine":33,"endColumn":12},{"ruleId":"571","severity":1,"message":"618","line":1,"column":9,"nodeType":"573","messageId":"574","endLine":1,"endColumn":23},{"ruleId":"571","severity":1,"message":"619","line":3,"column":8,"nodeType":"573","messageId":"574","endLine":3,"endColumn":28},{"ruleId":"571","severity":1,"message":"620","line":6,"column":9,"nodeType":"573","messageId":"574","endLine":6,"endColumn":20},{"ruleId":"571","severity":1,"message":"621","line":7,"column":8,"nodeType":"573","messageId":"574","endLine":7,"endColumn":17},{"ruleId":"571","severity":1,"message":"622","line":7,"column":20,"nodeType":"573","messageId":"574","endLine":7,"endColumn":37},{"ruleId":"571","severity":1,"message":"623","line":8,"column":9,"nodeType":"573","messageId":"574","endLine":8,"endColumn":23},{"ruleId":"571","severity":1,"message":"608","line":21,"column":9,"nodeType":"573","messageId":"574","endLine":21,"endColumn":16},{"ruleId":"571","severity":1,"message":"624","line":22,"column":9,"nodeType":"573","messageId":"574","endLine":22,"endColumn":21},{"ruleId":"571","severity":1,"message":"625","line":23,"column":9,"nodeType":"573","messageId":"574","endLine":23,"endColumn":14},{"ruleId":"571","severity":1,"message":"613","line":4,"column":8,"nodeType":"573","messageId":"574","endLine":4,"endColumn":17},{"ruleId":"598","severity":1,"message":"626","line":37,"column":6,"nodeType":"600","endLine":37,"endColumn":18,"suggestions":"627"},{"ruleId":"571","severity":1,"message":"588","line":33,"column":11,"nodeType":"573","messageId":"574","endLine":33,"endColumn":12},{"ruleId":"571","severity":1,"message":"613","line":5,"column":8,"nodeType":"573","messageId":"574","endLine":5,"endColumn":17},{"ruleId":"571","severity":1,"message":"628","line":31,"column":8,"nodeType":"573","messageId":"574","endLine":31,"endColumn":17},{"ruleId":"571","severity":1,"message":"588","line":13,"column":12,"nodeType":"573","messageId":"574","endLine":13,"endColumn":13},{"ruleId":"571","severity":1,"message":"629","line":3,"column":9,"nodeType":"573","messageId":"574","endLine":3,"endColumn":20},{"ruleId":"571","severity":1,"message":"630","line":3,"column":8,"nodeType":"573","messageId":"574","endLine":3,"endColumn":12},{"ruleId":"571","severity":1,"message":"631","line":8,"column":5,"nodeType":"573","messageId":"574","endLine":8,"endColumn":11},{"ruleId":"571","severity":1,"message":"632","line":9,"column":5,"nodeType":"573","messageId":"574","endLine":9,"endColumn":18},{"ruleId":"571","severity":1,"message":"633","line":10,"column":5,"nodeType":"573","messageId":"574","endLine":10,"endColumn":18},{"ruleId":"571","severity":1,"message":"634","line":11,"column":5,"nodeType":"573","messageId":"574","endLine":11,"endColumn":16},{"ruleId":"571","severity":1,"message":"635","line":27,"column":8,"nodeType":"573","messageId":"574","endLine":27,"endColumn":16},{"ruleId":"571","severity":1,"message":"636","line":28,"column":8,"nodeType":"573","messageId":"574","endLine":28,"endColumn":32},{"ruleId":"571","severity":1,"message":"637","line":29,"column":8,"nodeType":"573","messageId":"574","endLine":29,"endColumn":26},{"ruleId":"571","severity":1,"message":"638","line":30,"column":8,"nodeType":"573","messageId":"574","endLine":30,"endColumn":21},{"ruleId":"571","severity":1,"message":"639","line":33,"column":8,"nodeType":"573","messageId":"574","endLine":33,"endColumn":19},{"ruleId":"571","severity":1,"message":"640","line":34,"column":8,"nodeType":"573","messageId":"574","endLine":34,"endColumn":27},{"ruleId":"571","severity":1,"message":"641","line":35,"column":8,"nodeType":"573","messageId":"574","endLine":35,"endColumn":19},{"ruleId":"571","severity":1,"message":"642","line":36,"column":8,"nodeType":"573","messageId":"574","endLine":36,"endColumn":12},{"ruleId":"571","severity":1,"message":"643","line":37,"column":8,"nodeType":"573","messageId":"574","endLine":37,"endColumn":22},{"ruleId":"571","severity":1,"message":"644","line":38,"column":8,"nodeType":"573","messageId":"574","endLine":38,"endColumn":16},{"ruleId":"571","severity":1,"message":"645","line":39,"column":8,"nodeType":"573","messageId":"574","endLine":39,"endColumn":19},{"ruleId":"571","severity":1,"message":"646","line":40,"column":9,"nodeType":"573","messageId":"574","endLine":40,"endColumn":17},{"ruleId":"571","severity":1,"message":"647","line":41,"column":8,"nodeType":"573","messageId":"574","endLine":41,"endColumn":22},{"ruleId":"571","severity":1,"message":"648","line":42,"column":9,"nodeType":"573","messageId":"574","endLine":42,"endColumn":24},{"ruleId":"571","severity":1,"message":"649","line":43,"column":8,"nodeType":"573","messageId":"574","endLine":43,"endColumn":22},{"ruleId":"598","severity":1,"message":"599","line":134,"column":6,"nodeType":"600","endLine":134,"endColumn":8,"suggestions":"650"},{"ruleId":"571","severity":1,"message":"651","line":139,"column":11,"nodeType":"573","messageId":"574","endLine":139,"endColumn":22},{"ruleId":"571","severity":1,"message":"652","line":43,"column":21,"nodeType":"573","messageId":"574","endLine":43,"endColumn":40},{"ruleId":"571","severity":1,"message":"653","line":130,"column":12,"nodeType":"573","messageId":"574","endLine":130,"endColumn":27},{"ruleId":"571","severity":1,"message":"654","line":161,"column":13,"nodeType":"573","messageId":"574","endLine":161,"endColumn":24},{"ruleId":"655","severity":1,"message":"656","line":233,"column":62,"nodeType":"657","messageId":"658","endLine":233,"endColumn":64},{"ruleId":"655","severity":1,"message":"656","line":233,"column":74,"nodeType":"657","messageId":"658","endLine":233,"endColumn":76},{"ruleId":"655","severity":1,"message":"656","line":239,"column":57,"nodeType":"657","messageId":"658","endLine":239,"endColumn":59},{"ruleId":"655","severity":1,"message":"656","line":239,"column":68,"nodeType":"657","messageId":"658","endLine":239,"endColumn":70},{"ruleId":"655","severity":1,"message":"656","line":244,"column":56,"nodeType":"657","messageId":"658","endLine":244,"endColumn":58},{"ruleId":"655","severity":1,"message":"656","line":244,"column":68,"nodeType":"657","messageId":"658","endLine":244,"endColumn":70},{"ruleId":"655","severity":1,"message":"656","line":249,"column":55,"nodeType":"657","messageId":"658","endLine":249,"endColumn":57},{"ruleId":"655","severity":1,"message":"656","line":249,"column":66,"nodeType":"657","messageId":"658","endLine":249,"endColumn":68},{"ruleId":"655","severity":1,"message":"656","line":254,"column":55,"nodeType":"657","messageId":"658","endLine":254,"endColumn":57},{"ruleId":"655","severity":1,"message":"656","line":254,"column":67,"nodeType":"657","messageId":"658","endLine":254,"endColumn":69},{"ruleId":"655","severity":1,"message":"656","line":259,"column":56,"nodeType":"657","messageId":"658","endLine":259,"endColumn":58},{"ruleId":"655","severity":1,"message":"656","line":259,"column":67,"nodeType":"657","messageId":"658","endLine":259,"endColumn":69},{"ruleId":"655","severity":1,"message":"656","line":264,"column":56,"nodeType":"657","messageId":"658","endLine":264,"endColumn":58},{"ruleId":"655","severity":1,"message":"656","line":264,"column":68,"nodeType":"657","messageId":"658","endLine":264,"endColumn":70},{"ruleId":"655","severity":1,"message":"656","line":269,"column":56,"nodeType":"657","messageId":"658","endLine":269,"endColumn":58},{"ruleId":"655","severity":1,"message":"656","line":269,"column":67,"nodeType":"657","messageId":"658","endLine":269,"endColumn":69},{"ruleId":"655","severity":1,"message":"656","line":282,"column":55,"nodeType":"657","messageId":"658","endLine":282,"endColumn":57},{"ruleId":"655","severity":1,"message":"656","line":282,"column":67,"nodeType":"657","messageId":"658","endLine":282,"endColumn":69},{"ruleId":"655","severity":1,"message":"656","line":287,"column":56,"nodeType":"657","messageId":"658","endLine":287,"endColumn":58},{"ruleId":"655","severity":1,"message":"656","line":287,"column":68,"nodeType":"657","messageId":"658","endLine":287,"endColumn":70},{"ruleId":"655","severity":1,"message":"656","line":292,"column":57,"nodeType":"657","messageId":"658","endLine":292,"endColumn":59},{"ruleId":"655","severity":1,"message":"656","line":292,"column":68,"nodeType":"657","messageId":"658","endLine":292,"endColumn":70},{"ruleId":"655","severity":1,"message":"656","line":297,"column":56,"nodeType":"657","messageId":"658","endLine":297,"endColumn":58},{"ruleId":"655","severity":1,"message":"656","line":297,"column":68,"nodeType":"657","messageId":"658","endLine":297,"endColumn":70},{"ruleId":"655","severity":1,"message":"656","line":302,"column":57,"nodeType":"657","messageId":"658","endLine":302,"endColumn":59},{"ruleId":"655","severity":1,"message":"656","line":302,"column":68,"nodeType":"657","messageId":"658","endLine":302,"endColumn":70},{"ruleId":"655","severity":1,"message":"656","line":307,"column":55,"nodeType":"657","messageId":"658","endLine":307,"endColumn":57},{"ruleId":"655","severity":1,"message":"656","line":307,"column":66,"nodeType":"657","messageId":"658","endLine":307,"endColumn":68},{"ruleId":"655","severity":1,"message":"656","line":312,"column":57,"nodeType":"657","messageId":"658","endLine":312,"endColumn":59},{"ruleId":"655","severity":1,"message":"656","line":312,"column":69,"nodeType":"657","messageId":"658","endLine":312,"endColumn":71},{"ruleId":"655","severity":1,"message":"656","line":317,"column":56,"nodeType":"657","messageId":"658","endLine":317,"endColumn":58},{"ruleId":"655","severity":1,"message":"656","line":317,"column":68,"nodeType":"657","messageId":"658","endLine":317,"endColumn":70},{"ruleId":"659","severity":1,"message":"660","line":359,"column":27,"nodeType":"661","messageId":"662","endLine":359,"endColumn":29},{"ruleId":"598","severity":1,"message":"663","line":411,"column":10,"nodeType":"600","endLine":411,"endColumn":90,"suggestions":"664"},{"ruleId":"598","severity":1,"message":"604","line":411,"column":29,"nodeType":"605","endLine":411,"endColumn":60},{"ruleId":"598","severity":1,"message":"604","line":411,"column":62,"nodeType":"605","endLine":411,"endColumn":89},{"ruleId":"571","severity":1,"message":"665","line":5,"column":8,"nodeType":"573","messageId":"574","endLine":5,"endColumn":15},{"ruleId":"571","severity":1,"message":"596","line":9,"column":8,"nodeType":"573","messageId":"574","endLine":9,"endColumn":17},{"ruleId":"598","severity":1,"message":"614","line":60,"column":6,"nodeType":"600","endLine":60,"endColumn":24,"suggestions":"666"},{"ruleId":"571","severity":1,"message":"667","line":3,"column":21,"nodeType":"573","messageId":"574","endLine":3,"endColumn":29},{"ruleId":"571","severity":1,"message":"622","line":4,"column":20,"nodeType":"573","messageId":"574","endLine":4,"endColumn":37},{"ruleId":"571","severity":1,"message":"588","line":17,"column":11,"nodeType":"573","messageId":"574","endLine":17,"endColumn":12},{"ruleId":"571","severity":1,"message":"608","line":18,"column":9,"nodeType":"573","messageId":"574","endLine":18,"endColumn":16},{"ruleId":"571","severity":1,"message":"652","line":18,"column":9,"nodeType":"573","messageId":"574","endLine":18,"endColumn":28},{"ruleId":"571","severity":1,"message":"589","line":1,"column":16,"nodeType":"573","messageId":"574","endLine":1,"endColumn":25},{"ruleId":"571","severity":1,"message":"611","line":2,"column":9,"nodeType":"573","messageId":"574","endLine":2,"endColumn":19},{"ruleId":"571","severity":1,"message":"612","line":4,"column":9,"nodeType":"573","messageId":"574","endLine":4,"endColumn":17},{"ruleId":"571","severity":1,"message":"668","line":4,"column":19,"nodeType":"573","messageId":"574","endLine":4,"endColumn":35},{"ruleId":"571","severity":1,"message":"669","line":5,"column":9,"nodeType":"573","messageId":"574","endLine":5,"endColumn":17},{"ruleId":"571","severity":1,"message":"670","line":6,"column":8,"nodeType":"573","messageId":"574","endLine":6,"endColumn":18},{"ruleId":"571","severity":1,"message":"671","line":7,"column":8,"nodeType":"573","messageId":"574","endLine":7,"endColumn":20},{"ruleId":"571","severity":1,"message":"628","line":8,"column":8,"nodeType":"573","messageId":"574","endLine":8,"endColumn":17},{"ruleId":"571","severity":1,"message":"667","line":9,"column":8,"nodeType":"573","messageId":"574","endLine":9,"endColumn":16},{"ruleId":"571","severity":1,"message":"589","line":3,"column":16,"nodeType":"573","messageId":"574","endLine":3,"endColumn":25},{"ruleId":"571","severity":1,"message":"672","line":10,"column":10,"nodeType":"573","messageId":"574","endLine":10,"endColumn":23},{"ruleId":"571","severity":1,"message":"588","line":55,"column":11,"nodeType":"573","messageId":"574","endLine":55,"endColumn":12},{"ruleId":"598","severity":1,"message":"614","line":64,"column":6,"nodeType":"600","endLine":64,"endColumn":23,"suggestions":"673"},{"ruleId":"571","severity":1,"message":"634","line":8,"column":8,"nodeType":"573","messageId":"574","endLine":8,"endColumn":19},{"ruleId":"571","severity":1,"message":"632","line":9,"column":8,"nodeType":"573","messageId":"574","endLine":9,"endColumn":21},{"ruleId":"571","severity":1,"message":"674","line":10,"column":8,"nodeType":"573","messageId":"574","endLine":10,"endColumn":14},{"ruleId":"571","severity":1,"message":"631","line":12,"column":8,"nodeType":"573","messageId":"574","endLine":12,"endColumn":14},{"ruleId":"571","severity":1,"message":"618","line":1,"column":9,"nodeType":"573","messageId":"574","endLine":1,"endColumn":23},{"ruleId":"571","severity":1,"message":"667","line":4,"column":21,"nodeType":"573","messageId":"574","endLine":4,"endColumn":29},{"ruleId":"571","severity":1,"message":"620","line":6,"column":9,"nodeType":"573","messageId":"574","endLine":6,"endColumn":20},{"ruleId":"571","severity":1,"message":"622","line":7,"column":20,"nodeType":"573","messageId":"574","endLine":7,"endColumn":37},{"ruleId":"571","severity":1,"message":"623","line":8,"column":9,"nodeType":"573","messageId":"574","endLine":8,"endColumn":23},{"ruleId":"571","severity":1,"message":"675","line":9,"column":7,"nodeType":"573","messageId":"574","endLine":9,"endColumn":16},{"ruleId":"571","severity":1,"message":"676","line":23,"column":8,"nodeType":"573","messageId":"574","endLine":23,"endColumn":16},{"ruleId":"571","severity":1,"message":"677","line":25,"column":8,"nodeType":"573","messageId":"574","endLine":25,"endColumn":27},{"ruleId":"571","severity":1,"message":"620","line":27,"column":9,"nodeType":"573","messageId":"574","endLine":27,"endColumn":20},{"ruleId":"571","severity":1,"message":"678","line":33,"column":8,"nodeType":"573","messageId":"574","endLine":33,"endColumn":12},{"ruleId":"571","severity":1,"message":"679","line":1,"column":8,"nodeType":"573","messageId":"574","endLine":1,"endColumn":22},{"ruleId":"571","severity":1,"message":"629","line":2,"column":9,"nodeType":"573","messageId":"574","endLine":2,"endColumn":20},{"ruleId":"571","severity":1,"message":"679","line":1,"column":8,"nodeType":"573","messageId":"574","endLine":1,"endColumn":22},{"ruleId":"571","severity":1,"message":"629","line":2,"column":9,"nodeType":"573","messageId":"574","endLine":2,"endColumn":20},{"ruleId":"598","severity":1,"message":"680","line":6,"column":6,"nodeType":"600","endLine":6,"endColumn":8,"suggestions":"681"},{"ruleId":"571","severity":1,"message":"682","line":41,"column":11,"nodeType":"573","messageId":"574","endLine":41,"endColumn":22},{"ruleId":"571","severity":1,"message":"683","line":61,"column":11,"nodeType":"573","messageId":"574","endLine":61,"endColumn":33},{"ruleId":"571","severity":1,"message":"596","line":10,"column":8,"nodeType":"573","messageId":"574","endLine":10,"endColumn":17},{"ruleId":"571","severity":1,"message":"684","line":11,"column":8,"nodeType":"573","messageId":"574","endLine":11,"endColumn":24},{"ruleId":"571","severity":1,"message":"685","line":15,"column":8,"nodeType":"573","messageId":"574","endLine":15,"endColumn":18},{"ruleId":"571","severity":1,"message":"592","line":85,"column":23,"nodeType":"573","messageId":"574","endLine":85,"endColumn":28},{"ruleId":"598","severity":1,"message":"686","line":119,"column":8,"nodeType":"600","endLine":119,"endColumn":17,"suggestions":"687"},{"ruleId":"598","severity":1,"message":"688","line":121,"column":23,"nodeType":"600","endLine":121,"endColumn":39,"suggestions":"689"},{"ruleId":"571","severity":1,"message":"611","line":4,"column":9,"nodeType":"573","messageId":"574","endLine":4,"endColumn":19},{"ruleId":"571","severity":1,"message":"633","line":12,"column":32,"nodeType":"573","messageId":"574","endLine":12,"endColumn":45},{"ruleId":"571","severity":1,"message":"628","line":12,"column":60,"nodeType":"573","messageId":"574","endLine":12,"endColumn":69},{"ruleId":"571","severity":1,"message":"690","line":13,"column":8,"nodeType":"573","messageId":"574","endLine":13,"endColumn":25},{"ruleId":"571","severity":1,"message":"623","line":16,"column":9,"nodeType":"573","messageId":"574","endLine":16,"endColumn":23},{"ruleId":"598","severity":1,"message":"599","line":95,"column":8,"nodeType":"600","endLine":95,"endColumn":28,"suggestions":"691"},{"ruleId":"571","severity":1,"message":"692","line":40,"column":11,"nodeType":"573","messageId":"574","endLine":40,"endColumn":20},{"ruleId":"571","severity":1,"message":"582","line":4,"column":8,"nodeType":"573","messageId":"574","endLine":4,"endColumn":11},{"ruleId":"571","severity":1,"message":"589","line":1,"column":16,"nodeType":"573","messageId":"574","endLine":1,"endColumn":25},{"ruleId":"571","severity":1,"message":"618","line":3,"column":9,"nodeType":"573","messageId":"574","endLine":3,"endColumn":23},{"ruleId":"571","severity":1,"message":"668","line":4,"column":19,"nodeType":"573","messageId":"574","endLine":4,"endColumn":35},{"ruleId":"571","severity":1,"message":"669","line":5,"column":9,"nodeType":"573","messageId":"574","endLine":5,"endColumn":17},{"ruleId":"571","severity":1,"message":"670","line":6,"column":8,"nodeType":"573","messageId":"574","endLine":6,"endColumn":18},{"ruleId":"571","severity":1,"message":"628","line":8,"column":8,"nodeType":"573","messageId":"574","endLine":8,"endColumn":17},{"ruleId":"571","severity":1,"message":"667","line":9,"column":8,"nodeType":"573","messageId":"574","endLine":9,"endColumn":16},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["693"],"no-negated-in-lhs",["694"],"'Tooltip' is defined but never used.","'IconButton' is defined but never used.","'Brightness4Icon' is defined but never used.","'Box' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'themeCtx' is assigned a value but never used.","'t' is assigned a value but never used.","'useEffect' is defined but never used.","'useMediaQuery' is defined but never used.","'useHistory' is defined but never used.","'NEEDS' is assigned a value but never used.",["693"],["694"],"'themeContext' is defined but never used.","'ItemsList' is defined but never used.","'SearchIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.","ArrayExpression",["695"],"React Hook useEffect has missing dependencies: 'errorHandler' and 'formik.values'. Either include them or remove the dependency array.",["696"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["697"],"'CircularProgress' is defined but never used.","'classes' is assigned a value but never used.",["693"],["694"],"'makeStyles' is defined but never used.","'Checkbox' is defined but never used.","'PropTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'loading'. Either include them or remove the dependency array.",["698"],"'Schedule' is defined but never used.",["699"],"'useTranslation' is defined but never used.","'SchedulesDataService' is defined but never used.","'useSnackbar' is defined but never used.","'Scheduler' is defined but never used.","'eventFromSchedule' is defined but never used.","'confirmContext' is defined but never used.","'errorHandler' is assigned a value but never used.","'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'newGuardian'. Either include them or remove the dependency array.",["700"],"'TextField' is defined but never used.","'API_VERSION' is defined but never used.","'Grid' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'EuroIcon' is defined but never used.","'AccountBalanceWalletIcon' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'CardActions' is defined but never used.","'PaymentsDataService' is defined but never used.","'ReceiptIcon' is defined but never used.","'clsx' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Collapse' is defined but never used.","'CardContent' is defined but never used.","'Skeleton' is defined but never used.","'DirtyTextField' is defined but never used.","'payment_methods' is defined but never used.","'InputAdornment' is defined but never used.",["701"],"'getFormData' is assigned a value but never used.","'safe_email_required' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'formik.values'. Either include it or remove the dependency array.",["702"],"'Student' is defined but never used.",["703"],"'useTheme' is defined but never used.","'FormControlLabel' is defined but never used.","'allNeeds' is defined but never used.","'Typography' is defined but never used.","'createStyles' is defined but never used.","'countryToFlag' is defined but never used.",["704"],"'Button' is defined but never used.","'useStyles' is assigned a value but never used.","'SendIcon' is defined but never used.","'StudentsDataService' is defined but never used.","'Link' is defined but never used.","'serviceFactory' is defined but never used.","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["705"],"'changeTheme' is assigned a value but never used.","'handleLanguageMenuOpen' is assigned a value but never used.","'ExportSearchChip' is defined but never used.","'GetAppIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'page' and 'search'. Either include them or remove the dependency array.",["706"],"React Hook useEffect has missing dependencies: 'dataService', 'displayNameField', 'errorHandler', 'getFilters', 'parent_id', 'searchTerm', 'secondaryDisplayNameField', and 'setItems'. Either include them or remove the dependency array. If 'setItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["707"],"'DialogContentText' is defined but never used.",["708"],"'studentId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"713","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},"Update the dependencies array to be: [courseId, errorHandler]",{"range":"736","text":"737"},"Update the dependencies array to be: [courseId, errorHandler, formik.values]",{"range":"738","text":"739"},"Update the dependencies array to be: [errorHandler]",{"range":"740","text":"741"},"Update the dependencies array to be: [currentUserId, errorHandler, loading]",{"range":"742","text":"743"},"Update the dependencies array to be: [currentStudentId, errorHandler, loading]",{"range":"744","text":"745"},"Update the dependencies array to be: [errorHandler, guardianId, newGuardian]",{"range":"746","text":"747"},{"range":"748","text":"741"},"Update the dependencies array to be: [availableCourses, formik.values]",{"range":"749","text":"750"},"Update the dependencies array to be: [currentTeacherId, errorHandler, loading]",{"range":"751","text":"752"},"Update the dependencies array to be: [currentCourseId, errorHandler, loading]",{"range":"753","text":"754"},"Update the dependencies array to be: [handler]",{"range":"755","text":"756"},"Update the dependencies array to be: [filters, page, search]",{"range":"757","text":"758"},"Update the dependencies array to be: [dataService, displayNameField, errorHandler, getFilters, page, parent_id, searchBy, searchTerm, secondaryDisplayNameField, setItems]",{"range":"759","text":"760"},"Update the dependencies array to be: [errorHandler, scheduleIds, theme]",{"range":"761","text":"762"},[3098,3108],"[courseId, errorHandler]",[3992,4026],"[courseId, errorHandler, formik.values]",[4249,4251],"[errorHandler]",[1725,1740],"[currentUserId, errorHandler, loading]",[2411,2429],"[currentStudentId, errorHandler, loading]",[1523,1535],"[errorHandler, guardianId, newGuardian]",[4421,4423],[18719,18799],"[availableCourses, formik.values]",[2056,2074],"[currentTeacherId, errorHandler, loading]",[2407,2424],"[currentCourseId, errorHandler, loading]",[129,131],"[handler]",[4321,4330],"[filters, page, search]",[4365,4381],"[dataService, displayNameField, errorHandler, getFilters, page, parent_id, searchBy, searchTerm, secondaryDisplayNameField, setItems]",[3475,3495],"[errorHandler, scheduleIds, theme]"]