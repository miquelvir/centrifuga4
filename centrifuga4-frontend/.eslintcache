[{"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js":"1","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js":"2","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js":"3","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js":"4","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js":"5","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/routes.js":"6","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js":"7","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js":"8","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js":"9","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js":"10","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js":"11","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js":"12","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.component.js":"13","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js":"14","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js":"15","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js":"16","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js":"17","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js":"18","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js":"19","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js":"20","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js":"21","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js":"22","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js":"23","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js":"24","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js":"25","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js":"26","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js":"27","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js":"28","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js":"29","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js":"30","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js":"31","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js":"32","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/relations.js":"33","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js":"34","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js":"35","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js":"36","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js":"37","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js":"38","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js":"39","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js":"40","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js":"41","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js":"42","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js":"43","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js":"44","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsGrants.service.js":"45","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js":"46","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js":"47","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js":"48","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js":"49","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/empty_objects.js":"50","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.courses.component.js":"51","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js":"52","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js":"53","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js":"54","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.list.component.js":"55","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.component.js":"56","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/needs.js":"57","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/userInvites.service.js":"58","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/users.service.js":"59","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_skeletons/iconButton.js":"60","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/PreEnrollmentPage/PreEnrollmentPage.js":"61","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/pre-enrollment.service.js":"62"},{"size":1217,"mtime":1610534696698,"results":"63","hashOfConfig":"64"},{"size":708,"mtime":1610534696698,"results":"65","hashOfConfig":"64"},{"size":189,"mtime":1610534696698,"results":"66","hashOfConfig":"64"},{"size":7350,"mtime":1610534696698,"results":"67","hashOfConfig":"64"},{"size":11026,"mtime":1610534696698,"results":"68","hashOfConfig":"64"},{"size":1983,"mtime":1610534696698,"results":"69","hashOfConfig":"64"},{"size":865,"mtime":1610411554056,"results":"70","hashOfConfig":"64"},{"size":136,"mtime":1610534696698,"results":"71","hashOfConfig":"64"},{"size":1554,"mtime":1610534696698,"results":"72","hashOfConfig":"64"},{"size":2530,"mtime":1610396706700,"results":"73","hashOfConfig":"64"},{"size":10550,"mtime":1610578140115,"results":"74","hashOfConfig":"64"},{"size":102,"mtime":1610534696698,"results":"75","hashOfConfig":"64"},{"size":4495,"mtime":1610539006981,"results":"76","hashOfConfig":"64"},{"size":102,"mtime":1610534696698,"results":"77","hashOfConfig":"64"},{"size":1410,"mtime":1610534696698,"results":"78","hashOfConfig":"64"},{"size":13541,"mtime":1610541011827,"results":"79","hashOfConfig":"64"},{"size":13641,"mtime":1610538697377,"results":"80","hashOfConfig":"64"},{"size":7811,"mtime":1610539006993,"results":"81","hashOfConfig":"64"},{"size":5164,"mtime":1610539007001,"results":"82","hashOfConfig":"64"},{"size":13913,"mtime":1610541417434,"results":"83","hashOfConfig":"64"},{"size":3475,"mtime":1610710736373,"results":"84","hashOfConfig":"64"},{"size":1291,"mtime":1610013084917,"results":"85","hashOfConfig":"64"},{"size":190,"mtime":1610534696698,"results":"86","hashOfConfig":"64"},{"size":1167,"mtime":1609272998086,"results":"87","hashOfConfig":"64"},{"size":1288,"mtime":1610538516531,"results":"88","hashOfConfig":"64"},{"size":11240,"mtime":1610378323363,"results":"89","hashOfConfig":"64"},{"size":2140,"mtime":1610730562990,"results":"90","hashOfConfig":"64"},{"size":6619,"mtime":1610578389581,"results":"91","hashOfConfig":"64"},{"size":6383,"mtime":1610534696698,"results":"92","hashOfConfig":"64"},{"size":174,"mtime":1610534696698,"results":"93","hashOfConfig":"64"},{"size":123,"mtime":1610534696698,"results":"94","hashOfConfig":"64"},{"size":1696,"mtime":1610705518185,"results":"95","hashOfConfig":"64"},{"size":200,"mtime":1610534696698,"results":"96","hashOfConfig":"64"},{"size":6690,"mtime":1610452680262,"results":"97","hashOfConfig":"64"},{"size":1191,"mtime":1610013084917,"results":"98","hashOfConfig":"64"},{"size":1397,"mtime":1610534696698,"results":"99","hashOfConfig":"64"},{"size":103,"mtime":1610534696698,"results":"100","hashOfConfig":"64"},{"size":442,"mtime":1610187820379,"results":"101","hashOfConfig":"64"},{"size":12021,"mtime":1610539007013,"results":"102","hashOfConfig":"64"},{"size":890,"mtime":1610534696698,"results":"103","hashOfConfig":"64"},{"size":362,"mtime":1608812823740,"results":"104","hashOfConfig":"64"},{"size":894,"mtime":1610534696698,"results":"105","hashOfConfig":"64"},{"size":96,"mtime":1610534696698,"results":"106","hashOfConfig":"64"},{"size":293,"mtime":1610013084913,"results":"107","hashOfConfig":"64"},{"size":884,"mtime":1610534696698,"results":"108","hashOfConfig":"64"},{"size":7799,"mtime":1610534696698,"results":"109","hashOfConfig":"64"},{"size":91,"mtime":1610534696698,"results":"110","hashOfConfig":"64"},{"size":8095,"mtime":1610539007005,"results":"111","hashOfConfig":"64"},{"size":103,"mtime":1610534696698,"results":"112","hashOfConfig":"64"},{"size":843,"mtime":1610381732416,"results":"113","hashOfConfig":"64"},{"size":8844,"mtime":1610740456379,"results":"114","hashOfConfig":"64"},{"size":101,"mtime":1610534696698,"results":"115","hashOfConfig":"64"},{"size":113,"mtime":1610534696698,"results":"116","hashOfConfig":"64"},{"size":115,"mtime":1610534696698,"results":"117","hashOfConfig":"64"},{"size":5293,"mtime":1610578230878,"results":"118","hashOfConfig":"64"},{"size":5646,"mtime":1610539094032,"results":"119","hashOfConfig":"64"},{"size":1208,"mtime":1610483170623,"results":"120","hashOfConfig":"64"},{"size":681,"mtime":1610485187600,"results":"121","hashOfConfig":"64"},{"size":99,"mtime":1610534696698,"results":"122","hashOfConfig":"64"},{"size":368,"mtime":1610537113987,"results":"123","hashOfConfig":"64"},{"size":46715,"mtime":1611229156497,"results":"124","hashOfConfig":"64"},{"size":1526,"mtime":1611227706255,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1d3a0qb",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"131"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"131"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"131"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"213"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"131"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"131"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"172"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"131"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js",[],["276","277"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js",[],["278","279"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js",[],["280","281"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/routes.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js",["282"],"import { useEffect } from \"react\";\n\nexport const useOnMount = handler => {\n  return useEffect(() => {\n    return handler();\n  }, []);\n};","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.component.js",["283","284"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport PaymentCard from \"./students.student.payments.payment.component\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\n\nconst getDefaultValues = () => {\n    const date = new Date();\n    const dd = date.getDate();\n    const mm = date.getMonth() + 1; //Month from 0 to 11\n    const yyyy = date.getFullYear();\n    return {'id': null, 'date': `${yyyy}-${mm<=9 ? '0' + mm : mm}-${dd <= 9 ? '0' + dd : dd}`, 'quantity': null, 'concept': null, 'method': null}\n}\nconst useStyles = makeStyles((theme) => ({\n\n  actionIcon: {\n    float: 'right'\n  },\n  newLine: {\n    width: '100%',\n       marginTop: theme.spacing(1),\n        display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\n\nfunction Payments({ children, value, index, title, paymentIds, deletePaymentFromStudent, addPaymentId, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const loading = paymentIds === null;\n\n  const [payments, setPayments] = useState([]);\n  const [newPaymentCard, setNewPaymentCard] = useState(false);\n\n  useEffect(()=>{\n    setNewPaymentCard(false);\n  }, [payments])\n\n  const updatePayment = (id, body) => {\n    setPayments(payments.map(payment => {\n      if (payment.id !== id) return payment;\n      return body;\n    }))\n  }\n\n  const deletePayment = (id) => {\n    PaymentsDataService.delete(id)\n        .then(...errorHandler({snackbarSuccess:true}))\n        .then(function (r) {\n             deletePaymentFromStudent(id);\n        });\n  }\n\n  useEffect(() => {\n    if (paymentIds === null) return;\n\n    if (paymentIds.length === 0){\n      setPayments([]);\n    } else {\n      PaymentsDataService\n            .getMany(paymentIds)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setPayments(res.map(res => res[\"data\"]).sort((p1, p2) => p1.date.localeCompare(p2.date)));\n                });\n    }\n  }, [paymentIds])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>  {// todo simplify everywhere\n        } <Box px={2}>\n\n              {loading?\n                  <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n              <Tooltip className={classes.actionIcon} title={t(\"new_payment\")} aria-label={t(\"new_payment\")}>\n                <IconButton onClick={(e) => { setNewPaymentCard(true); }}>\n                  <AddCircleIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <div className={classes.newLine}>\n\n              {\n                payments && payments.map(payment =>\n                    (<PaymentCard payment={payment} key={payment['id']} updatePayment={updatePayment} deletePayment={deletePayment}/>)\n                )\n              }\n\n              {newPaymentCard &&\n                <PaymentCard payment={getDefaultValues()}\n                             updatePayment={updatePayment}\n                             deletePayment={(_) => {setNewPaymentCard(false)}}\n                            newPayment={true}\n                             student_id={student_id}\n                addPaymentId={addPaymentId}/>\n              }\n\n              {loading &&\n                <Skeleton width=\"100%\" height=\"250px\"/>  // todo we can do better\n              }\n\n              {!loading && payments.length === 0 && !newPaymentCard &&\n                <Typography>{t(\"no_payments\")}</Typography>\n              }\n              </div>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nPayments.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Payments;",["285","286"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js",[],["287","288"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js",["289","290","291","292","293"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport * as yup from 'yup';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\"\nimport Person from \"./students.student.person.component\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport {sendEnrollmentEmail} from \"../_services/emailsEnrollment.service\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {sendGrantEmail} from \"../_services/emailsGrants.service\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {payment_methods} from \"../_data/payment_methods\";\nimport {emptyAttendee, emptyGuardian} from \"../_data/empty_objects\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: {\n    float: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction Attendee({ children, addStudentId, value, index, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\n  const { t } = useTranslation();\n  const loading = currentStudent === null;\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = React.useState(false);\n  const deleteFullStudent = () => {\n    StudentsDataService\n              .delete(currentStudent['id'])\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                PaymentsDataService\n                      .deleteMany(currentStudent['payments'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n                GuardiansDataService\n                      .deleteMany(currentStudent['guardians'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n\n                // todo schedules, courses\n\n\n                deleteStudent(currentStudent['id']);\n              });\n  }\n  const sendGrantLetter = () => {\n      sendGrantEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}));\n  }\n  const sendEnrollmentAgreement = () => {\n      sendEnrollmentEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}));\n  }\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      <Dialog\n        open={openConfirmDeleteDialog}\n        onClose={(e) => {setOpenConfirmDeleteDialog(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t(\"delete_student_question\")}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{t(\"student_also_deletes\")}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button onClick={(e) => {\n            deleteFullStudent(currentStudent['id']);\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\" autoFocus>\n            {t(\"delete_student\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {value === index && (\n        <Box p={3}>\n            <Box px={2}>\n              {loading?\n                  !newStudent && <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n              !newStudent && <Tooltip style={{float: 'right'}} title={t(\"new_guardian\")} aria-label={t(\"new_guardian\")}>\n                <IconButton onClick={(e) => {\n                  addNewGuardian();\n                }}>\n                  <PersonAddIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n\n              {loading ?\n                  !newStudent && <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n               !newStudent && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\n                <IconButton onClick={(e) => {\n                  setOpenConfirmDeleteDialog(true);\n                }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <Person\n                      currentPerson={newStudent? emptyAttendee: currentStudent}\n                      newPerson={newStudent}\n                      updateCurrentStudent={(x) => {\n                        if (!newStudent) return updateCurrentStudent(x);\n                        addStudentId(x);\n                      }}\n                      patchService={patchService}\n                      onUpdate={(changedBody) => {\n                        if (\"status\" in changedBody && changedBody[\"status\"] === \"enrolled\"){\n                          // sendGrantLetter(); todo ask\n                        }\n                      }}\n                      additionalValidation={{\n                        enrollment_status: yup.string().required(t(\"status_required\")),\n                        image_agreement: yup.boolean().required(t(\"image_required\")),\n                        birth_date: yup.date().required(t(\"birthdate_required\"))\n                      }}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"price_term\")}\n                                style={{flex: 1}}\n                                name=\"price_term\"\n                                type=\"number\"\n                                InputProps={{endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,}}\n                            />,\n                            <DirtyTextField\n                                label={t(\"default_payment_method\")}\n                                style={{flex: 1}}\n                                name=\"default_payment_method\"\n                                select>\n                                { payment_methods.map(\n                                                    (method) => (\n                                                        <MenuItem key={method} value={method}>{t(method)}</MenuItem>\n                                                    )\n                                                )\n                                                }\n                            </DirtyTextField>],\n                            <DirtyTextField\n                                label={t(\"payment_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"payment_comments\"\n                            />,\n                            [<DirtyTextField\n                                label={t(\"birthdate\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                name=\"birth_date\"\n                                InputLabelProps={{shrink: true}}/>,\n                            <DirtyTextField\n                              label={t(\"years_in_xamfra\")}\n                              type=\"number\"\n                              style={{flex: 1}}\n                              name=\"years_in_xamfra\"/>],\n                          [\n                              <DirtyTextField\n                                label={t(\"status\")}\n                                style={{flex: 1}}\n                                name=\"enrollment_status\"\n                                select>\n                                {['enrolled', 'early-unenrolled', 'pre-enrolled'].map((s) => (\n                                    <MenuItem key={s} value={s}>{t(s)}</MenuItem>\n                                ))}\n                            </DirtyTextField>,\n                              <DirtyTextField\n                                label={t(\"image_agreement\")}\n                                style={{flex: 1}}\n                                name=\"image_agreement\"\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                          ],\n                        <DirtyTextField\n                                label={t(\"other_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"other_comments\"\n                            />]}\n              >\n\n              </Person>\n\n              {!loading && !newStudent && <Box my={3}>\n            <Divider />\n            </Box>}\n\n              <Box className={[classes.line, classes.composite]}>\n                {!loading && !newStudent &&\n                <Tooltip style={{flex: 1}} title={t(\"send_grant_letter\")} aria-label={t(\"send_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<SendIcon/>}\n                      onClick={(e) => {\n                        sendGrantLetter();\n                      }}\n                  >\n                    {t(\"grant_letter\")}\n                  </Button>\n                </Tooltip>}\n\n                {!loading && !newStudent &&\n                <Tooltip style={{flex: 1}} title={t(\"export_grant_letter\")} aria-label={t(\"export_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                        StudentsDataService\n                            .downloadSubresource(currentStudent[\"id\"], 'grantLetter')\n                            .then(...errorHandler({snackbarSuccess: true}))\n                            .then(() => null)\n                      }}\n                  >\n                    {t(\"grant_letter\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n\n              <Box className={[classes.line, classes.composite]}>\n                {!loading && !newStudent && <Tooltip style={{flex: 1}} title={t(\"send_enrollment_agreement\")}\n                                                     aria-label={t(\"enrollment_agreement\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<SendIcon/>}\n                      onClick={(e) => {\n                        sendEnrollmentAgreement();\n                      }}\n                  >\n                    {t(\"enrollment_agreement\")}\n                  </Button>\n                </Tooltip>}\n\n                {!loading && !newStudent && <Tooltip style={{flex: 1}} title={t(\"export_enrollment_agreement\")}\n                                                     aria-label={t(\"export_enrollment_agreement\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                        StudentsDataService\n                            .downloadSubresource(currentStudent[\"id\"], 'enrollmentAgreement')\n                            .then(...errorHandler({snackbarSuccess: true}))\n                            .then(() => null)\n                      }}\n                  >\n                    {t(\"enrollment_agreement\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nAttendee.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Attendee;",["294","295"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js",["296"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\nimport Guardian from \"./students.student.guardian.component\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Payments from \"./students.student.payments.component\";\nimport Courses from \"./students.student.courses.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport Schedule from \"./students.student.schedule.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    minHeight: 200,\n  }\n}));\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\n\nexport default function Student(props) {\n  const currentStudentId = props.currentStudentId;\n  const deleteStudent = props.deleteStudent;\n  const newStudent = props.newStudent;\n  const addStudentId = props.addStudentId;\n  const loading = currentStudentId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [student, setStudent] = useState(null);  // todo rename to student\n  const [newGuardian, setNewGuardian] = useState(false);\n\n\n\n  useEffect(() => {\n    if (loading) return setStudent(null);\n    StudentsDataService\n            .getOne(currentStudentId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setStudent(res[\"data\"]);\n                });\n  }, [currentStudentId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentStudentId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n\n\n  const guardians = student === null? []: student.guardians;\n    // todo maybe tabs with or only with icons\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"auto\"\n                  aria-label=\"full width tabs example\"\n                >\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\n\n                    { !newStudent &&\n                  <Tab label={t(\"schedule\")} {...a11yProps(1)} />}\n                 { !newStudent && <Tab label={t(\"payments\")} {...a11yProps(2)} />}\n                 { !newStudent && <Tab label={t(\"courses\")} {...a11yProps(3)} />}\n\n                  {\n                  (!newStudent && guardians) && guardians.map((contact, index) => (\n                  <Tab key={t(\"contact\") + \" \" + (index+1)} label={t(\"contact\") + \" \" + (index+1)} {...a11yProps(index+4)} />\n                      ))}\n\n\n                  {\n                    (!newStudent && newGuardian) &&\n                        <Tab key={t(\"new_guardian\")} label={t(\"new_guardian\")} {...a11yProps(4+guardians.length)} />\n                  }\n\n\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <Attendee value={value}\n                      index={0}\n                      dir={theme.direction}\n                      newStudent={newStudent}\n                      title={t(\"attendee\")}\n                      currentStudent={student}\n                      addStudentId={addStudentId}\n                      patchService={StudentsDataService}\n                      updateCurrentStudent={setStudent}\n                      deleteStudent={deleteStudent}\n                      addNewGuardian={() => {\n                        setNewGuardian(true);\n                        setValue(4+guardians.length);\n                      }}\n            />\n\n            <Schedule value={value}\n                      index={1}\n                      dir={theme.direction}\n                      title={t(\"attendee\")}\n                      scheduleIds={student === null? null: student['schedules']}\n                      student_id={currentStudentId}\n            />\n            <Payments value={value}\n                      index={2}\n                      paymentIds={student === null? null: student.payments}\n                      addPaymentId={(payment_id) => {\n                        setStudent({...student, payments: [...student.payments, payment_id]})\n                      }}\n                      student_id={currentStudentId}\n                      deletePaymentFromStudent={(payment_id) => {\n                        setStudent({...student,\n                            payments: student.payments.filter((p) => p !== payment_id)});\n                      }}\n            />\n\n            <Courses value={value}\n                      index={3}\n                     history={props.history}\n                      courseIds={student === null? null: student['courses']}\n                      addCourseId={(course_id) => {\n                        setStudent({...student,\n                            courses: [...student['courses'], course_id]})\n                      }}\n                      student_id={currentStudentId}\n                      deleteCourseFromStudent={(course_id) => {\n                        setStudent({...student,\n                            courses: student['courses'].filter((c) => c !== course_id)});\n                      }}\n            />\n\n\n            {\n              guardians && guardians.map((guardian, index) => (\n                  <Guardian value={value}\n                            index={index+4}\n                            key={guardian}\n                            dir={theme.direction}\n                            guardianId={guardian}\n                            deleteGuardianId={(id) => {\n                              setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                              setValue(0);\n                            }}\n            />\n                  ))}\n\n                  <Guardian value={value}\n                        index={4+guardians.length}\n                        dir={theme.direction}\n                        newGuardian={true}\n                        deleteNewGuardian={() => {\n                            setNewGuardian(false);\n                            setValue(0);\n                        }}\n                            studentId={currentStudentId}\n                        addGuardianId={(id) => {\n                            setNewGuardian(false);\n                            setStudent({...student, guardians: [...student.guardians, id]});\n                            setValue(4+guardians.length);\n                        }\n                        }\n                        deleteGuardianId={(id) => {\n                            setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                            setValue(0);\n                        }}\n              />\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n",["297","298"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js",["299","300"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {MenuItem} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport StudentGuardianDataService from \"../_services/student_guardians.service\"\nimport {student_guardian_relations} from \"../_data/relations\"\nimport Person from \"./students.student.person.component\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport * as yup from \"yup\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {emptyGuardian} from \"../_data/empty_objects\";\n\nfunction Guardian({ value, index, studentId, title, guardianId, deleteGuardianId, addGuardianId, deleteNewGuardian, newGuardian=false, ...other }) {\n  const { t } = useTranslation();\n  const errorHandler = useErrorHandler();\n\n  const [guardian, setGuardian] = useState(null);\n\n  const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = React.useState(false);\n\n  useEffect(() => {\n    if (newGuardian) return;\n\n    GuardiansDataService\n            .getOne(guardianId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setGuardian(res[\"data\"]);\n\n                });\n  }, [guardianId])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n        <Dialog\n        open={openConfirmDeleteDialog}\n        onClose={(e) => {setOpenConfirmDeleteDialog(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t(\"delete_guardian_question\")}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{t(\"action_cant_undone\")}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button onClick={(e) => {\n            GuardiansDataService\n              .delete(guardianId)\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                      deleteGuardianId(guardianId);\n                  });\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\" autoFocus>\n            {t(\"delete_guardian\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {value === index && (\n        <Box p={3}>\n            <Box px={2}>\n\n\n          <IconButton style={{float: 'right'}}  onClick={(e) => {\n            if (!newGuardian) return setOpenConfirmDeleteDialog(true);\n            deleteNewGuardian();\n          }}>\n            <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\n            <DeleteIcon />\n             </Tooltip>\n          </IconButton>\n\n\n              <Person currentPerson={newGuardian? emptyGuardian: guardian}\n                      studentId={studentId}\n                      newPerson={newGuardian}\n                      updateCurrentStudent={(x) => {\n                        if (!newGuardian) return setGuardian(x);\n                        StudentGuardianDataService.postWithId(studentId, x)\n                          .then(...errorHandler({snackbarSuccess: true}))\n                          .then(() => {\n                          addGuardianId(x);\n                        });\n                      }}\n                      patchService={GuardiansDataService}\n                      additionalValidation={{\n                        relation: yup.string().required(t(\"relation_required\"))}}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"relation\")}\n                                style={{flex: 1}}\n                                name=\"relation\"\n                                select\n                            >\n                          {student_guardian_relations.map((r) => (\n                                   <MenuItem key={r} value={r}>{t(r)}</MenuItem>\n                                ))}\n                                ))}\n\n                        </DirtyTextField>]]}\n              />\n\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nGuardian.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Guardian;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js",["301"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {MenuItem} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport * as yup from 'yup';\nimport DirtyCountrySelect from \"./contry-select.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useNormik} from \"../_helpers/normik\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport {education_years} from \"../_data/education\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    },\n    actionIcon: {\n        float: 'right'\n    }\n}));\n\nfunction Person(props) {\n    const currentPerson = props.currentPerson;\n    const dataService = props.patchService;\n    const newPerson = props.newPerson;\n    const updateCurrentPerson = props.updateCurrentStudent;\n    const additionalFields = props.additionalFields;\n    const additionalValidation = props.additionalValidation === undefined? {}: props.additionalValidation;\n    const studentId = props.studentId;\n    const onUpdate = props.onUpdate;\n    const loading = currentPerson === null;\n\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const errorHandler = useErrorHandler();\n    let initialValues = loading ? {} : currentPerson;\n\n\n    const formik = useNormik(!newPerson, {\n        initialValues: initialValues,\n        validationSchema: yup.object({...{\n            email: yup.string().email(t(\"invalid_email\")),  // todo\n            name: yup.string().required(t(\"name_required\")),\n            is_studying: yup.boolean().required(t(\"studying_required\")),\n            is_working: yup.boolean().required(t(\"working_required\")),\n            career: yup.string().when('is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"career_required\"))\n                                                }),\n            education_entity: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_entity_required\"))\n                                                }),\n            education_year: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_year_required\"))\n                                                })\n        }, ...additionalValidation}),\n        enableReinitialize: true,\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\n            if (newPerson) {\n                setStatus();\n                dataService.post({...changedValues})\n                    .then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (new_id) {\n                        updateCurrentPerson(new_id['id']);\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                    setStatus(true);\n                    }).finally(() => {\n                    setSubmitting(false);\n                });\n            } else {\n                if (Object.keys(changedValues).length > 0) {\n                setStatus();\n                dataService.patch({\n                    id: initialValues[\"id\"],\n                    body: changedValues,\n                    initial_values: initialValues\n                }).then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (patched_body) {\n                        formik.resetForm(patched_body);\n                        updateCurrentPerson(patched_body);\n\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                        setStatus(true);\n                    }).finally(() => {\n                        setSubmitting(false);\n                    });\n\n\n            } else {\n                setSubmitting(false);\n            }\n            }\n        }\n    });\n\n    function recursiveForm(elements) {\n        if (elements === undefined) return null;\n\n        return <div>\n            <Box my={3}>\n            <Divider />\n            </Box>\n            {\n            elements.map((res, idx) => (\n                <Box key={idx} className={`${classes.line} ${classes.composite}`}>\n                    {res instanceof Array ?\n                        res.map((r, idx2) => (\n                            React.cloneElement(r, {formik: formik, key: idx+\"-\"+idx2})\n                        ))\n                        : React.cloneElement(res, {formik: formik})}\n                </Box>))\n        }\n        </div>;\n    }\n\n\n    return (\n        <Box>\n            {loading?\n                (\n\n                    <Box>\n                         <IconButtonSkeleton className={classes.actionIcon}/>\n                       <IconButtonSkeleton className={classes.actionIcon}/>\n\n\n                            <div style={{clear: 'both'}}>\n                               {   [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map((value, idx) => {\n                                return (\n                                    <Box key={idx} py={0} >\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\n                                    </Box>);\n                            })}\n                            </div>\n                    </Box>\n                )\n                :\n                (\n                    <form onSubmit={formik.handleSubmit}>\n\n\n                        <IconButton className={classes.actionIcon}\n                                     onClick={formik.handleReset}\n                                     disabled={!formik.dirty || formik.isSubmitting}>\n                            <Tooltip title={t(\"reset\")} aria-label={t(\"reset\")}>\n                                <RestoreIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <IconButton className={classes.actionIcon} type=\"submit\"\n                                    disabled={!newPerson && (!formik.dirty || formik.isSubmitting)}>\n                            <Tooltip title={t(\"save\")} aria-label={t(\"save\")}>\n                                <SaveIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <DirtyTextField\n                            label={t(\"id\")}\n                            name=\"id\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                        />\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"address\")}\n                                formik={formik}\n                                style={{flex: 4}}\n                                name=\"address\"\n                            />\n                            <DirtyTextField\n                                label={t(\"city\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"city\"\n                            />\n                            <DirtyTextField\n                                label={t(\"zip\")}\n                                formik={formik}\n                                type=\"number\"\n                                style={{flex: 1}}\n                                name=\"zip\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"dni\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"dni\"\n                            />\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"phone\"\n                            />\n\n\n\n                        </Box>\n\n\n\n                        <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyCountrySelect\n                                formik={formik}\n                                style={{flex: 1}}\n                                name={\"country_of_origin\"}\n                                label={t(\"country_of_origin\")}\n                            />\n<DirtyTextField\n                                label={t(\"gender\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"gender\"\n                                select>\n                                <MenuItem value=\"m\">{t(\"male\")}</MenuItem>\n                                <MenuItem value=\"f\">{t(\"female\")}</MenuItem>\n                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\n                            </DirtyTextField>\n                        </Box>\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name=\"is_studying\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"education_entity\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"education_entity\"\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                name=\"education_year\"\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name=\"is_working\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                name=\"career\"\n                            />\n                        </Box>\n\n                        {recursiveForm(additionalFields)}\n\n                    </form>\n                )\n\n            }\n        </Box>\n    );\n}\n\n\nexport default Person;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js",["302","303"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {countries} from \"../_data/countries\";\nimport TextField from \"@material-ui/core/TextField\";\nimport createStyles from \"@material-ui/styles/createStyles\";\nimport DirtyTextField from \"./dirtytextfield.component\";\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\nconst useStyles = makeStyles(theme => (createStyles({\n  textField: dirty => ({\n    '& label.Mui-focused':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},  // todo color to theme\n    '& .MuiInput-underline:after': {borderBottomColor: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},\n      '& label':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\n      '& fieldset': {borderColor: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\n  }\n  ),\n    option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },})));\n\nexport default function DirtyCountrySelect({formik, noDirty, name, label, ...textFieldProps}) {\n  const getInitialOption = (code) => {\n      if (code === undefined) return countries.find(x=>x.code==='');\n      return countries.find(x=>x.code===code);\n  }\n\n  const [option, _setOption] = React.useState(getInitialOption(formik.values[name]));\n\n  React.useEffect(() => {\n    _setOption(getInitialOption(formik.values[name]));\n  }, [formik.values, name]);\n\n  const setOption = (option) => {\n      const newOption = (option !== null)? option.code: '';\n      formik.setFieldValue(name, newOption);\n      _setOption(option);\n  }\n\n  const dirty = noDirty === true? false: formik.values[name] !== formik.initialValues[name];\n  const classes = useStyles(dirty);\n\n  const [inputValue, setInputValue] = React.useState('');\n\n  const { t } = useTranslation();\n\n  return (\n    <Autocomplete\n      style={{ width: 300 }}\n      options={countries}\n      classes={{\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={(option) => option.label }\n      getOptionSelected={(o) => o.code === option.code}\n      value={option}\n        onChange={(event, newValue) => {\n          setOption(newValue);\n        }}\n        inputValue={inputValue}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        name={name}\n      onBlur={formik.handleBlur}\n      renderOption={(option) => (\n        <React.Fragment key={option.code}>\n          <span>{countryToFlag(option.code)}</span>\n          {option.label} ({option.code}) +{option.phone}\n        </React.Fragment>\n      )}\n\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={label}\n          noDirty={noDirty}\n          className={classes.textField}\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n          error={formik.status  || formik.errors[name] !== undefined}\n        helperText={formik.touched[name] && formik.errors[name]}\n        />\n      )}\n    />\n  );\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js",[],["304","305"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/relations.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js",[],["306","307"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js",["308","309"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendReceiptEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/paymentReceipt/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js",["310","311"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendEnrollmentEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/enrollmentEmail/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n",["312","313"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsGrants.service.js",["314","315"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendGrantEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/grantEmail/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js",["316","317"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport React, {useEffect, useState} from \"react\";\nimport SchedulesDataService from \"../_services/schedules.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport styled from \"@emotion/styled\";\nimport { useTheme } from '@material-ui/core/styles';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport {useSnackbar} from \"notistack\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n    calendar: {\n      margin: theme.spacing(2)\n    }\n\n}));\n\n\nfunction Schedule({ value, index, title, scheduleIds, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n  const errorHandler = useErrorHandler();\n    const theme = useTheme();\n   const StyleWrapper = styled.div`\n      .fc-button, .fc-button.fc-button-primary {\n        background: ${theme.palette.primary.main};\n        color: ${theme.palette.primary.contrastText};\n        border-color: ${theme.palette.primary.main};\n        background-image: none;\n    }\n    .fc-button:enabled:hover {\n        background: ${theme.palette.primary.dark};\n        color: ${theme.palette.primary.contrastText};\n        border-color: ${theme.palette.primary.dark};\n        background-image: none;\n    }\n    `\n\n    const [schedules, setSchedules] = useState(null);\n   const loading = scheduleIds === null;\n\n   const eventFromSchedule = (schedule) => {\n       return {\n            daysOfWeek: [schedule['day_week']],\n            title: schedule['course']['name'],\n            groupId: [schedule['id']],\n            startTime: schedule['start_time'],\n            endTime: schedule['end_time'],\n            color: schedule[\"is_base\"]? theme.palette.secondary.main: theme.palette.secondary.light,\n            textColor: schedule[\"is_base\"]? theme.palette.secondary.contrastText: theme.palette.secondary.contrastText,\n            extendedProps: {\n                schedule: schedule\n            },\n        }\n   }\n\n   useEffect(() => {\n    if (scheduleIds === null) return;\n\n    if (scheduleIds.length === 0){\n      setSchedules([]);\n    } else {\n      SchedulesDataService\n            .getMany(scheduleIds)\n            .then(...errorHandler({}))\n            .then(function (res) {\n                    setSchedules(res.map(res => res[\"data\"]).map(schedule => {\n                        return eventFromSchedule(schedule);\n                    }));\n                });\n    }\n  }, [scheduleIds, theme]);\n\n   const eventChanged = (info) => {\n       const schedule = info.event.extendedProps[\"schedule\"];\n       const newEvent = info.event;\n       let body = {};\n        body['day_week'] = newEvent['start'].getDay();\n        body['start_time'] = newEvent['start'].toLocaleTimeString('en-US', { hour12: false });\n        body['end_time'] = newEvent['end'].toLocaleTimeString('en-US', { hour12: false });\n\n        if (schedule[\"is_base\"] === true) {\n            body['course_id'] = schedule['course_id'];\n            body['student_id'] = student_id;\n            body['is_base'] = false;\n            SchedulesDataService\n                    .post(body)\n                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                    .then(function (res) {\n                        let calendarApi = info.view.calendar;\n                        newEvent['is_base'] = true;\n                        calendarApi.addEvent(eventFromSchedule(res));\n                        info.revert();\n                    }).catch(function(err){\n                        info.revert();\n            });\n\n        } else {\n            SchedulesDataService\n                    .patch({id: schedule['id'],\n                                                body: body,\n                                                initial_values: schedule})\n                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                    .then(function (res) {\n                        /*setSchedules(schedules.map(payment => {\n                          if (payment.id !== res['id']) return payment;\n                          return res;\n                        }))*/\n                    }).catch(function (err){\n                        info.revert();\n                    });\n        }\n    }\n  return (\n    <div\n      role=\"tabpanel\"\n      className={classes.root}\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\n\n    >{// todo fix height\n           }\n           <Box p={2} style={{height: \"100%\"}}>\n               {loading? <Skeleton variant=\"rect\" width=\"100%\" height=\"100%\"/>\n                   :\n                   <StyleWrapper style={{height: \"100%\"}}>\n                   <FullCalendar\n                       plugins={[timeGridPlugin, interactionPlugin]}\n                       initialView=\"timeGridWeek\"\n                       height=\"100%\"\n                       firstDay={1}\n                       editable={true}\n                       selectable={true}\n                       selectMirror={true}\n                       dayMaxEvents={true}\n                       weekends={true}\n\n                       snapDuration={'00:15'}\n                       events={schedules}\n                       eventAdd={function () {\n                       }}\n                       eventChange={function (clickInfo) {\n                           // const schedule = clickInfo.event.extendedProps[\"schedule\"];\n                           // if (schedule[\"is_base\"] === true) return enqueueSnackbar(t(\"cant_remove_schedule\"), {'variant': 'warning'});\n                       }}\n                       eventRemove={function () {\n                       }}\n                       select={function (selectInfo) {\n                           let title = prompt('Please enter a new title for your event')\n                           let calendarApi = selectInfo.view.calendar\n\n                           calendarApi.unselect() // clear date selection\n\n                           if (title) {\n                               calendarApi.addEvent({\n                                   id: 24,\n                                   title,\n                                   start: selectInfo.startStr,\n                                   end: selectInfo.endStr,\n                                   allDay: selectInfo.allDay\n                               })\n                           }\n                       }}\n                       eventContent={function () {\n                       }} // custom render function\n                       eventClick={function (clickInfo) {\n                           const schedule = clickInfo.event.extendedProps[\"schedule\"];\n                           if (schedule[\"is_base\"] === true) return enqueueSnackbar(t(\"cant_remove_schedule\"), {'variant': 'warning'});\n                           if (window.confirm(t(\"sure_delete_event\"))) {\n                               SchedulesDataService\n                                   .delete(schedule['id'])\n                                   .then(...errorHandler({snackbarSuccess: true}))\n                                   .then(function (res) {\n                                       clickInfo.event.remove();\n                                   });\n\n                           }\n                       }}\n                       eventTimeFormat={{\n                           hour: '2-digit',\n                           minute: '2-digit',\n                           hour12: false\n                       }}\n                       eventResize={eventChanged}\n                       eventDrop={eventChanged}\n                   />\n               </StyleWrapper>}\n               </Box>\n    </div>\n  );\n}\n\nexport default Schedule;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/empty_objects.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.courses.component.js",["318","319"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport StudentsCourseDataService from \"../_services/student_courses.service\";\nimport CoursesDataService from \"../_services/courses.service\"\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {\n    AppBar,\n    Dialog,\n    ListItemSecondaryAction,\n    Slide\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchBar from \"./searchbar.component\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n        overflow: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: '30px'\n    },\n  newLine: {\n    width: '100%',\n       marginTop: theme.spacing(1),\n        display: \"flex\",\n    flexDirection: \"column\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  }, actionIcon: {\n      float: 'right'\n    }\n}));\n\nclass CloseIcon extends React.Component {\n    render() {\n        return null;\n    }\n}\n\nfunction Courses({ children, history, value, index, title, courseIds, deleteCourseFromStudent, addCourseId, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const loading = courseIds === null;\n\n  const [courses, setCourses] = useState([]);\n  const [allCourses, setAllCourses] = useState(null);\n  const [newCourse, setNewCourse] = useState(false);\n  const handleClose = () => {\n    setNewCourse(false);\n  };\n\n  useEffect(()=>{\n    setNewCourse(false);\n  }, [courses])\n\n\n   const [searchTerm, setSearchTerm] = useState('');\n   const [page, setPage] = useState(1);\n   const [count, setCount] = useState(0);\n\n   function search() {\n       if (loading || !newCourse) return;\n\n        CoursesDataService\n            .getAll({name: 'name', value: searchTerm}, page, ['name', 'description', 'id'])\n            .then(...errorHandler({}))\n            .then(res => {\n                setAllCourses(res[\"data\"].filter(x => !(courseIds.includes(x['id']))));\n                setCount(res[\"_pagination\"][\"totalPages\"]);\n            });\n    }\n\n    useEffect(search, [page, setAllCourses, loading, newCourse]);\n\n   const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n  const deleteStudentCourse = (id) => {\n    StudentsCourseDataService\n        .delete(student_id, id)\n        .then(...errorHandler({snackbarSuccess:true}))\n        .then(function (r) {\n             deleteCourseFromStudent(id);\n        });\n  }\n\n  useEffect(() => {\n    if (courseIds === null) return;\n\n    if (courseIds.length === 0){\n      setCourses([]);\n    } else {\n      CoursesDataService\n            .getMany(courseIds)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setCourses(res.map(res => res[\"data\"]));\n                });\n    }\n  }, [courseIds])\nconst onChangeSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    };\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>  {// todo simplify everywhere\n        } <Box px={2}>\n\n            <Dialog fullScreen open={newCourse} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar} color=\"secondary\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n                {t(\"enroll_to_course\")}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n                {t(\"cancel\")}\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.box} m={3}>\n                <SearchBar\n                    label={t(\"courses\")}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={search}\n                />\n\n                <Box my={2}>\n                    <Pagination\n                        className={classes.pagination}\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            <List className={classes.list}>\n                {allCourses && allCourses.map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button\n                                  onClick={() => {\n                                      if (window.confirm(t(\"confirm_enroll_to_course\"))){  // todo\n                                        StudentsCourseDataService\n                                            .postWithId(student_id, course['id'])\n                                            .then(...errorHandler({snackbarSuccess: true}))\n                                            .then((body) => {\n                                                addCourseId(course['id']);\n                                                handleClose();\n                                            })\n                                      }\n                                  }}>\n\n                            <ListItemText id=\"name\" primary={course['name']} secondary={course['description']}/>\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n            </Box>\n\n      </Dialog>\n\n              {loading?\n                  <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n              <Tooltip className={classes.actionIcon} title={t(\"new_payment\")} aria-label={t(\"new_payment\")}>\n                <IconButton onClick={(e) => {\n                    if (allCourses === null) {\n                        search();\n                    }\n                    setNewCourse(true);\n                }}>\n                  <AddCircleIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <div className={classes.newLine}>\n\n                  <List className={classes.list}>\n                {courses && courses.map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button onClick={(e) => {\n                            history.push('/courses?id='+course['id']);\n                        }}>\n                            <ListItemText id=\"name\" primary={course.name} secondary={course.description}/>\n                            <ListItemSecondaryAction>\n                                <IconButton onClick={(e) => {\n                                    if (window.confirm(t(\"confirm_unenroll_to_course\"))) deleteStudentCourse(course['id'])\n                                }}>\n                                  <DeleteIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n\n\n\n              {loading &&\n                <Skeleton width=\"100%\" height=\"250px\"/>  // todo we can do better\n              }\n\n              {!loading && courses.length === 0 && !newCourse &&\n                <Typography>{t(\"no_courses\")}</Typography>\n              }\n              </div>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default Courses;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js",[],["320","321"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.list.component.js",["322"],"import React, {useEffect, useState} from \"react\";\nimport UsersDataService from \"../_services/users.service\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchBar from './searchbar.component'\nimport Box from \"@material-ui/core/Box\";\nimport {useTranslation} from \"react-i18next\";\nimport {ListItemSecondaryAction} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flex: 1,\n        overflow: 'auto',\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    list: {\n        overflow: \"auto\",\n        // maxHeight: \"60vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        minHeight: '150px'\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: '30px'\n    },\n    chip: {\n        margin: theme.spacing(2)\n    },\n    avatar: {},\n    selectedAvatar: {\n        backgroundColor: theme.palette.primary.dark\n    },\n    chips: {\n        flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n    }\n}));\n\nconst UsersList = (props) => {\n    const setCurrentUserId = props.setCurrentUserId;\n    const currentUserId = props.currentUserId;\n    const users = props.users;\n    const setUsers = props.setUsers;\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const {t} = useTranslation();\n\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const errorHandler = useErrorHandler();\n\n    const classes = useStyles();\n\n    const onChangeSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    };\n\n    function search() {\n\n        UsersDataService\n            .getAll({name: 'full_name', value: searchTerm}, page, ['id', 'full_name'])\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setUsers(res[\"data\"]);\n                    setCount(res[\"_pagination\"][\"totalPages\"]);\n                });\n    }\n\n    useEffect(search, [page]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n    return (\n        <Box className={classes.root}>\n            <Box className={classes.box}>\n                <SearchBar\n                    label={t(\"users\")}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={search}\n                />\n\n                <Box my={2}>\n                    <Pagination\n                        className=\"pagination\"\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            </Box>\n            <List className={classes.list}>\n                {users && users.map((user) => (\n                    <div key={user[\"id\"]}>\n                        <ListItem key={user[\"id\"]} button\n                                  onClick={() => {\n                                      setCurrentUserId(user['id']);\n                                  }}>\n                            <ListItemAvatar>\n                                <Avatar className={user[\"id\"] === currentUserId? classes.selectedAvatar: classes.avatar}>\n                                    {user['full_name'].charAt(0).toUpperCase()}\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText id=\"name\" primary={user['full_name']}/>\n\n                                <ListItemSecondaryAction>\n                                    <Tooltip title={t(\"export\") + \" .csv\"}>\n                                    <IconButton edge=\"end\" aria-label={t(\"export\")} onClick={(e) => {\n                                        UsersDataService\n                                            .downloadOneCsv(user['id'])\n                                            .then(...errorHandler({}));\n                                    }}>\n                                        <GetAppIcon/>\n                                    </IconButton>\n                                        </Tooltip>\n                                </ListItemSecondaryAction>\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n        </Box>\n    );\n};\n\nexport default UsersList;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/needs.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/userInvites.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/users.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_skeletons/iconButton.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/PreEnrollmentPage/PreEnrollmentPage.js",["323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"import React, {useEffect, useState} from 'react';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {\n    Card, CardActions,\n    Checkbox,\n    Dialog,\n    FormControlLabel,\n    MenuItem,\n    Step,\n    StepLabel,\n    Stepper,\n    TextField\n} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {preEnrollmentService} from \"../_services/pre-enrollment.service\";\nimport {authenticationService as signupService} from \"../_services/signup.service\";\nimport {useSnackbar} from \"notistack\";\nimport i18next from \"i18next\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useOnMount} from \"../_helpers/on-mount\";\nimport { useFormikContext } from 'formik';\n\n// Then inside the component body\n\nimport {safe_password_repetition, safe_email, safe_password, safe_username} from \"../_yup/validators\";\nimport DirtyTextField from \"../_components/dirtytextfield.component\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DirtyCountrySelect from \"../_components/contry-select.component\";\nimport {education_years} from \"../_data/education\";\nimport {emptyAttendee} from \"../_data/empty_objects\";\nimport {useNormik} from \"../_helpers/normik\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {act} from \"@testing-library/react\";\nimport {student_guardian_relations} from \"../_data/relations\";\nimport SearchBar from \"../_components/searchbar.component\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport StudentsCourseDataService from \"../_services/student_courses.service\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CoursesDataService from \"../_services/courses.service\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\"\n    },\n    field: {\n        width: \"100%\",\n        margin: \"5px\"\n    },\n    cards: {\n        '& > *': {\n            margin: theme.spacing(3),\n        },\n    },\n    buttons: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    }, line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    card: {\n    minWidth: 200,\n        width: 'fit-content',\n        maxWidth: 500,\n        display: 'inline-block'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n    list: {\n        maxHeight: '30vh',\n        minHeight: '150px',\n        overflow: 'auto'\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nconst getLocalisedWeekday = (num) => {\n    let d = new Date();\n    const currentDay = d.getDay();\n    const distance = num - currentDay;\n    d.setDate(currentDay + distance);\n    return d.toLocaleString(window.navigator.language, {weekday: 'short'});\n}\n\nconst isUnderage = (birthDateString) => {\n    let today = new Date();\n    let birthDate = new Date(birthDateString);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    let m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) age--;\n    return age < 18;\n}\nconst PreEnrollmentPage = (props) => {\n    const {t} = useTranslation();\n\n    const can_pay_60 = \"Puc pagar la quota trimestral de 60€/estudiant\";\n     const can_pay_50 =   \"Puc pagar una quota trimestral de 50€/estudiant\";\n     const can_pay_40 =  \"Puc pagar una quota trimestral de 40€/estudiant\";\n\n    const classes = useStyles();\n    const selectedLan = localStorage.getItem(\"i18nextLng\") || \"cat\";\n    const switchLanguage = () => {\n        i18next.changeLanguage(selectedLan === \"eng\"? \"cat\": \"eng\").then();\n    }\n\n    const themeCtx = React.useContext(themeContext);\n    const {enqueueSnackbar} = useSnackbar();\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [availableCourses, setAvailableCourses] = React.useState([]);\n    const [filteredCourses, setFilteredCourses] = React.useState([]);\n    const [chosenCourses, setChosenCourses] = React.useState([]);\n    const [raw_economic_comments, setRawEconomicComments] = React.useState([]);\n   const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n    const [activeStep, setActiveStep] = React.useState(0);\n      const steps = [t(\"data_protection\"), t(\"student_info\"), t(\"contact_person_1\"), t(\"contact_person_2\"), t(\"courses\"), t(\"confirmation\")];\n\n    const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n      const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n      };\n\n      const handleReset = () => {\n        setActiveStep(0);\n      };\n\n      useOnMount(() => {\n         preEnrollmentService.getCourses()\n             .then(...errorHandler({}))\n             .then(courses => {\n                 console.log(\"courses...\", courses);\n                 setAvailableCourses(courses);\n                 setFilteredCourses(courses);\n             })\n      });\n\n\n      const [searchTerm, setSearchTerm] = useState('');\n\n    const errorHandler = useErrorHandler();\n    const required = t(\"required\");\n    const formik = useNormik(false,{\n        initialValues: {...emptyAttendee,\n            __person1__name: '', __person2__name: '',\n__person1__surname1: '',\n            __person1__surname2: '',\n            __person1__email: '', __person1__phone: '', __person1__relation: '',\n            __person1__is_studying: '', __person1__is_working: '', __person1__career: '',\n            __person1__education_entity: '', __person1__education_year: '',\n            __person2__surname1: '',\n            __person2__surname2: '',\n            __person2__email: '', __person2__phone: '', __person2__relation: '',\n            __person2__is_studying: '', __person2__is_working: '', __person2__career: '',\n            __person2__education_entity: '', __person2__education_year: '',\n\n\n\n        },\n        validationSchema: yup.object({  // todo translate\n            name: yup.string(required).required(required),\n            surname1: yup.string(required).required(required),\n            surname2: yup.string(required).required(required),\n            email: yup.string(required).email(t(\"invalid_email\")).when('birth_date', (other, schema) => ((other && !isUnderage(other))? schema.required(required): schema)),\n            phone: yup.string().when('birth_date', (other, schema) => ((other && !isUnderage(other))? schema.required(required): schema)),\n            address: yup.string(required).required(required),\n            city: yup.string(required).required(required),\n            zip: yup.number(required).required(required),\n            dni: yup.string(required).matches(/^[0-9]{8}[TRWAGMYFPDXBNJZSQVHLCKE]$/i , \"format de DNI invàlid\"),\n            country_of_origin: yup.string(required).notOneOf(['empty']).test(  // one of the array\n                                  'countryNonEmpty',\n                                  required,\n                                  v =>  v !== undefined\n                                ),\n            gender: yup.string(required).required(required),\n            is_studying: yup.boolean(required).required(required),\n            is_working: yup.boolean(required).required(required),\n            career: yup.string(required).when('is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            education_entity: yup.string(required).when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            education_year: yup.string(required).when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            birth_date: yup.date(required).required(required),\n            years_in_xamfra: yup.number(required).required(required),\n            __person1__name: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => {\n                                      console.log(\"*****************************\", v);\n                                      return v !== undefined && v !== \"\" || isStepSkipped(2)\n                                  }\n                                ),\n            __person1__surname1: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\"|| isStepSkipped(2)\n                                ),\n            __person1__surname2: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(2)\n                                ),\n            __person1__email: yup.string(required).email(t(\"invalid_email\")).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\"||  isStepSkipped(2)\n                                ),\n            __person1__phone: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\" || isStepSkipped(2)\n                                ),\n            __person1__relation: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\"|| isStepSkipped(2)\n                                ),\n            __person1__is_studying: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" ||  isStepSkipped(2)\n                                ),\n            __person1__is_working: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\"|| isStepSkipped(2)\n                                ),\n            __person1__career: yup.string(required).when('__person1__is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person1__education_entity: yup.string(required).when('__person1__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person1__education_year: yup.string(required).when('__person1__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person2__name: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__surname1: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__surname2: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\"|| isStepSkipped(3)\n                                ),\n            __person2__email: yup.string(required).email(t(\"invalid_email\")).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__phone: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\"|| isStepSkipped(3)\n                                ),\n            __person2__relation: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\"|| isStepSkipped(3)\n                                ),\n            __person2__is_studying: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__is_working: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__career: yup.string(required).when('__person2__is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person2__education_entity: yup.string(required).when('__person2__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person2__education_year: yup.string(required).when('__person2__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            image_agreement: yup.boolean(required)\n        }),\n        enableReinitialize: true,\n        onSubmit: (values, {setStatus, setSubmitting}) => {\n            setStatus();\n\n            let body = {};\n\n            body['image_agreement'] = values.image_agreement;\n            body['name'] = values.name;\n            body['surname1'] = values.surname1;\n            body['surname2'] = values.surname2;\n            body['email'] = values.email;\n            body['address'] = values.address;\n            body['city'] = values.city;\n            body['zip'] = values.zip;\n            body['dni'] = values.dni;\n            body['phone'] = values.phone;\n            body['country_of_origin'] = values.country_of_origin;\n            body['gender'] = values.gender;\n            body['is_studying'] = values.is_studying;\n            body['is_working'] = values.is_working;\n            body['education_entity'] = values.education_entity;\n            body['education_year'] = values.education_year;\n            body['career'] = values.career;\n            body['birth_date'] = values.birth_date;\n            body['years_in_xamfra'] = values.years_in_xamfra;\n            body['guardians'] = [];\n            [2,3].map(idx => {\n                if (!isStepSkipped(idx)){\n                    let guardian = {};\n                    const prefix = `__person${idx-1}__`;\n                    guardian['name'] = values[prefix+\"name\"];\n                    guardian['surname1'] = values[prefix+\"surname1\"];\n                    guardian['surname2'] = values[prefix+\"surname2\"];\n                    guardian['email'] = values[prefix+\"email\"];\n                    guardian['phone'] = values[prefix+\"phone\"];\n                    guardian['is_studying'] = values[prefix+\"is_studying\"];\n                    guardian['is_working'] = values[prefix+\"is_working\"];\n                    guardian['education_entity'] = values[prefix+\"education_entity\"];\n                    guardian['education_year'] = values[prefix+\"education_year\"];\n                    guardian['career'] = values[prefix+\"career\"];\n                    guardian['relation'] = values[prefix+\"relation\"];\n\n                    body['guardians'].push(guardian);\n                }\n            })\n            body['payment_comments'] = raw_economic_comments.join('. ');\n            if (raw_economic_comments.includes(can_pay_40)){\n                body['price_term'] = 40;\n            } else if (raw_economic_comments.includes(can_pay_50)){\n                body['price_term'] = 50;\n            } else if (raw_economic_comments.includes(can_pay_60)){\n                body['price_term'] = 60;\n            } else {\n                body['price_term'] = null;\n            }\n            body['other_comments'] = values['other_comments'];\n            body['courses'] = chosenCourses.map(x => x.id);\n\n            setSubmitting(false);\n\n            preEnrollmentService.postPreEnrollment(body)\n                .then(...errorHandler({snackbarSuccess: true}))\n                .then(() => {\n                    setActiveStep(steps.length);\n                })\n        }\n    });\n\n    console.log(\"fis\", formik.isSubmitting);\n\n useEffect(() => {\n          let labels = [];\n          if (!isUnderage(formik.values['birth_date']) ){\n              labels.push(\"adult\");\n          }\n          if (formik.values['is_studying']){\n              labels.push(formik.values['education_year']);\n          }\n\n          setFilteredCourses(availableCourses.filter(x => labels.some(l => x['labels'].includes(l))));\n\n      }, [availableCourses, formik.values['education_year'], formik.values['birth_date']]);\n\n\n    const isStepOptional = (step) => {\n    return step === 3 || (step === 2  && formik.values['birth_date'] !== '' && !isUnderage(formik.values['birth_date']));\n  };\n    const fieldsToValidatePerStep = [  // to have coinciding indexes with steps\n        [],\n    ['birth_date', 'name', 'surname1', 'surname2', 'address', 'city', 'zip', 'gender', 'is_studying', 'is_working', 'education_entity', 'education_year', 'career', 'years_in_xamfra', 'country_of_origin', 'phone', 'email'],\n        ['__person1__name', '__person1__surname1', '__person1__surname2', '__person1__email', '__person1__phone', '__person1__phone', '__person1__relation', '__person1__is_studying', '__person1__education_entity', '__person1__education_year', '__person1__is_working', '__person1__career'],\n        ['__person2__name', '__person2__surname1', '__person2__surname2', '__person2__email', '__person2__phone', '__person2__phone', '__person2__relation', '__person2__is_studying', '__person2__education_entity', '__person2__education_year', '__person2__is_working', '__person2__career'],\n    [], ['image_agreement']]\nconst handleNext = () => {\n        formik.setFieldTouched('');\n\n\n            let newSkipped = skipped;\n            if (isStepSkipped(activeStep)) {\n              newSkipped = new Set(newSkipped.values());\n              newSkipped.delete(activeStep);\n            }\n\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            setSkipped(newSkipped);\n\n\n\n      };\n    return (\n        <Box p={5} style={{width: '100%'}}>\n            <Box m={2} style={{textAlign: \"center\"}}>\n        <img src={\"logo_xamfra_baseline.png\"} alt=\"Logo Xamfrà\"\n             style={{height: \"85px\"}}/>\n\n              <Tooltip title={t(\"change_language\")} style={{float: 'right'}}>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={switchLanguage}\n                            aria-label={t(\"change_language\")}\n                            aria-haspopup=\"true\">\n                            <TranslateIcon/>\n                        </IconButton>\n\n                    </Tooltip>\n             </Box>\n\n                <Paper className={`${classes.paper} ${classes.root}`}>\n                   <Box p={2}> <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                      const stepProps = {};\n                      const labelProps = {};\n                      if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\">opcional</Typography>;\n                      }\n                      if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                      }\n                      return (\n                        <Step key={label} {...stepProps}>\n                          <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                      );\n                    })}\n                  </Stepper>\n                    <div>\n        {activeStep === steps.length ? (\n          <div style={{textAlign:\"center\"}}>\n            <Typography>Prematrícula completada amb èxit! | ¡Prematrícula completada con éxito! | Pre-enrolment successful!</Typography>\n          </div>\n        ) : (\n             <form onSubmit={formik.handleSubmit}>\n          <Box m={2}>\n              <div>\n                  {activeStep === 0 &&\n                  <div>\n                      <Typography>\n                          Podeu consultar el quadre horari del curs 20-21 <a target=\"_blank\" href=\"https://xamfra.net/com-participar-hi/horaris/\">aquí</a>.\n                      </Typography>\n                      <br/>\n                      <Typography variant={\"caption\"}>\nEnviar aquest formulari implica consentiment per fer ús de les dades per tal de rebre informació durant el període de preinscripció i inici de curs.\n\nLa posterior matrícula presencial al centre implica també l'ús de les dades durant tot el curs 2020-2021.\n\nLa nostra política protecció de dades es basa en que:\n\n1) El Responsable del Tractament de les teves dades personals és de Xamfrà, Centre de Música i Escena del Raval (Fundació l'ARC Música)\n2) Les finalitats del tractament de les dades personals és la de gestionar la teva vinculació amb Xamfrà. La base de dades disposa de noms, telèfons, adreça postal i adreça electrònica.\n3) Les teves dades no seran comunicades a tercers sense previ consentiment.\n4) Pots exercir els drets d'accés, rectificació i oposició segons preveu a la normativa.\n            </Typography>\n\n                  </div>\n                  }\n\n\n\n\n\n                  {activeStep === 1 &&\n                  <div>\n<Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                                noDirty={true}\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                noDirty={true}\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"address\")}\n                                formik={formik}\n                                noDirty={true}\n                                style={{flex: 4}}\n                                name=\"address\"\n                            />\n                            <DirtyTextField\n                                label={t(\"city\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"city\"\n                            />\n                            <DirtyTextField\n                                label={t(\"zip\")}\n                                formik={formik}\n                                type=\"number\"\n                                noDirty={true}\n                                style={{flex: 1}}\n                                name=\"zip\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"dni\")}\n                                style={{flex: 1}}\n                                noDirty={true}\n                                formik={formik}\n                                name=\"dni\"\n                            />\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"phone\"\n                            />\n\n\n\n                        </Box>\n\n\n                      <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyCountrySelect\n                                formik={formik}\n                                style={{flex: 1}}\n                                noDirty={true}\n                                name={\"country_of_origin\"}\n                                label={t(\"country_of_origin\")}\n                            />\n<DirtyTextField\n                                label={t(\"gender\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"gender\"\n                                select>\n                                <MenuItem value=\"m\">{t(\"m\")}</MenuItem>\n                                <MenuItem value=\"f\">{t(\"f\")}</MenuItem>\n                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\n                            </DirtyTextField>\n                        </Box>\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name=\"is_studying\"\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"school_university\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"education_entity\"\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                noDirty={true}\n                                name=\"education_year\"\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name=\"is_working\"\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"career\"\n                            />\n                        </Box>\n\n                       <Box className={[classes.line, classes.composite]}>\n\n <DirtyTextField\n                                label={t(\"birthdate\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                noDirty={true}\n                                formik={formik}\n                                name=\"birth_date\"\n                                InputLabelProps={{shrink: true}}/>\n                            <DirtyTextField\n                              label={t(\"years_in_xamfra\")}\n                              type=\"number\"\n                              noDirty={true}\n                              formik={formik}\n                              style={{flex: 1}}\n                              name=\"years_in_xamfra\"/>\n                        </Box>\n\n\n\n                  </div>\n                  }\n\n\n                  {(activeStep === 2 || activeStep === 3) &&\n                  <div>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__name\"}\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__surname1\"}\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name={\"__person\" + (activeStep-1) + \"__surname2\"}\n                                noDirty={true}\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name={\"__person\" + (activeStep-1) + \"__email\"}\n                                noDirty={true}\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                noDirty={true}\n                                name={\"__person\" + (activeStep-1) + \"__phone\"}\n                            />\n\n                            <DirtyTextField\n                                label={t(\"relation\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__relation\"}\n                                select\n                                noDirty={true}\n                                formik={formik}\n                            >\n                          {student_guardian_relations.map((r) => (\n                                   <MenuItem key={r} value={r}>{t(r)}</MenuItem>\n                                ))}\n                                ))}\n\n                        </DirtyTextField>\n\n\n\n                        </Box>\n\n\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep - 1) + \"__is_studying\"}\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"school_university\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name={\"__person\" + (activeStep-1) + \"__education_entity\"}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                noDirty={true}\n                                name={\"__person\" + (activeStep-1) + \"__education_year\"}\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__is_working\"}\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                noDirty={true}\n                                name={\"__person\" + (activeStep-1) + \"__career\"}\n                            />\n                        </Box>\n\n\n\n\n                  </div>\n                  }\n\n    {activeStep === 4 &&\n    <div>\n\n        <Box className={classes.cards}>\n            {chosenCourses && chosenCourses.map(course => (\n                <Card className={classes.card} raised={true}>\n                  <CardContent>\n\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {course['name']}\n                    </Typography>\n      <Typography className={classes.pos} color=\"textSecondary\">\n                      {course['description']? course['description']: \"...\"}\n                    </Typography>\n                      {  course['base_schedules'] && course['base_schedules'].map(s => (\n                          <Typography variant=\"body2\" component=\"p\">\n                              {getLocalisedWeekday(s.day_week)}, {s.start_time.slice(0, -3)} - {s.end_time.slice(0, -3)}\n                    </Typography>\n                      ))}\n\n\n\n\n                  </CardContent>\n                  <CardActions>\n                      <IconButton size=\"small\" onClick={() => {setChosenCourses(chosenCourses.filter(c => (c !== course)))}}><DeleteIcon/></IconButton>\n                  </CardActions>\n                </Card>\n            ))}\n        </Box>\n\n     <Box my={3}>\n            <Divider />\n            </Box>\n\n         <Box className={classes.box} m={3}>\n                <SearchBar\n                    label={t(\"courses\")}\n                    value={searchTerm}\n                    onChange={(e) => {\n                        setSearchTerm(e.target.value);\n                    }}\n                    onSearch={() => {}}\n                />\n            <List className={classes.list}>\n                {filteredCourses && filteredCourses.filter(x =>\n                    !chosenCourses.includes(x) &&\n                    (x.name.includes(searchTerm) || (x.description !== null && x.description.includes(searchTerm)))).map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button\n                                  onClick={() => {\n                                        setChosenCourses([...chosenCourses, course]);\n                                  }}>\n\n                            <ListItemText id=\"description\" primary={course['name']} secondary={course['description']}/>\n                            {course[\"base_schedules\"] && course[\"base_schedules\"].map(s => (\n                                <ListItemText id=\"schedule\" key={s['id']} secondary={getLocalisedWeekday(s.day_week) + \", \" + s.start_time.slice(0, -3) + \" - \" + s.end_time.slice(0, -3)}/>\n\n                            ))}\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n            </Box>\n    </div>}\n\n  {activeStep === 5 &&\n      <div>\n\n          <Typography>\n                    Xamfrà és un centre que treballa perquè tots els infants i joves puguin fer música, teatre i dansa. Les famílies aporten el que poden per ajudar a fer sostenible el centre. En cap cas, la quota cobreix el cost dels tallers que fan els nens i nenes. Marqueu, si us plau, una o vàries opcions.\n                </Typography>\n          <Typography>\n              IMPORTANT: CAP INFANT O JOVE HA DE DEIXAR DE FER TEATRE, MÚSICA O DANSA A XAMFRÀ PER MOTIUS ECONÒMICS. A QUI NO PUGUI, L'AJUDAREM; I QUI PUGUI AJUDAR: MOLTES GRÀCIES!\n          </Typography>\n\n          {\n              [can_pay_60,\n              can_pay_50,\n              can_pay_40,\n              \"Puc pagar una quota a acordar personalment\",\n              \"No puc pagar la quota trimestral\",\n              \"Puc aportar una segona quota per un altre nen/a (desgravació fiscal)\",\n              \"Puc fer-me teamer (1 €/mes)\",\n              \"Puc fer donatius puntuals (desgravació fiscal)\",\n              \"Puc fer donatius regulars (desgravació fiscal)\",\n              \"Puc ajudar en tasques puntuals\",\n              \"Puc ajudar a la Campanya RISUONA (donació d'instruments)\",\n              \"Puc fer serveis professionals relacionats amb els meus estudis o professió\"].map(option => (\n                  <FormControlLabel\n                        control={\n                            <Checkbox\n                                onChange={(event, checked) => {\n                                    if (checked) {\n                                        raw_economic_comments.push(option);\n                                    } else {\n                                        setRawEconomicComments( raw_economic_comments.filter((x) => x !== option));\n                                    }\n\n                                    }\n                                }\n                            />\n                        }\n                        key={option}\n                        label={option}\n                      />\n              ))\n          }\n\n          <Box my={3}>\n            <Divider />\n            </Box>\n\n          <Box className={[classes.line, classes.composite]}>\n                             <DirtyTextField\n                                label={t(\"other_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                formik={formik}\n                                rowsMax={8}\n                                noDirty={true}\n                                name=\"other_comments\"\n                            />\n                        </Box>\n\n\n            <Box my={3}>\n            <Divider />\n            </Box>\n          <FormControlLabel\n                        control={\n                            <Checkbox\n                                defaultValue={false}\n                                defaultChecked={false}\n                                checked={formik.values['image_agreement']}\n                                name={'image_agreement'}\n                                value={formik.values['image_agreement']}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                        }\n                        key={'image_agreement'}\n                        label={isUnderage(formik.values['birth_date'])?\n                        \"En cas de matricular-lo, autoritzo l’ús de la imatge de l’estudiant, menor d'edat, per a que pugui aparèixer a materials escrits o multimèdia corresponents a activitats educatives organitzades per Xamfrà.\"\n                        : \"En cas de matricular-me, autoritzo l’ús de la meva imatge per a que pugui aparèixer a materials escrits o multimèdia corresponents a activitats educatives organitzades per Xamfrà.\" }\n                      />\n      </div>\n               }\n\n              </div>\n            <Box m={2} className={classes.buttons}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                  {t(\"back\")}\n              </Button>\n                {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                    {t(\"skip\")}\n                </Button>\n              )}\n\n\n\n\n\n <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={(activeStep === steps.length - 1) || !fieldsToValidatePerStep[activeStep].every(f => (!formik.errors[f]))}\n                  onClick={handleNext}>\n                { t(\"next\")}\n              </Button>\n\n                {activeStep === steps.length - 1 && <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClickCapture={() => {console.log(\"clicked finish\")}}\n                  disabled={formik.isSubmitting || !fieldsToValidatePerStep[activeStep].every(f => (!formik.errors[f]))}>\n                { t(\"finish\")}\n              </Button> }\n\n\n\n            </Box>\n              </Box>\n             </form>\n          )}\n                    </div>\n\n\n                </Box></Paper>\n        </Box>\n\n        );\n\n}\n\nexport default PreEnrollmentPage;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/pre-enrollment.service.js",["378"],"import axios from \"axios\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\n\nexport const preEnrollmentService = {\n    getCourses,\n    postPreEnrollment\n};\n\nfunction getCourses() {\n        return new Promise(function (resolve, reject) {\n\n            axios({\n                method: 'get',\n                url: `${BACKEND_URL}/pre-enrolment/v1/courses`,\n                headers: {\n                    ...{\n                        'Content-Type': 'application/json',\n                        'Cache-Control': 'no-cache'\n                    }, ...authHeader()  // todo are auth headers needed for gets?\n                }\n            }).then(function (response) {\n                    resolve(response.data);\n                }).catch(function (err) {\n                    reject(err);\n            });\n        });\n    }\n\n\n    function postPreEnrollment(data) {\n        return new Promise(function (resolve, reject) {\n\n            axios({\n                method: 'post',\n                url: `${BACKEND_URL}/pre-enrolment/v1/pre-enrolment`,\n                data: data,\n                headers: {\n                    ...{\n                        'Content-Type': 'application/json',\n                        'Cache-Control': 'no-cache'\n                    }, ...authHeader()\n                }\n            }).then(function (response) {\n                    resolve(response);\n                }).catch(function (err) {\n                    reject(err);\n            });\n        });\n    }\n",{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","replacedBy":"382"},{"ruleId":"379","replacedBy":"383"},{"ruleId":"381","replacedBy":"384"},{"ruleId":"379","replacedBy":"385"},{"ruleId":"381","replacedBy":"386"},{"ruleId":"387","severity":1,"message":"388","line":6,"column":6,"nodeType":"389","endLine":6,"endColumn":8,"suggestions":"390"},{"ruleId":"391","severity":1,"message":"392","line":11,"column":8,"nodeType":"393","messageId":"394","endLine":11,"endColumn":21},{"ruleId":"387","severity":1,"message":"395","line":78,"column":6,"nodeType":"389","endLine":78,"endColumn":18,"suggestions":"396"},{"ruleId":"379","replacedBy":"397"},{"ruleId":"381","replacedBy":"398"},{"ruleId":"379","replacedBy":"399"},{"ruleId":"381","replacedBy":"400"},{"ruleId":"391","severity":1,"message":"401","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":18},{"ruleId":"391","severity":1,"message":"402","line":5,"column":19,"nodeType":"393","messageId":"394","endLine":5,"endColumn":28},{"ruleId":"391","severity":1,"message":"403","line":10,"column":9,"nodeType":"393","messageId":"394","endLine":10,"endColumn":17},{"ruleId":"391","severity":1,"message":"404","line":30,"column":8,"nodeType":"393","messageId":"394","endLine":30,"endColumn":19},{"ruleId":"391","severity":1,"message":"405","line":35,"column":24,"nodeType":"393","messageId":"394","endLine":35,"endColumn":37},{"ruleId":"379","replacedBy":"406"},{"ruleId":"381","replacedBy":"407"},{"ruleId":"387","severity":1,"message":"408","line":60,"column":6,"nodeType":"389","endLine":60,"endColumn":24,"suggestions":"409"},{"ruleId":"379","replacedBy":"410"},{"ruleId":"381","replacedBy":"411"},{"ruleId":"391","severity":1,"message":"412","line":6,"column":9,"nodeType":"393","messageId":"394","endLine":6,"endColumn":19},{"ruleId":"387","severity":1,"message":"413","line":43,"column":6,"nodeType":"389","endLine":43,"endColumn":18,"suggestions":"414"},{"ruleId":"391","severity":1,"message":"415","line":41,"column":11,"nodeType":"393","messageId":"394","endLine":41,"endColumn":20},{"ruleId":"391","severity":1,"message":"416","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":22},{"ruleId":"391","severity":1,"message":"417","line":60,"column":11,"nodeType":"393","messageId":"394","endLine":60,"endColumn":12},{"ruleId":"379","replacedBy":"418"},{"ruleId":"381","replacedBy":"419"},{"ruleId":"379","replacedBy":"420"},{"ruleId":"381","replacedBy":"421"},{"ruleId":"391","severity":1,"message":"422","line":1,"column":8,"nodeType":"393","messageId":"394","endLine":1,"endColumn":22},{"ruleId":"391","severity":1,"message":"423","line":2,"column":9,"nodeType":"393","messageId":"394","endLine":2,"endColumn":20},{"ruleId":"391","severity":1,"message":"422","line":1,"column":8,"nodeType":"393","messageId":"394","endLine":1,"endColumn":22},{"ruleId":"391","severity":1,"message":"423","line":2,"column":9,"nodeType":"393","messageId":"394","endLine":2,"endColumn":20},{"ruleId":"379","replacedBy":"424"},{"ruleId":"381","replacedBy":"425"},{"ruleId":"391","severity":1,"message":"422","line":1,"column":8,"nodeType":"393","messageId":"394","endLine":1,"endColumn":22},{"ruleId":"391","severity":1,"message":"423","line":2,"column":9,"nodeType":"393","messageId":"394","endLine":2,"endColumn":20},{"ruleId":"391","severity":1,"message":"426","line":28,"column":27,"nodeType":"393","messageId":"394","endLine":28,"endColumn":40},{"ruleId":"387","severity":1,"message":"427","line":79,"column":6,"nodeType":"389","endLine":79,"endColumn":26,"suggestions":"428"},{"ruleId":"387","severity":1,"message":"429","line":103,"column":23,"nodeType":"389","endLine":103,"endColumn":64,"suggestions":"430"},{"ruleId":"387","severity":1,"message":"395","line":131,"column":6,"nodeType":"389","endLine":131,"endColumn":17,"suggestions":"431"},{"ruleId":"379","replacedBy":"432"},{"ruleId":"381","replacedBy":"433"},{"ruleId":"387","severity":1,"message":"434","line":92,"column":23,"nodeType":"389","endLine":92,"endColumn":29,"suggestions":"435"},{"ruleId":"391","severity":1,"message":"436","line":2,"column":9,"nodeType":"393","messageId":"394","endLine":2,"endColumn":18},{"ruleId":"391","severity":1,"message":"437","line":7,"column":5,"nodeType":"393","messageId":"394","endLine":7,"endColumn":11},{"ruleId":"391","severity":1,"message":"402","line":13,"column":5,"nodeType":"393","messageId":"394","endLine":13,"endColumn":14},{"ruleId":"391","severity":1,"message":"438","line":16,"column":8,"nodeType":"393","messageId":"394","endLine":16,"endColumn":12},{"ruleId":"391","severity":1,"message":"439","line":24,"column":34,"nodeType":"393","messageId":"394","endLine":24,"endColumn":47},{"ruleId":"391","severity":1,"message":"440","line":29,"column":10,"nodeType":"393","messageId":"394","endLine":29,"endColumn":26},{"ruleId":"391","severity":1,"message":"441","line":33,"column":9,"nodeType":"393","messageId":"394","endLine":33,"endColumn":33},{"ruleId":"391","severity":1,"message":"442","line":33,"column":35,"nodeType":"393","messageId":"394","endLine":33,"endColumn":45},{"ruleId":"391","severity":1,"message":"443","line":33,"column":47,"nodeType":"393","messageId":"394","endLine":33,"endColumn":60},{"ruleId":"391","severity":1,"message":"444","line":33,"column":62,"nodeType":"393","messageId":"394","endLine":33,"endColumn":75},{"ruleId":"391","severity":1,"message":"445","line":43,"column":8,"nodeType":"393","messageId":"394","endLine":43,"endColumn":15},{"ruleId":"391","severity":1,"message":"446","line":44,"column":9,"nodeType":"393","messageId":"394","endLine":44,"endColumn":12},{"ruleId":"391","severity":1,"message":"447","line":47,"column":8,"nodeType":"393","messageId":"394","endLine":47,"endColumn":18},{"ruleId":"391","severity":1,"message":"448","line":50,"column":8,"nodeType":"393","messageId":"394","endLine":50,"endColumn":33},{"ruleId":"391","severity":1,"message":"449","line":52,"column":8,"nodeType":"393","messageId":"394","endLine":52,"endColumn":26},{"ruleId":"391","severity":1,"message":"450","line":134,"column":11,"nodeType":"393","messageId":"394","endLine":134,"endColumn":19},{"ruleId":"391","severity":1,"message":"451","line":135,"column":12,"nodeType":"393","messageId":"394","endLine":135,"endColumn":27},{"ruleId":"391","severity":1,"message":"452","line":166,"column":13,"nodeType":"393","messageId":"394","endLine":166,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":239,"column":62,"nodeType":"455","messageId":"456","endLine":239,"endColumn":64},{"ruleId":"453","severity":1,"message":"454","line":239,"column":74,"nodeType":"455","messageId":"456","endLine":239,"endColumn":76},{"ruleId":"453","severity":1,"message":"454","line":245,"column":57,"nodeType":"455","messageId":"456","endLine":245,"endColumn":59},{"ruleId":"453","severity":1,"message":"454","line":245,"column":68,"nodeType":"455","messageId":"456","endLine":245,"endColumn":70},{"ruleId":"453","severity":1,"message":"454","line":250,"column":56,"nodeType":"455","messageId":"456","endLine":250,"endColumn":58},{"ruleId":"453","severity":1,"message":"454","line":250,"column":68,"nodeType":"455","messageId":"456","endLine":250,"endColumn":70},{"ruleId":"453","severity":1,"message":"454","line":255,"column":55,"nodeType":"455","messageId":"456","endLine":255,"endColumn":57},{"ruleId":"453","severity":1,"message":"454","line":255,"column":66,"nodeType":"455","messageId":"456","endLine":255,"endColumn":68},{"ruleId":"453","severity":1,"message":"454","line":260,"column":55,"nodeType":"455","messageId":"456","endLine":260,"endColumn":57},{"ruleId":"453","severity":1,"message":"454","line":260,"column":67,"nodeType":"455","messageId":"456","endLine":260,"endColumn":69},{"ruleId":"453","severity":1,"message":"454","line":265,"column":56,"nodeType":"455","messageId":"456","endLine":265,"endColumn":58},{"ruleId":"453","severity":1,"message":"454","line":265,"column":67,"nodeType":"455","messageId":"456","endLine":265,"endColumn":69},{"ruleId":"453","severity":1,"message":"454","line":270,"column":56,"nodeType":"455","messageId":"456","endLine":270,"endColumn":58},{"ruleId":"453","severity":1,"message":"454","line":270,"column":68,"nodeType":"455","messageId":"456","endLine":270,"endColumn":70},{"ruleId":"453","severity":1,"message":"454","line":275,"column":56,"nodeType":"455","messageId":"456","endLine":275,"endColumn":58},{"ruleId":"453","severity":1,"message":"454","line":275,"column":67,"nodeType":"455","messageId":"456","endLine":275,"endColumn":69},{"ruleId":"453","severity":1,"message":"454","line":292,"column":55,"nodeType":"455","messageId":"456","endLine":292,"endColumn":57},{"ruleId":"453","severity":1,"message":"454","line":292,"column":67,"nodeType":"455","messageId":"456","endLine":292,"endColumn":69},{"ruleId":"453","severity":1,"message":"454","line":297,"column":56,"nodeType":"455","messageId":"456","endLine":297,"endColumn":58},{"ruleId":"453","severity":1,"message":"454","line":297,"column":68,"nodeType":"455","messageId":"456","endLine":297,"endColumn":70},{"ruleId":"453","severity":1,"message":"454","line":302,"column":57,"nodeType":"455","messageId":"456","endLine":302,"endColumn":59},{"ruleId":"453","severity":1,"message":"454","line":302,"column":68,"nodeType":"455","messageId":"456","endLine":302,"endColumn":70},{"ruleId":"453","severity":1,"message":"454","line":307,"column":56,"nodeType":"455","messageId":"456","endLine":307,"endColumn":58},{"ruleId":"453","severity":1,"message":"454","line":307,"column":68,"nodeType":"455","messageId":"456","endLine":307,"endColumn":70},{"ruleId":"453","severity":1,"message":"454","line":312,"column":57,"nodeType":"455","messageId":"456","endLine":312,"endColumn":59},{"ruleId":"453","severity":1,"message":"454","line":312,"column":68,"nodeType":"455","messageId":"456","endLine":312,"endColumn":70},{"ruleId":"453","severity":1,"message":"454","line":317,"column":55,"nodeType":"455","messageId":"456","endLine":317,"endColumn":57},{"ruleId":"453","severity":1,"message":"454","line":317,"column":66,"nodeType":"455","messageId":"456","endLine":317,"endColumn":68},{"ruleId":"453","severity":1,"message":"454","line":322,"column":57,"nodeType":"455","messageId":"456","endLine":322,"endColumn":59},{"ruleId":"453","severity":1,"message":"454","line":322,"column":69,"nodeType":"455","messageId":"456","endLine":322,"endColumn":71},{"ruleId":"453","severity":1,"message":"454","line":327,"column":56,"nodeType":"455","messageId":"456","endLine":327,"endColumn":58},{"ruleId":"453","severity":1,"message":"454","line":327,"column":68,"nodeType":"455","messageId":"456","endLine":327,"endColumn":70},{"ruleId":"457","severity":1,"message":"458","line":369,"column":27,"nodeType":"459","messageId":"460","endLine":369,"endColumn":29},{"ruleId":"387","severity":1,"message":"461","line":424,"column":10,"nodeType":"389","endLine":424,"endColumn":90,"suggestions":"462"},{"ruleId":"387","severity":1,"message":"463","line":424,"column":29,"nodeType":"464","endLine":424,"endColumn":60},{"ruleId":"387","severity":1,"message":"463","line":424,"column":62,"nodeType":"464","endLine":424,"endColumn":89},{"ruleId":"465","severity":1,"message":"466","line":500,"column":78,"nodeType":"467","endLine":500,"endColumn":93},{"ruleId":"391","severity":1,"message":"423","line":3,"column":9,"nodeType":"393","messageId":"394","endLine":3,"endColumn":20},"no-native-reassign",["468"],"no-negated-in-lhs",["469"],["468"],["469"],["468"],["469"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["470"],"no-unused-vars","'PersonAddIcon' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.",["471"],["468"],["469"],["468"],["469"],"'Typography' is defined but never used.","'TextField' is defined but never used.","'Skeleton' is defined but never used.","'ReceiptIcon' is defined but never used.","'emptyGuardian' is defined but never used.",["468"],["469"],"React Hook useEffect has missing dependencies: 'errorHandler' and 'loading'. Either include them or remove the dependency array.",["472"],["468"],["469"],"'makeStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'newGuardian'. Either include them or remove the dependency array.",["473"],"'studentId' is assigned a value but never used.","'DirtyTextField' is defined but never used.","'t' is assigned a value but never used.",["468"],["469"],["468"],["469"],"'serviceFactory' is defined but never used.","'API_VERSION' is defined but never used.",["468"],["469"],"'closeSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'eventFromSchedule'. Either include them or remove the dependency array.",["474"],"React Hook useEffect has missing dependencies: 'courseIds', 'errorHandler', and 'searchTerm'. Either include them or remove the dependency array. If 'setAllCourses' needs the current value of 'courseIds', you can also switch to useReducer instead of useState and read 'courseIds' in the reducer.",["475"],["476"],["468"],["469"],"React Hook useEffect has missing dependencies: 'errorHandler', 'searchTerm', and 'setUsers'. Either include them or remove the dependency array.",["477"],"'useFormik' is defined but never used.","'Dialog' is defined but never used.","'Grid' is defined but never used.","'signupService' is defined but never used.","'useFormikContext' is defined but never used.","'safe_password_repetition' is defined but never used.","'safe_email' is defined but never used.","'safe_password' is defined but never used.","'safe_username' is defined but never used.","'Toolbar' is defined but never used.","'act' is defined but never used.","'Pagination' is defined but never used.","'StudentsCourseDataService' is defined but never used.","'CoursesDataService' is defined but never used.","'themeCtx' is assigned a value but never used.","'enqueueSnackbar' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'formik.values'. Either include it or remove the dependency array.",["478"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},"Update the dependencies array to be: [handler]",{"range":"497","text":"498"},"Update the dependencies array to be: [errorHandler, paymentIds]",{"range":"499","text":"500"},"Update the dependencies array to be: [currentStudentId, errorHandler, loading]",{"range":"501","text":"502"},"Update the dependencies array to be: [errorHandler, guardianId, newGuardian]",{"range":"503","text":"504"},"Update the dependencies array to be: [errorHandler, eventFromSchedule, scheduleIds, theme]",{"range":"505","text":"506"},"Update the dependencies array to be: [page, setAllCourses, loading, newCourse, searchTerm, errorHandler, courseIds]",{"range":"507","text":"508"},"Update the dependencies array to be: [courseIds, errorHandler]",{"range":"509","text":"510"},"Update the dependencies array to be: [errorHandler, page, searchTerm, setUsers]",{"range":"511","text":"512"},"Update the dependencies array to be: [availableCourses, formik.values]",{"range":"513","text":"514"},[129,131],"[handler]",[2604,2616],"[errorHandler, paymentIds]",[1986,2004],"[currentStudentId, errorHandler, loading]",[1874,1886],"[errorHandler, guardianId, newGuardian]",[2758,2778],"[errorHandler, eventFromSchedule, scheduleIds, theme]",[3138,3179],"[page, setAllCourses, loading, newCourse, searchTerm, errorHandler, courseIds]",[3876,3887],"[courseIds, errorHandler]",[2707,2713],"[errorHandler, page, searchTerm, setUsers]",[19683,19763],"[availableCourses, formik.values]"]