[{"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js":"1","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js":"2","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js":"3","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/routes.js":"4","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js":"5","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js":"6","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js":"7","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js":"8","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js":"9","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js":"10","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js":"11","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js":"12","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js":"13","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js":"14","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js":"15","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js":"16","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js":"17","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js":"18","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js":"19","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js":"20","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js":"21","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js":"22","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js":"23","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js":"24","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js":"25","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js":"26","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js":"27","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js":"28","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js":"29","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js":"30","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js":"31","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js":"32","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js":"33","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js":"34"},{"size":1469,"mtime":1609237004709,"results":"35","hashOfConfig":"36"},{"size":96,"mtime":1609237004601,"results":"37","hashOfConfig":"36"},{"size":6556,"mtime":1609237004693,"results":"38","hashOfConfig":"36"},{"size":1894,"mtime":1608814505864,"results":"39","hashOfConfig":"36"},{"size":834,"mtime":1609264677034,"results":"40","hashOfConfig":"36"},{"size":5197,"mtime":1609331179845,"results":"41","hashOfConfig":"36"},{"size":6066,"mtime":1609325473344,"results":"42","hashOfConfig":"36"},{"size":13498,"mtime":1609250043345,"results":"43","hashOfConfig":"36"},{"size":174,"mtime":1609264823340,"results":"44","hashOfConfig":"36"},{"size":1957,"mtime":1609273337549,"results":"45","hashOfConfig":"36"},{"size":190,"mtime":1609237004661,"results":"46","hashOfConfig":"36"},{"size":189,"mtime":1609237004665,"results":"47","hashOfConfig":"36"},{"size":10979,"mtime":1609325473324,"results":"48","hashOfConfig":"36"},{"size":2854,"mtime":1609237004729,"results":"49","hashOfConfig":"36"},{"size":12503,"mtime":1609250174495,"results":"50","hashOfConfig":"36"},{"size":1093,"mtime":1608812823740,"results":"51","hashOfConfig":"36"},{"size":1167,"mtime":1609272998086,"results":"52","hashOfConfig":"36"},{"size":102,"mtime":1609330109776,"results":"53","hashOfConfig":"36"},{"size":1540,"mtime":1609286126071,"results":"54","hashOfConfig":"36"},{"size":6952,"mtime":1609329346651,"results":"55","hashOfConfig":"36"},{"size":731,"mtime":1609097773908,"results":"56","hashOfConfig":"36"},{"size":708,"mtime":1609237004697,"results":"57","hashOfConfig":"36"},{"size":7662,"mtime":1609326118128,"results":"58","hashOfConfig":"36"},{"size":993,"mtime":1609237004733,"results":"59","hashOfConfig":"36"},{"size":895,"mtime":1608814356173,"results":"60","hashOfConfig":"36"},{"size":7222,"mtime":1609323580747,"results":"61","hashOfConfig":"36"},{"size":1338,"mtime":1609237004653,"results":"62","hashOfConfig":"36"},{"size":2343,"mtime":1609249815052,"results":"63","hashOfConfig":"36"},{"size":1217,"mtime":1609287125732,"results":"64","hashOfConfig":"36"},{"size":1072,"mtime":1609323580783,"results":"65","hashOfConfig":"36"},{"size":362,"mtime":1608812823740,"results":"66","hashOfConfig":"36"},{"size":2653,"mtime":1609331222485,"results":"67","hashOfConfig":"36"},{"size":2412,"mtime":1609237004641,"results":"68","hashOfConfig":"36"},{"size":84,"mtime":1609329013088,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1d3a0qb",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js",[],["150","151"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js",[],["152","153"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js",[],["154","155"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/routes.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js",["156","157"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js",[],["158","159"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js",[],["160","161"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js",["162"],"import React, {useEffect} from 'react';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {TextField} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {authenticationService as signupService} from \"../_services/signup.service\";\nimport {useSnackbar} from \"notistack\";\nimport i18next from \"i18next\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {password_repetition, safe_password, safe_username} from \"../_data/password_regex\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexGrow: 1,\n        height: \"100vh\"\n    },\n    field: {\n        width: \"100%\",\n        margin: \"5px\"\n    },\n    paper: {\n        width: \"50%\",\n        minWidth: \"500px\",\n        height: \"50%\",\n        padding: \"50px\",\n        margin: \"auto\"\n    }\n}));\n\nconst SignupPage = (props) => {\n    const classes = useStyles();\n    const themeCtx = React.useContext(themeContext);\n    const {enqueueSnackbar} = useSnackbar();\n\n    useEffect(() => {\n        i18next.changeLanguage(query.get('lan')).then();\n    }, [])\n\n    const {t} = useTranslation();\n    const errorHandler = useErrorHandler();\n    const query = new URLSearchParams(window.location.search);\n    const token = query.get('token')\n    const email = query.get('email')\n    const formik = useFormik({\n        initialValues: {\n            username: email,\n            email: email,\n            password: '',\n            name: '',\n            surname1: '',\n            surname2: '',\n            password2: ''\n        },\n        validationSchema: yup.object({  // todo translate\n            username: safe_username(t),\n            email: safe_username(t),\n            password: safe_password(t),\n            password2: password_repetition(t),\n            name: yup.string().required(t(\"name_required\")),\n            surname1: yup.string().required(t(\"surname1_required\")),\n            surname2: yup.string().required(t(\"surname2_required\"))\n        }),\n        enableReinitialize: true,\n        onSubmit: ({username, email, password, name, surname1, surname2, password2}, {setStatus, setSubmitting}) => {\n            setStatus();\n\n            signupService.signup(username, password, email, name, surname1, surname2, token)\n                .then(...errorHandler({handle401: false, handle400: false}))\n                .then(\n                    function (result) {\n                        enqueueSnackbar(t(\"sign_up_success\"), {variant: \"success\"});\n                        setSubmitting(false);\n                        props.history.push(\"/login\");\n                    },\n                    function (error) {\n                        console.log(\">>><<<\", error.response, error.request);\n                        setSubmitting(false);\n                        setStatus(error);\n\n                        if (error.response.status === 401){\n                            enqueueSnackbar(t(\"invalid_expired_invite\"), { variant: \"warning\"});\n                        } else if (error.response.status === 400) {\n                            enqueueSnackbar(t(\"used_invite\"), { variant: \"warning\"});\n                        }\n                    });\n        }\n    });\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid xs={2} item/>\n\n                <Grid xs={8} item>\n                    <Grid\n                        container\n                        spacing={0}\n                        align=\"center\"\n                        justify=\"center\"\n                        direction=\"column\"\n                        style={{height: \"100%\"}}\n                    >\n                        <Grid item>\n                            <Box m={2}>\n                                <Paper className={classes.paper}>\n                                    <img src={themeCtx.theme? \"logo_centrifuga4_dark.svg\": \"logo_centrifuga4_light.svg\"} alt=\"Logo Centrífuga\" style={{height: \"85px\"}}/>\n\n                                     <Box m={2}>\n                                         <Typography>{t(\"been_invited\")}</Typography>\n                                    </Box>\n\n                                    <form onSubmit={formik.handleSubmit}>\n                                        <TextField\n                                            label={t(\"username\")}\n                                            helperText={formik.touched[\"username\"] && formik.errors[\"username\"]}\n                                            type=\"email\"\n                                            name=\"username\"\n                                            className={classes.field}\n                                            value={formik.values[\"username\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                            disabled\n                                        />\n                                        <TextField\n                                            label={t(\"email\")}\n                                            helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                                            type=\"email\"\n                                            name=\"email\"\n                                            className={classes.field}\n                                            value={formik.values[\"email\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                            disabled\n                                        />\n\n\n\n                                        <TextField\n                                            label={t(\"name\")}\n                                            helperText={formik.touched[\"name\"] && formik.errors[\"name\"]}\n                                            name=\"name\"\n                                            className={classes.field}\n                                            value={formik.values[\"name\"]}\n                                            onChange={formik.handleChange}\n                                            disabled={formik.isSubmitting}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"surname1\")}\n                                            helperText={formik.touched[\"surname1\"] && formik.errors[\"surname1\"]}\n                                            name=\"surname1\"\n                                            disabled={formik.isSubmitting}\n                                            className={classes.field}\n                                            value={formik.values[\"surname1\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"surname2\")}\n                                            helperText={formik.touched[\"surname2\"] && formik.errors[\"surname2\"]}\n                                            name=\"surname2\"\n                                            disabled={formik.isSubmitting}\n                                            className={classes.field}\n                                            value={formik.values[\"surname2\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"password\")}\n                                            name=\"password\"\n                                            type=\"password\"\n                                            helperText={formik.touched[\"password\"] && formik.errors[\"password\"]}\n                                            className={classes.field}\n                                            value={formik.values[\"password\"]}\n                                            disabled={formik.isSubmitting}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"confirm_password\")}\n                                            name=\"password2\"\n                                            type=\"password\"\n                                            helperText={formik.touched[\"password2\"] && formik.errors[\"password2\"]}\n                                            className={classes.field}\n                                            value={formik.values[\"password2\"]}\n                                            disabled={formik.isSubmitting}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <Box my={3}>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                type=\"submit\"\n                                                disabled={formik.isSubmitting}\n                                                className={classes.field}>\n                                                {t(\"sign_up\")}\n                                            </Button>\n                                        </Box>\n                                    </form>\n                                </Paper></Box>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid xs={2} item/>\n            </Grid></div>);\n\n}\n\nexport default SignupPage;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js",["163"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n  },\n\n  contentPanel: {\n    flex: 1,\n    overflow: \"auto\",\n    boxSizing: \"border-box\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  sizeSmall: {\n    margin: theme.spacing(1),\n    width: \"25ch\"\n  },\n  sizeLong: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\n\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nexport default function Student(props) {\n  const currentStudent = props.currentStudent;\n  const setCurrentStudent = props.setCurrentStudent;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  console.log(\">>\", currentStudent);\n\n  let contacts = [1,2];\n\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"fullWidth\"\n                  aria-label=\"full width tabs example\"\n                >\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\n                  {\n                  contacts && contacts.map((contact, index) => (\n                  <Tab label={t(\"contact \") + (index+1)} {...a11yProps(index)} />\n                      ))}\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <Attendee value={value}\n                      index={0}\n                      dir={theme.direction}\n                      title=\"attendee\"\n                      currentStudent={currentStudent}/>\n            {\n              contacts && contacts.map((contact, index) => (\n                   <Attendee value={value} index={index+1} dir={theme.direction} title={\"contact \" + (index + 1)}/>\n                  ))}\n\n            }\n          </SwipeableViews>\n          </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js",["164","165","166","167"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {Button, DialogActions, MenuItem, TextField} from \"@material-ui/core\";\nimport countryList from \"../_data/countries\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Autocomplete, Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {useFormik,} from 'formik';\nimport * as yup from 'yup';\nimport countries from \"../_data/countries\";\nimport ContrySelect from \"./contry-select.component\";\nimport CountrySelect from \"./contry-select.component\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    fullWidth: {\n        width: \"100%\"\n    },\n    sizeSmall: {\n        width: \"25ch\"\n    },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction Person(props) {\n    const currentPerson = props.currentPerson;\n    const {t} = useTranslation();\n    const loading = false;\n    const classes = useStyles();\n\n    console.log(props, currentPerson);\n\n    const formik = useFormik({\n        initialValues: currentPerson===null? {}:currentPerson,\n        validationSchema: yup.object({\n                                email: yup.string().email('Enter a valid email.'),\n                                name: yup.string().required('Required')\n                            }),\n        enableReinitialize: true,\n        onSubmit: (values) => {\n          alert(JSON.stringify(values, null, 2));\n        }\n    });\n\n    console.log(formik.values);\n\n    return (\n        <Box>\n            {loading || currentPerson === null\n                ?\n                (\n\n                    <Box>\n                        {\n                            [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map(value => {\n                                return (\n                                    <Box py={0}><Skeleton variant=\"text\" width={value} height=\"60px\"></Skeleton></Box>);\n                            })\n                        }\n                    </Box>\n                )\n                :\n                (\n                        <form onSubmit={formik.handleSubmit}>\n                                        <TextField\n                                            label={t(\"id\")}\n                                            name=\"id\"\n                                            disabled\n                                            className={classes.line}\n                                            value={formik.values[\"id\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                label={t(\"name\")}\n                                                style={{flex: 1}}\n                                                name=\"name\"\n                                                value={formik.values[\"name\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                                formik={formik}\n                                                helperText={formik.touched[\"name\"] && formik.errors[\"name\"]}\n                                            />\n                                            <DirtyTextField\n                                                label={t(\"surname1\")}\n                                                style={{flex: 1}}\n                                                name=\"surname1\"\n                                                formik={formik}\n                                                value={formik.values[\"surname1\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                label={t(\"surname2\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"surname2\"\n                                                value={formik.values[\"surname2\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </Box>\n\n                                    <Box className={[classes.line, classes.composite]}>\n                                        <DirtyTextField\n                                            label={t(\"email\")}\n                                            type=\"email\"\n                                            style={{flex: 1}}\n                                                formik={formik}\n                                            name=\"email\"\n                                            value={formik.values[\"email\"]}\n                                            helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                                            error={formik.errors[\"email\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                        />\n                                    </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                label={t(\"address\")}\n                                                formik={formik}\n                                                style={{flex: 4}}\n                                                name=\"address\"\n                                                value={formik.values.address}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"city\")}\n                                                style={{flex: 2}}\n                                                formik={formik}\n                                                name=\"city\"\n                                            value={formik.values.city}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"zip\")}\n                                                formik={formik}\n                                                type=\"number\"\n                                                style={{flex: 1}}\n                                                name=\"zip\"\n                                            value={formik.values[\"zip\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                        </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"dni\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"dni\"\n                                            value={formik.values[\"dni\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"phone\")}\n                                                type=\"tel\"\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"phone\"\n                                            value={formik.values[\"phone\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"gender\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"gender\"\n                                            value={formik.values[\"gender\"] === null? '': formik.values[\"gender\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                                select>\n                                                <MenuItem value=\"m\">male</MenuItem>\n                                                <MenuItem value=\"f\">female</MenuItem>\n                                                <MenuItem value=\"nb\">non binary / not represented by any of the\n                                                    above</MenuItem>\n                                            </DirtyTextField>\n\n                                        </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"birthdate\")}\n                                                formik={formik}\n                                                type=\"date\"\n                                                style={{flex: 1}}\n                                                name=\"birth_date\"\n                                            value={formik.values[\"birth_date\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                                InputLabelProps={{shrink: true}}/>\n\n                                            <CountrySelect formik={formik}/>\n\n                                        </Box>\n\n                                        <DialogActions>\n                                            <Button\n                                                type=\"button\"\n                                                className=\"outline\"\n                                                onClick={formik.handleReset}\n                                                disabled={!formik.dirty || formik.isSubmitting}\n                                            >\n                                                Reset\n                                            </Button>\n                                            <Button type=\"submit\" disabled={formik.isSubmitting}>\n                                                Submit\n                                            </Button>\n\n                                        </DialogActions>\n                                    </form>\n                )\n\n            }\n        </Box>\n    );\n}\n\n\nexport default Person;",["168","169"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js",["170"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js",[],["171","172"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js",["173","174","175","176","177","178","179"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js",["180","181","182","183","184","185","186"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React from \"react\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {countries} from \"../_data/countries\";\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport countryList from \"../_data/countries\";\nimport DirtyTextField from \"./dirtytextfield.component\";\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n});\n\nexport default function CountrySelect({formik, ...textFieldProps}) {\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n\n  return (\n    <Autocomplete\n      id=\"country-select-demo\"\n      style={{ width: 300 }}\n      options={countries}\n      classes={{\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={(option) => {\n          console.log(option);\n          return option.label === undefined? option.name : option.label;\n      }}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.label} ({option.code}) +{option.phone}\n        </React.Fragment>\n      )}\n      renderInput={(params) => (\n        <DirtyTextField\n            id=\"standard-basic\"\n            label={t(\"country_of_origin\")}\n            style={{flex: 1}}\n            {...params}\n            name=\"country_of_origin\"\n            formik={formik}\n            value={formik.values[\"country_of_origin\"] === null? '': formik.values[\"country_of_origin\"]}\n              onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n              inputProps={{\n                ...params.inputProps,\n                autoComplete: 'new-password', // disable autocomplete and autofill\n              }}\n            {...textFieldProps}/>\n      )}\n    />\n  );\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js",["187","188","189"],"import * as yup from \"yup\";\n\nexport const longer_8 = /^.{8,}$/;\nexport const shorter_64 = /^.{0,64}$/;\nexport const has_lowercase = /(?=.*[a-z])/;\nexport const has_uppercase = /(?=.*[A-Z])/;\nexport const has_digit = /(?=.*\\d)/;\nexport const has_special = /(?=.*[ -\\/:-@\\[-\\`{-~]{1,})/;\nexport const no_plus = /^((?!\\+).)*$/;\nexport const safe_password = (t) => (\n    yup.string()\n        .required(t(\"password_required\"))  // todo translate\n        .matches(longer_8, t(\"longer_8\"))\n        .matches(shorter_64, t(\"shorter_64\"))\n        .matches(has_lowercase, t(\"has_lowercase\"))\n        .matches(has_uppercase, t(\"has_uppercase\"))\n        .matches(has_digit, t(\"has_digit\"))\n        .matches(has_special, t(\"has_special\"))\n)\nexport const password_repetition = (t) => (\n    yup.string()\n        .required(t(\"password_required\"))\n        .oneOf([yup.ref('password'), null], t(\"passwords_unmatched\"))\n)\nexport const safe_username = (t) => (\n    yup.string()\n        .required(t(\"email_required\"))\n        .email(t(\"invalid_email\"))\n        .matches(no_plus, t(\"no_plus\"))\n)","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js",["190"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"191","replacedBy":"197"},{"ruleId":"193","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":55,"column":11,"nodeType":"201","messageId":"202","endLine":55,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":75,"column":23,"nodeType":"205","endLine":75,"endColumn":29,"suggestions":"206"},{"ruleId":"191","replacedBy":"207"},{"ruleId":"193","replacedBy":"208"},{"ruleId":"191","replacedBy":"209"},{"ruleId":"193","replacedBy":"210"},{"ruleId":"203","severity":1,"message":"211","line":45,"column":8,"nodeType":"205","endLine":45,"endColumn":10,"suggestions":"212"},{"ruleId":"199","severity":1,"message":"213","line":48,"column":9,"nodeType":"201","messageId":"202","endLine":48,"endColumn":26},{"ruleId":"199","severity":1,"message":"214","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":19},{"ruleId":"199","severity":1,"message":"215","line":7,"column":9,"nodeType":"201","messageId":"202","endLine":7,"endColumn":21},{"ruleId":"199","severity":1,"message":"216","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":17},{"ruleId":"199","severity":1,"message":"217","line":12,"column":8,"nodeType":"201","messageId":"202","endLine":12,"endColumn":20},{"ruleId":"191","replacedBy":"218"},{"ruleId":"193","replacedBy":"219"},{"ruleId":"203","severity":1,"message":"220","line":100,"column":8,"nodeType":"205","endLine":100,"endColumn":10,"suggestions":"221"},{"ruleId":"191","replacedBy":"222"},{"ruleId":"193","replacedBy":"223"},{"ruleId":"199","severity":1,"message":"224","line":17,"column":5,"nodeType":"201","messageId":"202","endLine":17,"endColumn":14},{"ruleId":"199","severity":1,"message":"225","line":17,"column":16,"nodeType":"201","messageId":"202","endLine":17,"endColumn":29},{"ruleId":"199","severity":1,"message":"226","line":18,"column":5,"nodeType":"201","messageId":"202","endLine":18,"endColumn":16},{"ruleId":"199","severity":1,"message":"227","line":19,"column":5,"nodeType":"201","messageId":"202","endLine":19,"endColumn":18},{"ruleId":"199","severity":1,"message":"228","line":20,"column":5,"nodeType":"201","messageId":"202","endLine":20,"endColumn":13},{"ruleId":"199","severity":1,"message":"229","line":20,"column":15,"nodeType":"201","messageId":"202","endLine":20,"endColumn":22},{"ruleId":"203","severity":1,"message":"211","line":51,"column":8,"nodeType":"205","endLine":51,"endColumn":10,"suggestions":"230"},{"ruleId":"199","severity":1,"message":"231","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":13},{"ruleId":"199","severity":1,"message":"232","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":17},{"ruleId":"199","severity":1,"message":"233","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":18},{"ruleId":"199","severity":1,"message":"234","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":18},{"ruleId":"199","severity":1,"message":"235","line":10,"column":9,"nodeType":"201","messageId":"202","endLine":10,"endColumn":17},{"ruleId":"199","severity":1,"message":"236","line":10,"column":19,"nodeType":"201","messageId":"202","endLine":10,"endColumn":28},{"ruleId":"199","severity":1,"message":"214","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":19},{"ruleId":"237","severity":1,"message":"238","line":8,"column":37,"nodeType":"239","messageId":"240","endLine":8,"endColumn":38,"suggestions":"241"},{"ruleId":"237","severity":1,"message":"242","line":8,"column":42,"nodeType":"239","messageId":"240","endLine":8,"endColumn":43,"suggestions":"243"},{"ruleId":"237","severity":1,"message":"244","line":8,"column":45,"nodeType":"239","messageId":"240","endLine":8,"endColumn":46,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":10,"column":9,"nodeType":"248","messageId":"249","endLine":10,"endColumn":24},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],["250"],["251"],["250"],["251"],"no-unused-vars","'errorHandler' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.","ArrayExpression",["252"],["250"],["251"],["250"],["251"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["253"],"'setCurrentStudent' is assigned a value but never used.","'countryList' is defined but never used.","'Autocomplete' is defined but never used.","'countries' is defined but never used.","'ContrySelect' is defined but never used.",["250"],["251"],"React Hook useEffect has missing dependencies: 'errorHandler', 'logged', 'props.history', and 'userCtx'. Either include them or remove the dependency array.",["254"],["250"],["251"],"'has_digit' is defined but never used.","'has_lowercase' is defined but never used.","'has_special' is defined but never used.","'has_uppercase' is defined but never used.","'longer_8' is defined but never used.","'no_plus' is defined but never used.",["255"],"'Paper' is defined but never used.","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["256","257"],"Unnecessary escape character: \\[.",["258","259"],"Unnecessary escape character: \\`.",["260","261"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"264","fix":"268"},{"messageId":"269","fix":"270","desc":"271"},{"messageId":"272","fix":"273","desc":"274"},{"messageId":"269","fix":"275","desc":"271"},{"messageId":"272","fix":"276","desc":"274"},{"messageId":"269","fix":"277","desc":"271"},{"messageId":"272","fix":"278","desc":"274"},"Update the dependencies array to be: [page, searchTerm]",{"range":"279","text":"280"},"Update the dependencies array to be: [query]",{"range":"281","text":"282"},"Update the dependencies array to be: [errorHandler, logged, props.history, userCtx]",{"range":"283","text":"284"},{"range":"285","text":"282"},"removeEscape",{"range":"286","text":"287"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"288","text":"289"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"290","text":"287"},{"range":"291","text":"289"},{"range":"292","text":"287"},{"range":"293","text":"289"},[2372,2378],"[page, searchTerm]",[1432,1434],"[query]",[3105,3107],"[errorHandler, logged, props.history, userCtx]",[1453,1455],[264,265],"",[264,264],"\\",[269,270],[269,269],[272,273],[272,272]]