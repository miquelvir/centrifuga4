[{"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\index.js":"1","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\i18nextConf.js":"3","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\App\\App.js":"4","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\theme.js":"5","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\history.js":"6","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\auth.service.js":"7","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\PrivateRoute.js":"8","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\HomePage\\HomePage.js":"9","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\LoginPage\\LoginPage.js":"10","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\handle-response.js":"11","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\routes.js":"12","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\toolbar.home.component.js":"13","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.component.js":"14","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.component.js":"15","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.list.component.js":"16","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.attendee.component.js":"17","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\snackbar.report.js":"18","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.person.component.js":"19","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\dirtytextfield.component.js":"20","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_data\\countries.js":"21","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\searchbar.component.js":"22","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\students.service.js":"23","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\auth-header.js":"24","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\user-context.js":"25","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\loadingBackdrop.component.js":"26","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\theme-context.js":"27","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\SignupPage\\SignupPage.js":"28","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\signup.service.js":"29","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\ResetPage\\ResetPage.js":"30","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\password-reset.service.js":"31"},{"size":1130,"mtime":1609014856581,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1608888995468,"results":"34","hashOfConfig":"33"},{"size":1255,"mtime":1608888995467,"results":"35","hashOfConfig":"33"},{"size":2131,"mtime":1609082943741,"results":"36","hashOfConfig":"33"},{"size":1148,"mtime":1608888995469,"results":"37","hashOfConfig":"33"},{"size":101,"mtime":1609020760985,"results":"38","hashOfConfig":"33"},{"size":1290,"mtime":1609072483605,"results":"39","hashOfConfig":"33"},{"size":731,"mtime":1609018892322,"results":"40","hashOfConfig":"33"},{"size":6748,"mtime":1609020497896,"results":"41","hashOfConfig":"33"},{"size":7678,"mtime":1609088133427,"results":"42","hashOfConfig":"33"},{"size":1479,"mtime":1608984546322,"results":"43","hashOfConfig":"33"},{"size":1997,"mtime":1609020341691,"results":"44","hashOfConfig":"33"},{"size":6970,"mtime":1608927639687,"results":"45","hashOfConfig":"33"},{"size":1035,"mtime":1608888995462,"results":"46","hashOfConfig":"33"},{"size":2972,"mtime":1608888995463,"results":"47","hashOfConfig":"33"},{"size":5620,"mtime":1609001490949,"results":"48","hashOfConfig":"33"},{"size":2510,"mtime":1608888995462,"results":"49","hashOfConfig":"33"},{"size":2412,"mtime":1608888995461,"results":"50","hashOfConfig":"33"},{"size":13639,"mtime":1608940787827,"results":"51","hashOfConfig":"33"},{"size":918,"mtime":1608888995461,"results":"52","hashOfConfig":"33"},{"size":18744,"mtime":1608888995464,"results":"53","hashOfConfig":"33"},{"size":1394,"mtime":1608888995461,"results":"54","hashOfConfig":"33"},{"size":2323,"mtime":1608999357861,"results":"55","hashOfConfig":"33"},{"size":248,"mtime":1608888995465,"results":"56","hashOfConfig":"33"},{"size":194,"mtime":1608920620812,"results":"57","hashOfConfig":"33"},{"size":755,"mtime":1609001390974,"results":"58","hashOfConfig":"33"},{"size":193,"mtime":1609008273182,"results":"59","hashOfConfig":"33"},{"size":11420,"mtime":1609075807843,"results":"60","hashOfConfig":"33"},{"size":735,"mtime":1609075316944,"results":"61","hashOfConfig":"33"},{"size":7787,"mtime":1609085631399,"results":"62","hashOfConfig":"33"},{"size":1007,"mtime":1609085631369,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y56mi5",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\index.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\i18nextConf.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\App\\App.js",["134","135","136"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\theme.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\history.js",[],["137","138"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\auth.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\PrivateRoute.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\HomePage\\HomePage.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\LoginPage\\LoginPage.js",["139","140","141","142","143","144","145","146"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\handle-response.js",["147"],"import { authenticationService } from '../_services/auth.service';\r\nimport {userContext} from \"../_context/user-context\";\r\nimport React from 'react';\r\nimport report from \"../_components/snackbar.report\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport function useErrorHandler() {\r\n\r\n    const userCtx = React.useContext(userContext);\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\r\n    const {t} = useTranslation();\r\n\r\n    const successHandler = (res) => {\r\n        console.log(\"succ\");\r\n        return Promise.resolve(res);\r\n    }\r\n\r\n    const failureHandler = (res) => {\r\n        console.log(\"err\", res.request.status);\r\n        if (res.request.status === 401) {\r\n            console.log(\"errr\");\r\n            // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n            userCtx[\"setUser\"]({logged: false});\r\n\r\n            enqueueSnackbar(\"You are not logged in! 💂\", { variant: \"warning\"});\r\n\r\n            return Promise.reject(res);\r\n        }\r\n\r\n        enqueueSnackbar(\"Something went wrong! 😣\",\r\n                    {\r\n                        variant: \"error\",\r\n                        autoHideDuration: 10000,\r\n                        action: key => {\r\n                            return report(key, closeSnackbar, t, res)\r\n                        }\r\n                    });\r\n\r\n        return Promise.reject(res);\r\n    }\r\n\r\n    return [successHandler, failureHandler];\r\n}","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\routes.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\toolbar.home.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.component.js",["148","149"],"import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Attendee from \"./students.student.attendee.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n  },\r\n\r\n  contentPanel: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    boxSizing: \"border-box\"\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  sizeSmall: {\r\n    margin: theme.spacing(1),\r\n    width: \"25ch\"\r\n  },\r\n  sizeLong: {\r\n    margin: theme.spacing(1),\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Student(props) {\r\n  const currentStudent = props.currentStudent;\r\n  const setCurrentStudent = props.setCurrentStudent;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  console.log(\">>\", currentStudent);\r\n\r\n  let contacts = [1,2];\r\n\r\n  return (\r\n    <Paper elevation={3} square className={classes.contentPanel}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"full width tabs example\"\r\n                >\r\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\r\n                  {\r\n                  contacts && contacts.map((contact, index) => (\r\n                  <Tab label={t(\"contact \") + (index+1)} {...a11yProps(index)} />\r\n                      ))}\r\n                </Tabs>\r\n              </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <Attendee value={value}\r\n                      index={0}\r\n                      dir={theme.direction}\r\n                      title=\"attendee\"\r\n                      currentStudent={currentStudent}/>\r\n            {\r\n              contacts && contacts.map((contact, index) => (\r\n                   <Attendee value={value} index={index+1} dir={theme.direction} title={\"contact \" + (index + 1)}/>\r\n                  ))}\r\n\r\n            }\r\n          </SwipeableViews>\r\n          </Paper>\r\n  );\r\n}\r\n","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.list.component.js",["150","151","152","153"],"import React, {useEffect, useState} from \"react\";\r\nimport StudentsDataService from \"../_services/students.service\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SearchBar from './/searchbar.component'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Chip, ListItemSecondaryAction} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {useSnackbar} from 'notistack';\r\nimport report from \"./snackbar.report\";\r\nimport {useErrorHandler} from \"../_helpers/handle-response\";\r\nimport LoadingBackdrop from \"./loadingBackdrop.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxHeight: \"70vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    list: {\r\n        overflow: \"auto\",\r\n        // maxHeight: \"60vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flex: 1,\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    pagination: {\r\n        margin: '30px'\r\n    }\r\n}));\r\n\r\nconst StudentsList = (props) => {\r\n    const setCurrentStudent = props.setCurrentStudent;\r\n    const [students, setStudents] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const {t} = useTranslation();\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(3);\r\n\r\n    const classes = useStyles();\r\n\r\n    const errorHandler = useErrorHandler();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onChangeSearchTerm = (e) => {\r\n        console.log(e.target.value);\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    function search() {\r\n        StudentsDataService.getAll(searchTerm, false, page).then(...errorHandler).then(\r\n            function (result) {\r\n                console.log(\"1\");\r\n                setStudents(result[\"data\"]);\r\n                setCount(result[\"_pagination\"][\"totalPages\"]);\r\n            });\r\n    }\r\n\r\n    useEffect(search, [page, pageSize]);\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    function exportCsv() {\r\n        setLoading(true);\r\n        StudentsDataService\r\n            .getAll(searchTerm, true, page)\r\n            .then(...errorHandler)\r\n            .finally(()=>{\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <LoadingBackdrop loading={loading}/>\r\n            <Box className={classes.box}>\r\n                <SearchBar\r\n                    label={t(\"students\")}\r\n                    value={searchTerm}\r\n                    onChange={onChangeSearchTerm}\r\n                    onSearch={search}\r\n                />\r\n                <Box my={1}>\r\n                    <Tooltip title={t(\"export search results as .csv\")} aria-label={t(\"export search results as .csv\")}>\r\n                        <Chip variant=\"outlined\" size=\"small\" avatar={<Avatar>csv</Avatar>} label=\"export\"\r\n                              onClick={exportCsv}/>\r\n                    </Tooltip>\r\n                </Box>\r\n                <Box my={2}>\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        count={count}\r\n                        page={page}\r\n                        size=\"small\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                        siblingCount={1}\r\n                        boundaryCount={1}\r\n                        color=\"primary\"\r\n                        onChange={handlePageChange}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <List className={classes.list}>\r\n                {students && students.map((student, index) => (\r\n                    <div>\r\n                        <ListItem key={index} button\r\n                                  onClick={() => {\r\n                                      setCurrentStudent(student);\r\n                                  }}>\r\n                            <ListItemAvatar>\r\n                                <Avatar>{student.name.charAt(0).toUpperCase()}</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText id=\"name\" primary={student.name}/>\r\n                            <Tooltip title={t(\"export .csv\")}\r\n                                     aria-label={t(\"export student as .csv\")}>\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"export\">\r\n                                        <GetAppIcon/>\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </Tooltip>\r\n                        </ListItem>\r\n                        <Divider/>\r\n                    </div>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default StudentsList;\r\n","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.attendee.component.js",["154"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {MenuItem, TextField} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Person from \"./students.student.person.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  sizeSmall: {\r\n    width: \"25ch\"\r\n  },\r\n  line: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  composite: {display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n    gap: theme.spacing(1), width: \"100%\"}\r\n}));\r\n\r\nfunction Attendee(props) {\r\n  const { children, value, index, title, currentStudent, ...other } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const loading = false;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n            <Box px={2}>\r\n              <h1>{title}</h1>\r\n\r\n              <Person currentPerson={currentStudent}/>\r\n\r\n              {loading || currentStudent === null\r\n              ?\r\n                  (<Box>\r\n                        <Divider variant=\"middle\" />\r\n                        <Box py={1}><Skeleton variant=\"text\" width=\"35%\" height=\"45px\"></Skeleton></Box>\r\n                      </Box>)\r\n                  :\r\n                  (\r\n\r\n                          <Box py={2}>\r\n                            <Divider variant=\"middle\" />\r\n                            <Box className={classes.line}>\r\n              <TextField\r\n                  id=\"standard-basic\"\r\n                  label={t(\"price per term (€)\")}\r\n                  type=\"number\"\r\n                  className={classes.sizeSmall}\r\n                  value={currentStudent[\"price_term\"]}\r\n              />\r\n                          </Box>\r\n\r\n                          </Box>\r\n              )\r\n\r\n              }\r\n            </Box>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nAttendee.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Attendee;","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\snackbar.report.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\students.student.person.component.js",["155","156","157","158","159"],"import {useTranslation} from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Button, DialogActions, MenuItem, TextField} from \"@material-ui/core\";\r\nimport countryList from \"../_data/countries\";\r\nimport React, {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport DirtyTextField from \"./dirtytextfield.component\";\r\nimport {\r\n    Formik, Form, Field, ErrorMessage, useFormik,\r\n} from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    fullWidth: {\r\n        width: \"100%\"\r\n    },\r\n    sizeSmall: {\r\n        width: \"25ch\"\r\n    },\r\n    line: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    composite: {\r\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\r\n        gap: theme.spacing(1), width: \"100%\"\r\n    }\r\n}));\r\n\r\nfunction Person(props) {\r\n    const currentPerson = props.currentPerson;\r\n    const {t} = useTranslation();\r\n    const loading = false;\r\n    const classes = useStyles();\r\n\r\n    console.log(props, currentPerson);\r\n\r\n    const formik = useFormik({\r\n        initialValues: currentPerson===null? {}:currentPerson,\r\n        validationSchema: yup.object({\r\n                                email: yup.string().email('Enter a valid email.'),\r\n                                name: yup.string().required('Required')\r\n                            }),\r\n        enableReinitialize: true,\r\n        onSubmit: (values) => {\r\n          alert(JSON.stringify(values, null, 2));\r\n        }\r\n    });\r\n\r\n    console.log(formik.values);\r\n\r\n    return (\r\n        <Box>\r\n            {loading || currentPerson === null\r\n                ?\r\n                (\r\n\r\n                    <Box>\r\n                        {\r\n                            [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map(value => {\r\n                                return (\r\n                                    <Box py={0}><Skeleton variant=\"text\" width={value} height=\"60px\"></Skeleton></Box>);\r\n                            })\r\n                        }\r\n                    </Box>\r\n                )\r\n                :\r\n                (\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                                        <TextField\r\n                                            label={t(\"id\")}\r\n                                            name=\"id\"\r\n                                            disabled\r\n                                            className={classes.line}\r\n                                            value={formik.values[\"id\"]}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            />\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                label={t(\"name\")}\r\n                                                style={{flex: 1}}\r\n                                                name=\"name\"\r\n                                                value={formik.values[\"name\"]}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                                formik={formik}\r\n                                                helperText={formik.touched[\"name\"] && formik.errors[\"name\"]}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                label={t(\"surname1\")}\r\n                                                style={{flex: 1}}\r\n                                                name=\"surname1\"\r\n                                                formik={formik}\r\n                                                value={formik.values[\"surname1\"]}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                label={t(\"surname2\")}\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"surname2\"\r\n                                                value={formik.values[\"surname2\"]}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                            />\r\n                                        </Box>\r\n\r\n                                    <Box className={[classes.line, classes.composite]}>\r\n                                        <DirtyTextField\r\n                                            label={t(\"email\")}\r\n                                            type=\"email\"\r\n                                            style={{flex: 1}}\r\n                                                formik={formik}\r\n                                            name=\"email\"\r\n                                            value={formik.values[\"email\"]}\r\n                                            helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\r\n                                            error={formik.errors[\"email\"]}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                        />\r\n                                    </Box>\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                label={t(\"address\")}\r\n                                                formik={formik}\r\n                                                style={{flex: 4}}\r\n                                                name=\"address\"\r\n                                                value={formik.values.address}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"city\")}\r\n                                                style={{flex: 2}}\r\n                                                formik={formik}\r\n                                                name=\"city\"\r\n                                            value={formik.values.city}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"zip\")}\r\n                                                formik={formik}\r\n                                                type=\"number\"\r\n                                                style={{flex: 1}}\r\n                                                name=\"zip\"\r\n                                            value={formik.values[\"zip\"]}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"dni\")}\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"dni\"\r\n                                            value={formik.values[\"dni\"]}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            />\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"phone\")}\r\n                                                type=\"tel\"\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"phone\"\r\n                                            value={formik.values[\"phone\"]}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            />\r\n\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"gender\")}\r\n                                                style={{flex: 1}}\r\n                                                formik={formik}\r\n                                                name=\"gender\"\r\n                                            value={formik.values[\"gender\"]}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                                select>\r\n                                                <MenuItem value=\"m\">male</MenuItem>\r\n                                                <MenuItem value=\"f\">female</MenuItem>\r\n                                                <MenuItem value=\"nb\">non binary / not represented by any of the\r\n                                                    above</MenuItem>\r\n                                            </DirtyTextField>\r\n\r\n                                        </Box>\r\n\r\n                                        <Box className={[classes.line, classes.composite]}>\r\n\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"birthdate\")}\r\n                                                formik={formik}\r\n                                                type=\"date\"\r\n                                                style={{flex: 1}}\r\n                                                name=\"birth_date\"\r\n                                            value={formik.values[\"birth_date\"]}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                                InputLabelProps={{shrink: true}}/>\r\n\r\n                                            <DirtyTextField\r\n                                                id=\"standard-basic\"\r\n                                                label={t(\"country_of_origin\")}\r\n                                                style={{flex: 1}}\r\n                                                name=\"country_of_origin\"\r\n                                                formik={formik}\r\n                                            value={formik.values[\"country_of_origin\"]}\r\n                                                  onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                                select>\r\n\r\n                                                {countryList.map((country, idx) => {\r\n                                                    return (<MenuItem value={country.code}>{country.name}</MenuItem>)\r\n                                                })}\r\n                                            </DirtyTextField>\r\n\r\n                                        </Box>\r\n\r\n                                        <DialogActions>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                className=\"outline\"\r\n                                                onClick={formik.handleReset}\r\n                                                disabled={!formik.dirty || formik.isSubmitting}\r\n                                            >\r\n                                                Reset\r\n                                            </Button>\r\n                                            <Button type=\"submit\" disabled={formik.isSubmitting}>\r\n                                                Submit\r\n                                            </Button>\r\n                                            {/* <DisplayFormikState {...props} /> */}\r\n                                        </DialogActions>\r\n                                    </form>\r\n                )\r\n\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport default Person;","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\dirtytextfield.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_data\\countries.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\searchbar.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\students.service.js",["160"],"import {authHeader} from \"../_helpers/auth-header\";\r\n\r\nconst axios = require('axios');\r\n\r\nclass StudentsDataService {\r\n\r\n  getAll(searchText, download=false, page=1) {\r\n      const res = '/students';\r\n      if (download){\r\n          return new Promise(function(resolve, reject) {\r\n              axios({\r\n                  url: 'https://127.0.0.1:4999/api/v1/students',\r\n                  method: 'GET',\r\n                  responseType: 'blob', // important\r\n                  params: {\r\n                      \"filter.full_name.like\": '%' + searchText + '%',\r\n                      \"page\": page\r\n                  },\r\n                  headers: {...{\r\n                      'Accept': 'text/csv'\r\n                  }, ...authHeader()}\r\n              }).then(response => {\r\n                  console.log(response);\r\n                  let filename = response.headers[\"content-disposition\"].split(\"filename=\")[1];\r\n                  if (filename === null) filename = \"export.csv\";\r\n\r\n                  const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                  const link = document.createElement('a');\r\n                  link.href = url;\r\n                  link.setAttribute('download', filename);\r\n                  document.body.appendChild(link);\r\n                  link.click();\r\n                  link.remove();\r\n                  resolve();\r\n              }).catch(function (err) {\r\n                  console.log(\"0\" + err);\r\n                reject(Error(err));\r\n              });\r\n          });\r\n      }\r\n      return new Promise(function(resolve, reject) {\r\n          axios({\r\n              method: 'get',\r\n              url: 'https://127.0.0.1:4999/api/v1/students',\r\n              params: {\r\n                  \"filter.full_name.like\": '%' + searchText + '%',\r\n                  \"page\": page\r\n              },\r\n              headers: {...{\r\n                  'Content-Type': 'application/json'\r\n              }, ...authHeader()}\r\n            })\r\n              .then(function (response) {\r\n                  console.log(\"hiro\");\r\n                resolve(response.data);\r\n              }).catch(function (err) {\r\n                  console.log(\"hiro2\", err);\r\n              reject(err);\r\n          });\r\n        });\r\n  }\r\n\r\n  // other CRUD methods\r\n}\r\n\r\nexport default new StudentsDataService();","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_helpers\\auth-header.js",["161"],"import { authenticationService } from '../_services/auth.service';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport function authHeader() {\r\n    // return authorization header with jwt token\r\n    return { 'X-CSRF-TOKEN': Cookies.get('X-CSRF-TOKEN')};\r\n}","C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\user-context.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_components\\loadingBackdrop.component.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_context\\theme-context.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\SignupPage\\SignupPage.js",["162","163","164","165","166","167","168","169","170","171"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\signup.service.js",[],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\ResetPage\\ResetPage.js",["172","173","174","175","176","177","178","179","180","181","182"],"C:\\Users\\vazqu\\xamfra\\centrifuga4\\centrifuga4-frontend\\src\\_services\\password-reset.service.js",[],{"ruleId":"183","severity":1,"message":"184","line":9,"column":10,"nodeType":"185","messageId":"186","endLine":9,"endColumn":31},{"ruleId":"183","severity":1,"message":"187","line":13,"column":25,"nodeType":"185","messageId":"186","endLine":13,"endColumn":29},{"ruleId":"183","severity":1,"message":"188","line":14,"column":9,"nodeType":"185","messageId":"186","endLine":14,"endColumn":13},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"183","severity":1,"message":"193","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":15},{"ruleId":"183","severity":1,"message":"194","line":2,"column":17,"nodeType":"185","messageId":"186","endLine":2,"endColumn":22},{"ruleId":"183","severity":1,"message":"195","line":2,"column":24,"nodeType":"185","messageId":"186","endLine":2,"endColumn":28},{"ruleId":"183","severity":1,"message":"196","line":2,"column":30,"nodeType":"185","messageId":"186","endLine":2,"endColumn":42},{"ruleId":"183","severity":1,"message":"197","line":4,"column":9,"nodeType":"185","messageId":"186","endLine":4,"endColumn":17},{"ruleId":"183","severity":1,"message":"198","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},{"ruleId":"183","severity":1,"message":"199","line":17,"column":9,"nodeType":"185","messageId":"186","endLine":17,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":98,"column":8,"nodeType":"202","endLine":98,"endColumn":10,"suggestions":"203"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":31},{"ruleId":"183","severity":1,"message":"204","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"205","line":48,"column":9,"nodeType":"185","messageId":"186","endLine":48,"endColumn":26},{"ruleId":"183","severity":1,"message":"206","line":18,"column":9,"nodeType":"185","messageId":"186","endLine":18,"endColumn":20},{"ruleId":"183","severity":1,"message":"198","line":19,"column":8,"nodeType":"185","messageId":"186","endLine":19,"endColumn":14},{"ruleId":"200","severity":1,"message":"207","line":76,"column":23,"nodeType":"202","endLine":76,"endColumn":39,"suggestions":"208"},{"ruleId":"183","severity":1,"message":"209","line":82,"column":11,"nodeType":"185","messageId":"186","endLine":82,"endColumn":31},{"ruleId":"183","severity":1,"message":"210","line":4,"column":9,"nodeType":"185","messageId":"186","endLine":4,"endColumn":17},{"ruleId":"183","severity":1,"message":"211","line":5,"column":16,"nodeType":"185","messageId":"186","endLine":5,"endColumn":24},{"ruleId":"183","severity":1,"message":"193","line":10,"column":5,"nodeType":"185","messageId":"186","endLine":10,"endColumn":11},{"ruleId":"183","severity":1,"message":"195","line":10,"column":13,"nodeType":"185","messageId":"186","endLine":10,"endColumn":17},{"ruleId":"183","severity":1,"message":"194","line":10,"column":19,"nodeType":"185","messageId":"186","endLine":10,"endColumn":24},{"ruleId":"183","severity":1,"message":"196","line":10,"column":26,"nodeType":"185","messageId":"186","endLine":10,"endColumn":38},{"ruleId":"183","severity":1,"message":"212","line":8,"column":13,"nodeType":"185","messageId":"186","endLine":8,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":31},{"ruleId":"183","severity":1,"message":"204","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"193","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":15},{"ruleId":"183","severity":1,"message":"194","line":2,"column":17,"nodeType":"185","messageId":"186","endLine":2,"endColumn":22},{"ruleId":"183","severity":1,"message":"195","line":2,"column":24,"nodeType":"185","messageId":"186","endLine":2,"endColumn":28},{"ruleId":"183","severity":1,"message":"196","line":2,"column":30,"nodeType":"185","messageId":"186","endLine":2,"endColumn":42},{"ruleId":"183","severity":1,"message":"184","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":30},{"ruleId":"183","severity":1,"message":"197","line":4,"column":9,"nodeType":"185","messageId":"186","endLine":4,"endColumn":17},{"ruleId":"183","severity":1,"message":"213","line":5,"column":9,"nodeType":"185","messageId":"186","endLine":5,"endColumn":20},{"ruleId":"183","severity":1,"message":"198","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},{"ruleId":"183","severity":1,"message":"199","line":17,"column":9,"nodeType":"185","messageId":"186","endLine":17,"endColumn":13},{"ruleId":"183","severity":1,"message":"204","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"193","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":15},{"ruleId":"183","severity":1,"message":"194","line":2,"column":17,"nodeType":"185","messageId":"186","endLine":2,"endColumn":22},{"ruleId":"183","severity":1,"message":"195","line":2,"column":24,"nodeType":"185","messageId":"186","endLine":2,"endColumn":28},{"ruleId":"183","severity":1,"message":"196","line":2,"column":30,"nodeType":"185","messageId":"186","endLine":2,"endColumn":42},{"ruleId":"183","severity":1,"message":"184","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":30},{"ruleId":"183","severity":1,"message":"197","line":4,"column":9,"nodeType":"185","messageId":"186","endLine":4,"endColumn":17},{"ruleId":"183","severity":1,"message":"213","line":5,"column":9,"nodeType":"185","messageId":"186","endLine":5,"endColumn":20},{"ruleId":"183","severity":1,"message":"198","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},{"ruleId":"183","severity":1,"message":"199","line":17,"column":9,"nodeType":"185","messageId":"186","endLine":17,"endColumn":13},{"ruleId":"183","severity":1,"message":"214","line":18,"column":34,"nodeType":"185","messageId":"186","endLine":18,"endColumn":47},"no-unused-vars","'authenticationService' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Home' is defined but never used.","no-native-reassign",["215"],"no-negated-in-lhs",["216"],"'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'ErrorMessage' is defined but never used.","'Redirect' is defined but never used.","'report' is defined but never used.","'func' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logged', 'props.history', and 'userCtx'. Either include them or remove the dependency array.","ArrayExpression",["217"],"'useEffect' is defined but never used.","'setCurrentStudent' is assigned a value but never used.","'useSnackbar' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'searchTerm'. Either include them or remove the dependency array.",["218"],"'handlePageSizeChange' is assigned a value but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'res' is assigned a value but never used.","'userContext' is defined but never used.","'signupService' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [logged, props.history, userCtx]",{"range":"223","text":"224"},"Update the dependencies array to be: [errorHandler, page, pageSize, searchTerm]",{"range":"225","text":"226"},[3115,3117],"[logged, props.history, userCtx]",[2547,2563],"[errorHandler, page, pageSize, searchTerm]"]