[{"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js":"1","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js":"2","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js":"3","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/routes.js":"4","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js":"5","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js":"6","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js":"7","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js":"8","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js":"9","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js":"10","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js":"11","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js":"12","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js":"13","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js":"14","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js":"15","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js":"16","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js":"17","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js":"18","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js":"19","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js":"20","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js":"21","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js":"22","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js":"23","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js":"24","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js":"25","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js":"26","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js":"27","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js":"28","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js":"29","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js":"30","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js":"31"},{"size":1469,"mtime":1609237004709,"results":"32","hashOfConfig":"33"},{"size":96,"mtime":1609237004601,"results":"34","hashOfConfig":"33"},{"size":6556,"mtime":1609237004693,"results":"35","hashOfConfig":"33"},{"size":1894,"mtime":1608814505864,"results":"36","hashOfConfig":"33"},{"size":834,"mtime":1609264677034,"results":"37","hashOfConfig":"33"},{"size":5313,"mtime":1609245842813,"results":"38","hashOfConfig":"33"},{"size":6114,"mtime":1609283018250,"results":"39","hashOfConfig":"33"},{"size":13498,"mtime":1609250043345,"results":"40","hashOfConfig":"33"},{"size":174,"mtime":1609264823340,"results":"41","hashOfConfig":"33"},{"size":1957,"mtime":1609273337549,"results":"42","hashOfConfig":"33"},{"size":190,"mtime":1609237004661,"results":"43","hashOfConfig":"33"},{"size":189,"mtime":1609237004665,"results":"44","hashOfConfig":"33"},{"size":11148,"mtime":1609284157861,"results":"45","hashOfConfig":"33"},{"size":2854,"mtime":1609237004729,"results":"46","hashOfConfig":"33"},{"size":12503,"mtime":1609250174495,"results":"47","hashOfConfig":"33"},{"size":1093,"mtime":1608812823740,"results":"48","hashOfConfig":"33"},{"size":1167,"mtime":1609272998086,"results":"49","hashOfConfig":"33"},{"size":2443,"mtime":1609243320542,"results":"50","hashOfConfig":"33"},{"size":1540,"mtime":1609286126071,"results":"51","hashOfConfig":"33"},{"size":6821,"mtime":1609287025417,"results":"52","hashOfConfig":"33"},{"size":731,"mtime":1609097773908,"results":"53","hashOfConfig":"33"},{"size":708,"mtime":1609237004697,"results":"54","hashOfConfig":"33"},{"size":7551,"mtime":1609286349896,"results":"55","hashOfConfig":"33"},{"size":993,"mtime":1609237004733,"results":"56","hashOfConfig":"33"},{"size":895,"mtime":1608814356173,"results":"57","hashOfConfig":"33"},{"size":7350,"mtime":1609284131925,"results":"58","hashOfConfig":"33"},{"size":1338,"mtime":1609237004653,"results":"59","hashOfConfig":"33"},{"size":2343,"mtime":1609249815052,"results":"60","hashOfConfig":"33"},{"size":1217,"mtime":1609287125732,"results":"61","hashOfConfig":"33"},{"size":854,"mtime":1609284890126,"results":"62","hashOfConfig":"33"},{"size":362,"mtime":1608812823740,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1d3a0qb",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js",[],["144","145"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js",[],["146","147"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js",[],["148","149"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/routes.js",[],["150","151"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js",["152"],"import React, {useEffect, useState} from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchBar from './searchbar.component'\nimport Box from \"@material-ui/core/Box\";\nimport {useTranslation} from \"react-i18next\";\nimport {Chip, ListItemSecondaryAction} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport LoadingBackdrop from \"./loadingBackdrop.component\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxHeight: \"70vh\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    list: {\n        overflow: \"auto\",\n        // maxHeight: \"60vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: '30px'\n    }\n}));\n\nconst StudentsList = (props) => {\n    const setCurrentStudent = props.setCurrentStudent;\n    const [students, setStudents] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const {t} = useTranslation();\n\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n\n    const classes = useStyles();\n\n    const errorHandler = useErrorHandler();\n\n    const [loading, setLoading] = useState(false);\n\n    const onChangeSearchTerm = (e) => {\n        console.log(e.target.value);\n        setSearchTerm(e.target.value);\n    };\n\n    function search() {\n        console.log(\"searching...\");\n        StudentsDataService\n            .getAll(searchTerm, false, page)\n            .then(...errorHandler())\n            .then(function (res) {\n                    console.log(\"1\");\n                    console.log(res);\n                    setStudents(res[\"data\"]);\n                    setCount(res[\"_pagination\"][\"totalPages\"]);\n                });\n    }\n\n    useEffect(search, [page]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n    function exportCsv() {\n        setLoading(true);\n        StudentsDataService\n            .getAll(searchTerm, true, page)\n            .then(...errorHandler())\n            .finally(()=>{\n                setLoading(false);\n            });\n    }\n\n    return (\n        <Box className={classes.root}>\n            <LoadingBackdrop loading={loading}/>\n            <Box className={classes.box}>\n                <SearchBar\n                    label={t(\"students\")}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={search}\n                />\n                <Box my={1}>\n                    <Tooltip title={t(\"export_results_csv\")} aria-label={t(\"export_results_csv\")}>\n                        <Chip variant=\"outlined\" size=\"small\" avatar={<Avatar>csv</Avatar>} label={t(\"export\")}\n                              onClick={exportCsv}/>\n                    </Tooltip>\n                </Box>\n                <Box my={2}>\n                    <Pagination\n                        className=\"pagination\"\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            </Box>\n            <List className={classes.list}>\n                {students && students.map((student, index) => (\n                    <div>\n                        <ListItem key={student[\"id\"]} button\n                                  onClick={() => {\n                                      setCurrentStudent(student);\n                                  }}>\n                            <ListItemAvatar>\n                                <Avatar>{student.name.charAt(0).toUpperCase()}</Avatar>\n                            </ListItemAvatar>\n                            <ListItemText id=\"name\" primary={student.name}/>\n                            <Tooltip title={t(\"export .csv\")}\n                                     aria-label={t(\"export student as .csv\")}>\n                                <ListItemSecondaryAction>\n                                    <IconButton edge=\"end\" aria-label=\"export\">\n                                        <GetAppIcon/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </Tooltip>\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n        </Box>\n    );\n};\n\nexport default StudentsList;\n",["153","154"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js",[],["155","156"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js",[],["157","158"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js",["159"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js",["160"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n  },\n\n  contentPanel: {\n    flex: 1,\n    overflow: \"auto\",\n    boxSizing: \"border-box\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  sizeSmall: {\n    margin: theme.spacing(1),\n    width: \"25ch\"\n  },\n  sizeLong: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\n\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nexport default function Student(props) {\n  const currentStudent = props.currentStudent;\n  const setCurrentStudent = props.setCurrentStudent;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  console.log(\">>\", currentStudent);\n\n  let contacts = [1,2];\n\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"fullWidth\"\n                  aria-label=\"full width tabs example\"\n                >\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\n                  {\n                  contacts && contacts.map((contact, index) => (\n                  <Tab label={t(\"contact \") + (index+1)} {...a11yProps(index)} />\n                      ))}\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <Attendee value={value}\n                      index={0}\n                      dir={theme.direction}\n                      title=\"attendee\"\n                      currentStudent={currentStudent}/>\n            {\n              contacts && contacts.map((contact, index) => (\n                   <Attendee value={value} index={index+1} dir={theme.direction} title={\"contact \" + (index + 1)}/>\n                  ))}\n\n            }\n          </SwipeableViews>\n          </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js",["161","162","163","164"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {Button, DialogActions, MenuItem, TextField} from \"@material-ui/core\";\nimport countryList from \"../_data/countries\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Autocomplete, Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {useFormik,} from 'formik';\nimport * as yup from 'yup';\nimport countries from \"../_data/countries\";\nimport ContrySelect from \"./contry-select.component\";\nimport CountrySelect from \"./contry-select.component\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    fullWidth: {\n        width: \"100%\"\n    },\n    sizeSmall: {\n        width: \"25ch\"\n    },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction Person(props) {\n    const currentPerson = props.currentPerson;\n    const {t} = useTranslation();\n    const loading = false;\n    const classes = useStyles();\n\n    console.log(props, currentPerson);\n\n    const formik = useFormik({\n        initialValues: currentPerson===null? {}:currentPerson,\n        validationSchema: yup.object({\n                                email: yup.string().email('Enter a valid email.'),\n                                name: yup.string().required('Required')\n                            }),\n        enableReinitialize: true,\n        onSubmit: (values) => {\n          alert(JSON.stringify(values, null, 2));\n        }\n    });\n\n    console.log(formik.values);\n\n    return (\n        <Box>\n            {loading || currentPerson === null\n                ?\n                (\n\n                    <Box>\n                        {\n                            [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map(value => {\n                                return (\n                                    <Box py={0}><Skeleton variant=\"text\" width={value} height=\"60px\"></Skeleton></Box>);\n                            })\n                        }\n                    </Box>\n                )\n                :\n                (\n                        <form onSubmit={formik.handleSubmit}>\n                                        <TextField\n                                            label={t(\"id\")}\n                                            name=\"id\"\n                                            disabled\n                                            className={classes.line}\n                                            value={formik.values[\"id\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                label={t(\"name\")}\n                                                style={{flex: 1}}\n                                                name=\"name\"\n                                                value={formik.values[\"name\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                                formik={formik}\n                                                helperText={formik.touched[\"name\"] && formik.errors[\"name\"]}\n                                            />\n                                            <DirtyTextField\n                                                label={t(\"surname1\")}\n                                                style={{flex: 1}}\n                                                name=\"surname1\"\n                                                formik={formik}\n                                                value={formik.values[\"surname1\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                label={t(\"surname2\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"surname2\"\n                                                value={formik.values[\"surname2\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </Box>\n\n                                    <Box className={[classes.line, classes.composite]}>\n                                        <DirtyTextField\n                                            label={t(\"email\")}\n                                            type=\"email\"\n                                            style={{flex: 1}}\n                                                formik={formik}\n                                            name=\"email\"\n                                            value={formik.values[\"email\"]}\n                                            helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                                            error={formik.errors[\"email\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                        />\n                                    </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                label={t(\"address\")}\n                                                formik={formik}\n                                                style={{flex: 4}}\n                                                name=\"address\"\n                                                value={formik.values.address}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"city\")}\n                                                style={{flex: 2}}\n                                                formik={formik}\n                                                name=\"city\"\n                                            value={formik.values.city}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"zip\")}\n                                                formik={formik}\n                                                type=\"number\"\n                                                style={{flex: 1}}\n                                                name=\"zip\"\n                                            value={formik.values[\"zip\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                        </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"dni\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"dni\"\n                                            value={formik.values[\"dni\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"phone\")}\n                                                type=\"tel\"\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"phone\"\n                                            value={formik.values[\"phone\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"gender\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"gender\"\n                                            value={formik.values[\"gender\"] === null? '': formik.values[\"gender\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                                select>\n                                                <MenuItem value=\"m\">male</MenuItem>\n                                                <MenuItem value=\"f\">female</MenuItem>\n                                                <MenuItem value=\"nb\">non binary / not represented by any of the\n                                                    above</MenuItem>\n                                            </DirtyTextField>\n\n                                        </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"birthdate\")}\n                                                formik={formik}\n                                                type=\"date\"\n                                                style={{flex: 1}}\n                                                name=\"birth_date\"\n                                            value={formik.values[\"birth_date\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                                InputLabelProps={{shrink: true}}/>\n\n                                            <CountrySelect formik={formik}/>\n\n                                        </Box>\n\n                                        <DialogActions>\n                                            <Button\n                                                type=\"button\"\n                                                className=\"outline\"\n                                                onClick={formik.handleReset}\n                                                disabled={!formik.dirty || formik.isSubmitting}\n                                            >\n                                                Reset\n                                            </Button>\n                                            <Button type=\"submit\" disabled={formik.isSubmitting}>\n                                                Submit\n                                            </Button>\n\n                                        </DialogActions>\n                                    </form>\n                )\n\n            }\n        </Box>\n    );\n}\n\n\nexport default Person;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js",[],["165","166"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js",["167"],"import {authHeader} from \"../_helpers/auth-header\";\n\nconst axios = require('axios');\n\nclass StudentsDataService {\n\n  getAll(searchText, download=false, page=1) {\n      const res = '/students';\n      console.log(download);\n      if (download){\n          return new Promise(function(resolve, reject) {\n              axios({\n                  url: 'https://127.0.0.1:4999/api/v1/students',\n                  method: 'GET',\n                  responseType: 'blob', // important\n                  params: {\n                      \"filter.full_name.like\": '%' + searchText + '%',\n                      \"page\": page\n                  },\n                  headers: {...{\n                      'Accept': 'text/csv',\n                      'Cache-Control': 'no-cache'\n                  }, ...authHeader()}\n              }).then(response => {\n                  console.log(response);\n                  let filename = response.headers[\"content-disposition\"].split(\"filename=\")[1];\n                  if (filename === null) filename = \"export.csv\";\n\n                  const url = window.URL.createObjectURL(new Blob([response.data]));\n                  const link = document.createElement('a');\n                  link.href = url;\n                  link.setAttribute('download', filename);\n                  document.body.appendChild(link);\n                  link.click();\n                  link.remove();\n                  resolve();\n              }).catch(function (err) {\n                  console.log(\"0\" + err);\n                reject(Error(err));\n              });\n          });\n      }\n      console.log(\"hirooo\");\n      return new Promise(function(resolve, reject) {\n          axios({\n              method: 'get',\n              url: 'https://127.0.0.1:4999/api/v1/students',\n              params: {\n                  \"filter.full_name.like\": '%' + searchText + '%',\n                  \"page\": page\n              },\n              headers: {...{\n                  'Content-Type': 'application/json',\n                      'Cache-Control': 'no-cache'\n              }, ...authHeader()}\n            })\n              .then(function (response) {\n                  console.log(\"hiro\", response, response.data);\n                resolve(response.data);\n              }).catch(function (err) {\n                  console.log(\"hiro2\", err);\n              reject(err);\n          });\n        });\n  }\n\n  // other CRUD methods\n}\n\nexport default new StudentsDataService();","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js",[],["168","169"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js",["170"],"import React, {useEffect} from 'react';\nimport {useFormik} from 'formik';\nimport {authenticationService} from '../_services/auth.service';\nimport {userContext} from \"../_context/user-context\";\nimport * as yup from 'yup';\nimport {TextField} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {themeContext} from \"../_context/theme-context\";\nimport Link from \"@material-ui/core/Link\";\nimport {passwordResetService} from \"../_services/password-reset.service\";\nimport {useSnackbar} from \"notistack\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexGrow: 1,\n        height: \"100vh\"\n    },\n    field: {\n        width: \"100%\",\n        margin: \"5px\"\n    },\n    paper: {\n        width: \"50%\",\n        height: \"50%\",\n        minWidth: \"500px\",\n        padding: \"50px\",\n        margin: \"auto\"\n    },\n    reset: {\n        width: \"100%\",\n        textAlign: \"end\",\n        cursor: \"\"\n    }\n}));\n\n\nconst LoginPage = (props) => {\n    const classes = useStyles();\n    const userCtx = React.useContext(userContext);\n    const themeCtx = React.useContext(themeContext);\n\n    const errorHandler = useErrorHandler();\n\n    const {enqueueSnackbar} = useSnackbar();\n\n    const logged = () => {\n        const setLogged = userCtx[\"setUser\"];\n        setLogged({logged: true});\n        const {from} = props.location.state || {from: {pathname: \"/\"}};\n        props.history.push(from);\n    }\n\n    const {t} = useTranslation();\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        validationSchema: yup.object({\n            username: yup.string().required(t(\"email_required\")).email(t(\"invalid_email\")),\n            password: yup.string().required(t(\"password_required\"))\n        }),\n        enableReinitialize: true,\n        onSubmit: ({username, password}, {setStatus, setSubmitting}) => {\n            setStatus();\n            authenticationService.login(username, password)\n                .then(...errorHandler())\n                .then(function (success) {\n                        if (success) {\n                            logged();\n                        } else {\n                            setStatus(true);\n                        }\n                    })\n                .finally(() => {\n                        setSubmitting(false);\n                });\n        }\n    });\n\n    useEffect(() => {\n        if (userCtx[\"user\"][\"logged\"]) {\n            props.history.push('/');\n            return null;\n        }\n\n        authenticationService.ping()\n            .then(...errorHandler())\n            .then((success) => { if (success) logged(); });  // ignore failed ping (it is just not logged in)\n    }, []);\n\n    const resetPassword = () => {\n        const username = formik.values[\"username\"];\n        if (username === null || username === '' || username === undefined) {\n            enqueueSnackbar(t(\"username_required_password_reset\"), { variant: \"warning\"});\n        } else {\n            passwordResetService.startReset(username).then(r => {\n                enqueueSnackbar(t(\"started_password_reset\"), { variant: \"success\"});\n            })\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid xs={2} item/>\n\n                <Grid xs={8} item>\n                    <Grid\n                        container\n                        spacing={0}\n                        align=\"center\"\n                        justify=\"center\"\n                        direction=\"column\"\n                        style={{height: \"100%\"}}\n                    >\n                        <Grid item>\n                            <Box m={2}>\n                                <Paper className={classes.paper}>\n                                    <img src={themeCtx.theme? \"logo_centrifuga4_dark.svg\": \"logo_centrifuga4_light.svg\"} alt=\"Logo Centrífuga\" style={{height: \"85px\"}}/>\n\n                                    <form onSubmit={formik.handleSubmit}>\n                                        <TextField\n                                            label={t(\"email\")}\n                                            disabled={formik.isSubmitting}\n                                            helperText={formik.touched[\"username\"] && formik.errors[\"username\"]}\n                                            type=\"email\"\n                                            name=\"username\"\n                                            className={classes.field}\n                                            value={formik.values[\"username\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"password\")}\n                                            name=\"password\"\n                                            type=\"password\"\n                                            helperText={formik.touched[\"password\"] && formik.errors[\"password\"]}\n                                            className={classes.field}\n                                            value={formik.values[\"password\"]}\n                                            disabled={formik.isSubmitting}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <Box my={3}>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                type=\"submit\"\n                                                disabled={formik.isSubmitting}\n                                                className={classes.field}>\n                                                {t(\"log_in\")}\n                                            </Button>\n                                        </Box>\n                                    </form>\n\n                                    <Box className={classes.reset}>\n                                        <Typography variant=\"caption\">\n                                            <Link\n                                              component=\"button\"\n                                              variant=\"body2\"\n                                              onClick={resetPassword}\n                                            >\n                                              {t(\"reset_password\")}\n                                            </Link>\n                                        </Typography>\n                                        </Box>\n                                </Paper></Box>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid xs={2} item/>\n            </Grid></div>);\n\n}\n\nexport default LoginPage;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js",[],["171","172"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js",["173","174","175","176","177","178"],"import React, {useEffect} from 'react';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {TextField} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {useSnackbar} from \"notistack\";\nimport {passwordResetService} from \"../_services/password-reset.service\";\nimport i18next from \"i18next\";\nimport {\n    has_digit, has_lowercase,\n    has_special,\n    has_uppercase,\n    longer_8, safe_password\n} from \"../_data/password_regex\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexGrow: 1,\n        height: \"100vh\"\n    },\n    field: {\n        width: \"100%\",\n        margin: \"5px\"\n    },\n    paper: {\n        width: \"50%\",\n        minWidth: \"500px\",\n        height: \"50%\",\n        padding: \"50px\",\n        margin: \"auto\"\n    }\n}));\n\n\nconst ResetPage = (props) => {\n    const classes = useStyles();\n    const themeCtx = React.useContext(themeContext);\n\n    const {enqueueSnackbar} = useSnackbar();\n\n    useEffect(() => {\n        i18next.changeLanguage(query.get('lan')).then();\n    }, [])\n\n    const {t} = useTranslation();\n    const query = new URLSearchParams(window.location.search);\n    const token = query.get('token')\n    const username = query.get('username')\n    const formik = useFormik({\n        initialValues: {\n            username: username,\n            password: '',\n            password2: ''\n        },\n        validationSchema: yup.object({\n            username: yup.string().required(t(\"email_required\")).email(t(\"invalid_email\")),\n            password: safe_password(t),\n            password2: yup.string().oneOf([yup.ref('password'), null],\n                t(\"passwords_unmatched\")).required(t(\"password_required\"))\n        }),\n        enableReinitialize: true,\n        onSubmit: ({username, password, password2}, {setStatus, setSubmitting}) => {\n            setStatus();\n\n            passwordResetService.reset(username, password, token)\n                .then(\n                    function (result) {\n                        enqueueSnackbar(t(\"reset_password_success\"), {variant: \"success\"});\n                        setSubmitting(false);\n                        props.history.push(\"/login\");\n                    },\n                    function (error) {\n                        setSubmitting(false);\n                        setStatus(error);\n\n                        if (error.response.status === 401){\n                            enqueueSnackbar(t(\"invalid_expired_reset\"), { variant: \"warning\"});\n                        } // TODO report, same in the signup\n                    });\n        }\n    });\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid xs={2} item/>\n\n                <Grid xs={8} item>\n                    <Grid\n                        container\n                        spacing={0}\n                        align=\"center\"\n                        justify=\"center\"\n                        direction=\"column\"\n                        style={{height: \"100%\"}}\n                    >\n                        <Grid item>\n                            <Box m={2}>\n                                <Paper className={classes.paper}>\n                                    <img src={themeCtx.theme? \"logo_centrifuga4_dark.svg\": \"logo_centrifuga4_light.svg\"} alt=\"Logo Centrífuga\" style={{height: \"85px\"}}/>\n\n                                     <Box m={2}>\n                                         <Typography>{t(\"new_password\")}</Typography>\n                                    </Box>\n\n                                    <form onSubmit={formik.handleSubmit}>\n                                        <TextField\n                                            label={t(\"username\")}\n                                            helperText={formik.touched[\"username\"] && formik.errors[\"username\"]}\n                                            type=\"email\"\n                                            name=\"username\"\n                                            className={classes.field}\n                                            value={formik.values[\"username\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                            disabled\n                                        />\n                                        <TextField\n                                            label={t(\"password\")}\n                                            name=\"password\"\n                                            type=\"password\"\n                                            helperText={formik.touched[\"password\"] && formik.errors[\"password\"]}\n                                            className={classes.field}\n                                            value={formik.values[\"password\"]}\n                                            disabled={formik.isSubmitting}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"confirm_password\")}\n                                            name=\"password2\"\n                                            type=\"password\"\n                                            helperText={formik.touched[\"password2\"] && formik.errors[\"password2\"]}\n                                            className={classes.field}\n                                            value={formik.values[\"password2\"]}\n                                            disabled={formik.isSubmitting}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <Box my={3}>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                type=\"submit\"\n                                                disabled={formik.isSubmitting}\n                                                className={classes.field}>\n                                                {t(\"change_password\")}\n                                            </Button>\n                                        </Box>\n                                    </form>\n                                </Paper>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid xs={2} item/>\n            </Grid></div>);\n\n}\n\nexport default ResetPage;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js",["179","180","181","182","183","184","185"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React from \"react\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {countries} from \"../_data/countries\";\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport countryList from \"../_data/countries\";\nimport DirtyTextField from \"./dirtytextfield.component\";\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n});\n\nexport default function CountrySelect({formik, ...textFieldProps}) {\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n\n  return (\n    <Autocomplete\n      id=\"country-select-demo\"\n      style={{ width: 300 }}\n      options={countries}\n      classes={{\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={(option) => {\n          console.log(option);\n          return option.label === undefined? option.name : option.label;\n      }}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.label} ({option.code}) +{option.phone}\n        </React.Fragment>\n      )}\n      renderInput={(params) => (\n        <DirtyTextField\n            id=\"standard-basic\"\n            label={t(\"country_of_origin\")}\n            style={{flex: 1}}\n            {...params}\n            name=\"country_of_origin\"\n            formik={formik}\n            value={formik.values[\"country_of_origin\"] === null? '': formik.values[\"country_of_origin\"]}\n              onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n              inputProps={{\n                ...params.inputProps,\n                autoComplete: 'new-password', // disable autocomplete and autofill\n              }}\n            {...textFieldProps}/>\n      )}\n    />\n  );\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js",["186","187","188"],"import * as yup from \"yup\";\n\nexport const longer_8 = /^.{8,}$/;\nexport const smaller_64 = /^.{,64}$/;\nexport const has_lowercase = /(?=.*[a-z])/;\nexport const has_uppercase = /(?=.*[A-Z])/;\nexport const has_digit = /(?=.*\\d)/;\nexport const has_special = /(?=.*[ -\\/:-@\\[-\\`{-~]{1,})/;\nexport const safe_password = (t) => (\n    yup.string()\n        .required(t(\"password_required\"))  // todo translate\n        .matches(longer_8, t(\"must be longer than 8 characters\"))\n        .matches(smaller_64, t(\"must be smaller than 64 characters\"))\n        .matches(has_lowercase, t(\"must have at least 1 lowercase character\"))\n        .matches(has_uppercase, t(\"must have at least 1 uppercase character\"))\n        .matches(has_digit, t(\"must have at least 1 digit (0-9)\"))\n        .matches(has_special, t(\"must have at least 1 of the following '-+_!@#$%^&*.,?'\"))\n)","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"189","replacedBy":"195"},{"ruleId":"191","replacedBy":"196"},{"ruleId":"189","replacedBy":"197"},{"ruleId":"191","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":77,"column":23,"nodeType":"201","endLine":77,"endColumn":29,"suggestions":"202"},{"ruleId":"189","replacedBy":"203"},{"ruleId":"191","replacedBy":"204"},{"ruleId":"189","replacedBy":"205"},{"ruleId":"191","replacedBy":"206"},{"ruleId":"189","replacedBy":"207"},{"ruleId":"191","replacedBy":"208"},{"ruleId":"199","severity":1,"message":"209","line":44,"column":8,"nodeType":"201","endLine":44,"endColumn":10,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":48,"column":9,"nodeType":"213","messageId":"214","endLine":48,"endColumn":26},{"ruleId":"211","severity":1,"message":"215","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":19},{"ruleId":"211","severity":1,"message":"216","line":7,"column":9,"nodeType":"213","messageId":"214","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"217","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":17},{"ruleId":"211","severity":1,"message":"218","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":20},{"ruleId":"189","replacedBy":"219"},{"ruleId":"191","replacedBy":"220"},{"ruleId":"211","severity":1,"message":"221","line":8,"column":13,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},{"ruleId":"189","replacedBy":"222"},{"ruleId":"191","replacedBy":"223"},{"ruleId":"199","severity":1,"message":"224","line":98,"column":8,"nodeType":"201","endLine":98,"endColumn":10,"suggestions":"225"},{"ruleId":"189","replacedBy":"226"},{"ruleId":"191","replacedBy":"227"},{"ruleId":"211","severity":1,"message":"228","line":17,"column":5,"nodeType":"213","messageId":"214","endLine":17,"endColumn":14},{"ruleId":"211","severity":1,"message":"229","line":17,"column":16,"nodeType":"213","messageId":"214","endLine":17,"endColumn":29},{"ruleId":"211","severity":1,"message":"230","line":18,"column":5,"nodeType":"213","messageId":"214","endLine":18,"endColumn":16},{"ruleId":"211","severity":1,"message":"231","line":19,"column":5,"nodeType":"213","messageId":"214","endLine":19,"endColumn":18},{"ruleId":"211","severity":1,"message":"232","line":20,"column":5,"nodeType":"213","messageId":"214","endLine":20,"endColumn":13},{"ruleId":"199","severity":1,"message":"209","line":51,"column":8,"nodeType":"201","endLine":51,"endColumn":10,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"234","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"235","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":17},{"ruleId":"211","severity":1,"message":"236","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":18},{"ruleId":"211","severity":1,"message":"237","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":18},{"ruleId":"211","severity":1,"message":"238","line":10,"column":9,"nodeType":"213","messageId":"214","endLine":10,"endColumn":17},{"ruleId":"211","severity":1,"message":"239","line":10,"column":19,"nodeType":"213","messageId":"214","endLine":10,"endColumn":28},{"ruleId":"211","severity":1,"message":"215","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":8,"column":37,"nodeType":"242","messageId":"243","endLine":8,"endColumn":38,"suggestions":"244"},{"ruleId":"240","severity":1,"message":"245","line":8,"column":42,"nodeType":"242","messageId":"243","endLine":8,"endColumn":43,"suggestions":"246"},{"ruleId":"240","severity":1,"message":"247","line":8,"column":45,"nodeType":"242","messageId":"243","endLine":8,"endColumn":46,"suggestions":"248"},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],["249"],["250"],["249"],["250"],["249"],["250"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'errorHandler' and 'searchTerm'. Either include them or remove the dependency array.","ArrayExpression",["251"],["249"],["250"],["249"],["250"],["249"],["250"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["252"],"no-unused-vars","'setCurrentStudent' is assigned a value but never used.","Identifier","unusedVar","'countryList' is defined but never used.","'Autocomplete' is defined but never used.","'countries' is defined but never used.","'ContrySelect' is defined but never used.",["249"],["250"],"'res' is assigned a value but never used.",["249"],["250"],"React Hook useEffect has missing dependencies: 'errorHandler', 'logged', 'props.history', and 'userCtx'. Either include them or remove the dependency array.",["253"],["249"],["250"],"'has_digit' is defined but never used.","'has_lowercase' is defined but never used.","'has_special' is defined but never used.","'has_uppercase' is defined but never used.","'longer_8' is defined but never used.",["254"],"'Paper' is defined but never used.","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["255","256"],"Unnecessary escape character: \\[.",["257","258"],"Unnecessary escape character: \\`.",["259","260"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"263","fix":"267"},{"messageId":"268","fix":"269","desc":"270"},{"messageId":"271","fix":"272","desc":"273"},{"messageId":"268","fix":"274","desc":"270"},{"messageId":"271","fix":"275","desc":"273"},{"messageId":"268","fix":"276","desc":"270"},{"messageId":"271","fix":"277","desc":"273"},"Update the dependencies array to be: [errorHandler, page, searchTerm]",{"range":"278","text":"279"},"Update the dependencies array to be: [query]",{"range":"280","text":"281"},"Update the dependencies array to be: [errorHandler, logged, props.history, userCtx]",{"range":"282","text":"283"},{"range":"284","text":"281"},"removeEscape",{"range":"285","text":"286"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"287","text":"288"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"289","text":"286"},{"range":"290","text":"288"},{"range":"291","text":"286"},{"range":"292","text":"288"},[2453,2459],"[errorHandler, page, searchTerm]",[1341,1343],"[query]",[3071,3073],"[errorHandler, logged, props.history, userCtx]",[1408,1410],[263,264],"",[263,263],"\\",[268,269],[268,268],[271,272],[271,271]]