[{"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js":"1","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js":"2","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js":"3","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/snackbar.report.js":"4","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/routes.js":"5","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js":"6","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js":"7","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js":"8","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js":"9","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js":"10","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js":"11","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js":"12","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js":"13","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js":"14","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js":"15","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js":"16","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js":"17","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js":"18","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js":"19","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js":"20","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js":"21","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js":"22","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js":"23","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js":"24","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js":"25","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js":"26","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js":"27"},{"size":1471,"mtime":1609177382676,"results":"28","hashOfConfig":"29"},{"size":98,"mtime":1609097773908,"results":"30","hashOfConfig":"29"},{"size":6559,"mtime":1609097773908,"results":"31","hashOfConfig":"29"},{"size":2366,"mtime":1608812823740,"results":"32","hashOfConfig":"29"},{"size":1894,"mtime":1608814505864,"results":"33","hashOfConfig":"29"},{"size":708,"mtime":1609097773908,"results":"34","hashOfConfig":"29"},{"size":5447,"mtime":1609147749662,"results":"35","hashOfConfig":"29"},{"size":1436,"mtime":1609097773908,"results":"36","hashOfConfig":"29"},{"size":18492,"mtime":1608812823740,"results":"37","hashOfConfig":"29"},{"size":242,"mtime":1608851535729,"results":"38","hashOfConfig":"29"},{"size":2081,"mtime":1609097773908,"results":"39","hashOfConfig":"29"},{"size":189,"mtime":1609097773908,"results":"40","hashOfConfig":"29"},{"size":188,"mtime":1609097773908,"results":"41","hashOfConfig":"29"},{"size":11197,"mtime":1609097773908,"results":"42","hashOfConfig":"29"},{"size":2869,"mtime":1608814298633,"results":"43","hashOfConfig":"29"},{"size":13382,"mtime":1609097773908,"results":"44","hashOfConfig":"29"},{"size":1093,"mtime":1608812823740,"results":"45","hashOfConfig":"29"},{"size":967,"mtime":1609097773908,"results":"46","hashOfConfig":"29"},{"size":2258,"mtime":1609097773908,"results":"47","hashOfConfig":"29"},{"size":1234,"mtime":1609147749662,"results":"48","hashOfConfig":"29"},{"size":6775,"mtime":1609097773908,"results":"49","hashOfConfig":"29"},{"size":731,"mtime":1609097773908,"results":"50","hashOfConfig":"29"},{"size":710,"mtime":1609097773908,"results":"51","hashOfConfig":"29"},{"size":7491,"mtime":1609193130878,"results":"52","hashOfConfig":"29"},{"size":995,"mtime":1608814331137,"results":"53","hashOfConfig":"29"},{"size":895,"mtime":1608814356173,"results":"54","hashOfConfig":"29"},{"size":7621,"mtime":1609097773908,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1d3a0qb",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js",[],["124","125"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js",[],["126","127"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/snackbar.report.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/routes.js",[],["128","129"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js",["130","131","132","133"],"import React, {useEffect, useState} from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchBar from './/searchbar.component'\nimport Box from \"@material-ui/core/Box\";\nimport {useTranslation} from \"react-i18next\";\nimport {Chip, ListItemSecondaryAction} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useSnackbar} from 'notistack';\nimport report from \"./snackbar.report\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport LoadingBackdrop from \"./loadingBackdrop.component\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxHeight: \"70vh\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    list: {\n        overflow: \"auto\",\n        // maxHeight: \"60vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: '30px'\n    }\n}));\n\nconst StudentsList = (props) => {\n    const setCurrentStudent = props.setCurrentStudent;\n    const [students, setStudents] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const {t} = useTranslation();\n\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const [pageSize, setPageSize] = useState(3);\n\n    const classes = useStyles();\n\n    const errorHandler = useErrorHandler();\n\n    const [loading, setLoading] = useState(false);\n\n    const onChangeSearchTerm = (e) => {\n        console.log(e.target.value);\n        setSearchTerm(e.target.value);\n    };\n\n    function search() {\n        StudentsDataService.getAll(searchTerm, false, page).then(...errorHandler).then(\n            function (result) {\n                console.log(\"1\");\n                setStudents(result[\"data\"]);\n                setCount(result[\"_pagination\"][\"totalPages\"]);\n            });\n    }\n\n    useEffect(search, [page, pageSize]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n    const handlePageSizeChange = (event) => {\n        setPageSize(event.target.value);\n        setPage(1);\n    };\n\n    function exportCsv() {\n        setLoading(true);\n        StudentsDataService\n            .getAll(searchTerm, true, page)\n            .then(...errorHandler)\n            .finally(()=>{\n                setLoading(false);\n            });\n    }\n\n    return (\n        <Box className={classes.root}>\n            <LoadingBackdrop loading={loading}/>\n            <Box className={classes.box}>\n                <SearchBar\n                    label={t(\"students\")}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={search}\n                />\n                <Box my={1}>\n                    <Tooltip title={t(\"export_results_csv\")} aria-label={t(\"export_results_csv\")}>\n                        <Chip variant=\"outlined\" size=\"small\" avatar={<Avatar>csv</Avatar>} label={t(\"export\")}\n                              onClick={exportCsv}/>\n                    </Tooltip>\n                </Box>\n                <Box my={2}>\n                    <Pagination\n                        className=\"pagination\"\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            </Box>\n            <List className={classes.list}>\n                {students && students.map((student, index) => (\n                    <div>\n                        <ListItem key={index} button\n                                  onClick={() => {\n                                      setCurrentStudent(student);\n                                  }}>\n                            <ListItemAvatar>\n                                <Avatar>{student.name.charAt(0).toUpperCase()}</Avatar>\n                            </ListItemAvatar>\n                            <ListItemText id=\"name\" primary={student.name}/>\n                            <Tooltip title={t(\"export .csv\")}\n                                     aria-label={t(\"export student as .csv\")}>\n                                <ListItemSecondaryAction>\n                                    <IconButton edge=\"end\" aria-label=\"export\">\n                                        <GetAppIcon/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </Tooltip>\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n        </Box>\n    );\n};\n\nexport default StudentsList;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js",["134"],"import { authenticationService } from '../_services/auth.service';\nimport {userContext} from \"../_context/user-context\";\nimport React from 'react';\nimport report from \"../_components/snackbar.report\";\nimport {useSnackbar} from \"notistack\";\nimport {useTranslation} from \"react-i18next\";\n\nexport function useErrorHandler() {\n\n    const userCtx = React.useContext(userContext);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n    const {t} = useTranslation();\n\n    const successHandler = (res) => {\n        console.log(\"succ\");\n        return Promise.resolve(res);\n    }\n\n    const failureHandler = (res) => {\n        console.log(\"err\", res.request.status);\n        if (res.request.status === 401) {\n            console.log(\"errr\");\n            // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n            userCtx[\"setUser\"]({logged: false});\n\n            enqueueSnackbar(\"You are not logged in! 💂\", { variant: \"warning\"});\n\n            return Promise.reject(res);\n        }\n\n        enqueueSnackbar(\"Something went wrong! 😣\",\n                    {\n                        variant: \"error\",\n                        autoHideDuration: 10000,\n                        action: key => {\n                            return report(key, closeSnackbar, t, res)\n                        }\n                    });\n\n        return Promise.reject(res);\n    }\n\n    return [successHandler, failureHandler];\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js",["135"],"import { authenticationService } from '../_services/auth.service';\nimport Cookies from 'js-cookie';\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    return { 'X-CSRF-TOKEN': Cookies.get('X-CSRF-TOKEN')};\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js",["136","137","138"],"import React, {useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport {lightTheme, darkTheme} from '../theme';\nimport { SnackbarProvider } from 'notistack';\n\nimport { history } from '../_helpers/history';\nimport { authenticationService } from '../_services/auth.service';\nimport PrivateRoute from '../_components/PrivateRoute';\nimport HomePage from '../HomePage/HomePage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport { Router, Route, Link } from 'react-router-dom';\nimport {Home} from \"@material-ui/icons\";\nimport {userContext} from '../_context/user-context';\nimport {themeContext} from '../_context/theme-context';\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport ResetPage from \"../ResetPage/ResetPage\";\n\nfunction App() {\n    const [theme, setTheme] = useState(localStorage.getItem(\"darkTheme\") === \"true\");\n    const appliedTheme = createMuiTheme(theme ? darkTheme : lightTheme);\n    const changeTheme = () => {\n        localStorage.setItem(\"darkTheme\", (!theme).toString());\n        setTheme(!theme);\n    }\n\n    const [user, setUser] = useState({});\n\n\n    return (\n      <ThemeProvider theme={appliedTheme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={3}>\n            <userContext.Provider value={{user: user, setUser: setUser}}>\n                <themeContext.Provider value={{theme: theme}}>\n                    <Router history={history} basename={`${process.env.PUBLIC_URL}`}>\n                        <PrivateRoute exact path={'/'}  component={HomePage} changeTheme={changeTheme}/>\n                        <Route path={'/login'} component={LoginPage}/>\n                        <Route path={'/signup'} component={SignupPage}/>\n                        <Route path={'/reset-password'} component={ResetPage}/>\n                    </Router>\n                </themeContext.Provider>\n            </userContext.Provider>\n        </SnackbarProvider>\n      </ThemeProvider>\n    );\n}\n\nexport default App\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js",["139","140","141","142","143","144","145","146","147","148"],"import React, {useEffect} from 'react';\nimport {Formik, Field, Form, ErrorMessage, useFormik} from 'formik';\nimport {authenticationService} from '../_services/auth.service';\nimport {Redirect} from \"react-router-dom\";\nimport {userContext} from \"../_context/user-context\";\nimport report from \"../_components/snackbar.report\";\nimport * as yup from 'yup';\nimport {TextField} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {func} from \"prop-types\";\nimport {authenticationService as signupService} from \"../_services/signup.service\";\nimport {useSnackbar} from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexGrow: 1,\n        height: \"100vh\"\n    },\n    field: {\n        width: \"100%\",\n        margin: \"5px\"\n    },\n    paper: {\n        width: \"50%\",\n        minWidth: \"500px\",\n        height: \"50%\",\n        padding: \"50px\",\n        margin: \"auto\"\n    }\n}));\n\nconst SignupPage = (props) => {\n    const classes = useStyles();\n    const themeCtx = React.useContext(themeContext);\n\n    const {enqueueSnackbar} = useSnackbar();\n\n    const {t} = useTranslation();\n    const query = new URLSearchParams(window.location.search);\n    const token = query.get('token')\n    const email = query.get('email')\n    const formik = useFormik({\n        initialValues: {\n            username: email,\n            email: email,\n            password: '',\n            name: '',\n            surname1: '',\n            surname2: '',\n            password2: ''\n        },\n        validationSchema: yup.object({\n            username: yup.string().required('Username is required').email('Enter a valid email.'),\n            email: yup.string().required('Email is required').email('Enter a valid email.'),\n            password: yup.string().required('Password is required').matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      \"Must be longer than 8 characters; including: 1 uppercase, 1 lowercase, 1 number and 1 of '@$!%*#?&'\"\n    ),\n            password2: yup.string().oneOf([yup.ref('password'), null], \"Passwords don't match\").required(\"Password is required\"),\n            name: yup.string().required('Name is required'),\n            surname1: yup.string().required('First surname is required'),\n            surname2: yup.string().required('Second surname is required')\n        }),\n        enableReinitialize: true,\n        onSubmit: ({username, email, password, name, surname1, surname2, password2}, {setStatus, setSubmitting}) => {\n            setStatus();\n\n            signupService.signup(username, password, email, name, surname1, surname2, token)\n                .then(\n                    function (result) {\n                        setSubmitting(false);\n                        props.history.push(\"/login\");\n                    },\n                    function (error) {\n                        console.log(\">>><<<\", error.response, error.request);\n                        setSubmitting(false);\n                        setStatus(error);\n\n                        if (error.response.status === 401){\n                            enqueueSnackbar(t(\"invalid_expired_invite\"), { variant: \"warning\"});\n                        } else if (error.response.status === 400) {\n                            enqueueSnackbar(t(\"used_invite\"), { variant: \"warning\"});\n                        }\n                    });\n        }\n    });\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Grid xs={2} item/>\n\n                <Grid xs={8} item>\n                    <Grid\n                        container\n                        spacing={0}\n                        align=\"center\"\n                        justify=\"center\"\n                        direction=\"column\"\n                        style={{height: \"100%\"}}\n                    >\n                        <Grid item>\n                            <Box m={2}>\n                                <Paper className={classes.paper}>\n                                    <img src={themeCtx.theme? \"logo_centrifuga4_dark.svg\": \"logo_centrifuga4_light.svg\"} alt=\"Logo Centrífuga\" style={{height: \"85px\"}}/>\n\n                                     <Box m={2}>\n                                         <Typography>{t(\"been_invited\")}</Typography>\n                                    </Box>\n\n                                    <form onSubmit={formik.handleSubmit}>\n                                        <TextField\n                                            label={t(\"username\")}\n                                            helperText={formik.touched[\"username\"] && formik.errors[\"username\"]}\n                                            type=\"email\"\n                                            name=\"username\"\n                                            className={classes.field}\n                                            value={formik.values[\"username\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                            disabled\n                                        />\n                                        <TextField\n                                            label={t(\"email\")}\n                                            helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                                            type=\"email\"\n                                            name=\"email\"\n                                            className={classes.field}\n                                            value={formik.values[\"email\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                            disabled\n                                        />\n\n\n\n                                        <TextField\n                                            label={t(\"name\")}\n                                            helperText={formik.touched[\"name\"] && formik.errors[\"name\"]}\n                                            name=\"name\"\n                                            className={classes.field}\n                                            value={formik.values[\"name\"]}\n                                            onChange={formik.handleChange}\n                                            disabled={formik.isSubmitting}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"surname1\")}\n                                            helperText={formik.touched[\"surname1\"] && formik.errors[\"surname1\"]}\n                                            name=\"surname1\"\n                                            disabled={formik.isSubmitting}\n                                            className={classes.field}\n                                            value={formik.values[\"surname1\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"surname2\")}\n                                            helperText={formik.touched[\"surname2\"] && formik.errors[\"surname2\"]}\n                                            name=\"surname2\"\n                                            disabled={formik.isSubmitting}\n                                            className={classes.field}\n                                            value={formik.values[\"surname2\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"password\")}\n                                            name=\"password\"\n                                            type=\"password\"\n                                            helperText={formik.touched[\"password\"] && formik.errors[\"password\"]}\n                                            className={classes.field}\n                                            value={formik.values[\"password\"]}\n                                            disabled={formik.isSubmitting}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <TextField\n                                            label={t(\"confirm_password\")}\n                                            name=\"password2\"\n                                            type=\"password\"\n                                            helperText={formik.touched[\"password2\"] && formik.errors[\"password2\"]}\n                                            className={classes.field}\n                                            value={formik.values[\"password2\"]}\n                                            disabled={formik.isSubmitting}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            error={formik.status}\n                                        />\n                                        <Box my={3}>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                type=\"submit\"\n                                                disabled={formik.isSubmitting}\n                                                className={classes.field}>\n                                                {t(\"sign up\")}\n                                            </Button>\n                                        </Box>\n                                    </form>\n                                </Paper></Box>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid xs={2} item/>\n            </Grid></div>);\n\n}\n\nexport default SignupPage;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js",["149","150"],"import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n  },\n\n  contentPanel: {\n    flex: 1,\n    overflow: \"auto\",\n    boxSizing: \"border-box\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  sizeSmall: {\n    margin: theme.spacing(1),\n    width: \"25ch\"\n  },\n  sizeLong: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\n\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nexport default function Student(props) {\n  const currentStudent = props.currentStudent;\n  const setCurrentStudent = props.setCurrentStudent;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  console.log(\">>\", currentStudent);\n\n  let contacts = [1,2];\n\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"fullWidth\"\n                  aria-label=\"full width tabs example\"\n                >\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\n                  {\n                  contacts && contacts.map((contact, index) => (\n                  <Tab label={t(\"contact \") + (index+1)} {...a11yProps(index)} />\n                      ))}\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <Attendee value={value}\n                      index={0}\n                      dir={theme.direction}\n                      title=\"attendee\"\n                      currentStudent={currentStudent}/>\n            {\n              contacts && contacts.map((contact, index) => (\n                   <Attendee value={value} index={index+1} dir={theme.direction} title={\"contact \" + (index + 1)}/>\n                  ))}\n\n            }\n          </SwipeableViews>\n          </Paper>\n  );\n}\n",["151","152"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js",["153","154","155","156","157"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {Button, DialogActions, MenuItem, TextField} from \"@material-ui/core\";\nimport countryList from \"../_data/countries\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {\n    Formik, Form, Field, ErrorMessage, useFormik,\n} from 'formik';\nimport * as yup from 'yup';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    fullWidth: {\n        width: \"100%\"\n    },\n    sizeSmall: {\n        width: \"25ch\"\n    },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction Person(props) {\n    const currentPerson = props.currentPerson;\n    const {t} = useTranslation();\n    const loading = false;\n    const classes = useStyles();\n\n    console.log(props, currentPerson);\n\n    const formik = useFormik({\n        initialValues: currentPerson===null? {}:currentPerson,\n        validationSchema: yup.object({\n                                email: yup.string().email('Enter a valid email.'),\n                                name: yup.string().required('Required')\n                            }),\n        enableReinitialize: true,\n        onSubmit: (values) => {\n          alert(JSON.stringify(values, null, 2));\n        }\n    });\n\n    console.log(formik.values);\n\n    return (\n        <Box>\n            {loading || currentPerson === null\n                ?\n                (\n\n                    <Box>\n                        {\n                            [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map(value => {\n                                return (\n                                    <Box py={0}><Skeleton variant=\"text\" width={value} height=\"60px\"></Skeleton></Box>);\n                            })\n                        }\n                    </Box>\n                )\n                :\n                (\n                        <form onSubmit={formik.handleSubmit}>\n                                        <TextField\n                                            label={t(\"id\")}\n                                            name=\"id\"\n                                            disabled\n                                            className={classes.line}\n                                            value={formik.values[\"id\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                label={t(\"name\")}\n                                                style={{flex: 1}}\n                                                name=\"name\"\n                                                value={formik.values[\"name\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                                formik={formik}\n                                                helperText={formik.touched[\"name\"] && formik.errors[\"name\"]}\n                                            />\n                                            <DirtyTextField\n                                                label={t(\"surname1\")}\n                                                style={{flex: 1}}\n                                                name=\"surname1\"\n                                                formik={formik}\n                                                value={formik.values[\"surname1\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                label={t(\"surname2\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"surname2\"\n                                                value={formik.values[\"surname2\"]}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </Box>\n\n                                    <Box className={[classes.line, classes.composite]}>\n                                        <DirtyTextField\n                                            label={t(\"email\")}\n                                            type=\"email\"\n                                            style={{flex: 1}}\n                                                formik={formik}\n                                            name=\"email\"\n                                            value={formik.values[\"email\"]}\n                                            helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                                            error={formik.errors[\"email\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                        />\n                                    </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                label={t(\"address\")}\n                                                formik={formik}\n                                                style={{flex: 4}}\n                                                name=\"address\"\n                                                value={formik.values.address}\n                                                onChange={formik.handleChange}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"city\")}\n                                                style={{flex: 2}}\n                                                formik={formik}\n                                                name=\"city\"\n                                            value={formik.values.city}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"zip\")}\n                                                formik={formik}\n                                                type=\"number\"\n                                                style={{flex: 1}}\n                                                name=\"zip\"\n                                            value={formik.values[\"zip\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                        </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"dni\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"dni\"\n                                            value={formik.values[\"dni\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"phone\")}\n                                                type=\"tel\"\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"phone\"\n                                            value={formik.values[\"phone\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                            />\n\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"gender\")}\n                                                style={{flex: 1}}\n                                                formik={formik}\n                                                name=\"gender\"\n                                            value={formik.values[\"gender\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                                select>\n                                                <MenuItem value=\"m\">male</MenuItem>\n                                                <MenuItem value=\"f\">female</MenuItem>\n                                                <MenuItem value=\"nb\">non binary / not represented by any of the\n                                                    above</MenuItem>\n                                            </DirtyTextField>\n\n                                        </Box>\n\n                                        <Box className={[classes.line, classes.composite]}>\n\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"birthdate\")}\n                                                formik={formik}\n                                                type=\"date\"\n                                                style={{flex: 1}}\n                                                name=\"birth_date\"\n                                            value={formik.values[\"birth_date\"]}\n                                            onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                                InputLabelProps={{shrink: true}}/>\n\n                                            <DirtyTextField\n                                                id=\"standard-basic\"\n                                                label={t(\"country_of_origin\")}\n                                                style={{flex: 1}}\n                                                name=\"country_of_origin\"\n                                                formik={formik}\n                                            value={formik.values[\"country_of_origin\"]}\n                                                  onChange={formik.handleChange}\n                                            onBlur={formik.handleBlur}\n                                                select>\n\n                                                {countryList.map((country, idx) => {\n                                                    return (<MenuItem value={country.code}>{country.name}</MenuItem>)\n                                                })}\n                                            </DirtyTextField>\n\n                                        </Box>\n\n                                        <DialogActions>\n                                            <Button\n                                                type=\"button\"\n                                                className=\"outline\"\n                                                onClick={formik.handleReset}\n                                                disabled={!formik.dirty || formik.isSubmitting}\n                                            >\n                                                Reset\n                                            </Button>\n                                            <Button type=\"submit\" disabled={formik.isSubmitting}>\n                                                Submit\n                                            </Button>\n                                            {/* <DisplayFormikState {...props} /> */}\n                                        </DialogActions>\n                                    </form>\n                )\n\n            }\n        </Box>\n    );\n}\n\n\nexport default Person;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js",[],["158","159"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js",["160"],"import {authHeader} from \"../_helpers/auth-header\";\n\nconst axios = require('axios');\n\nclass StudentsDataService {\n\n  getAll(searchText, download=false, page=1) {\n      const res = '/students';\n      if (download){\n          return new Promise(function(resolve, reject) {\n              axios({\n                  url: 'https://127.0.0.1:4999/api/v1/students',\n                  method: 'GET',\n                  responseType: 'blob', // important\n                  params: {\n                      \"filter.full_name.like\": '%' + searchText + '%',\n                      \"page\": page\n                  },\n                  headers: {...{\n                      'Accept': 'text/csv'\n                  }, ...authHeader()}\n              }).then(response => {\n                  console.log(response);\n                  let filename = response.headers[\"content-disposition\"].split(\"filename=\")[1];\n                  if (filename === null) filename = \"export.csv\";\n\n                  const url = window.URL.createObjectURL(new Blob([response.data]));\n                  const link = document.createElement('a');\n                  link.href = url;\n                  link.setAttribute('download', filename);\n                  document.body.appendChild(link);\n                  link.click();\n                  link.remove();\n                  resolve();\n              }).catch(function (err) {\n                  console.log(\"0\" + err);\n                reject(Error(err));\n              });\n          });\n      }\n      return new Promise(function(resolve, reject) {\n          axios({\n              method: 'get',\n              url: 'https://127.0.0.1:4999/api/v1/students',\n              params: {\n                  \"filter.full_name.like\": '%' + searchText + '%',\n                  \"page\": page\n              },\n              headers: {...{\n                  'Content-Type': 'application/json'\n              }, ...authHeader()}\n            })\n              .then(function (response) {\n                  console.log(\"hiro\");\n                resolve(response.data);\n              }).catch(function (err) {\n                  console.log(\"hiro2\", err);\n              reject(err);\n          });\n        });\n  }\n\n  // other CRUD methods\n}\n\nexport default new StudentsDataService();","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js",[],["161","162"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js",["163","164","165","166","167","168","169","170"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js",["171","172","173","174","175","176","177","178","179","180","181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"182","replacedBy":"188"},{"ruleId":"184","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":18,"column":9,"nodeType":"192","messageId":"193","endLine":18,"endColumn":20},{"ruleId":"190","severity":1,"message":"194","line":19,"column":8,"nodeType":"192","messageId":"193","endLine":19,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":76,"column":23,"nodeType":"197","endLine":76,"endColumn":39,"suggestions":"198"},{"ruleId":"190","severity":1,"message":"199","line":82,"column":11,"nodeType":"192","messageId":"193","endLine":82,"endColumn":31},{"ruleId":"190","severity":1,"message":"200","line":1,"column":10,"nodeType":"192","messageId":"193","endLine":1,"endColumn":31},{"ruleId":"190","severity":1,"message":"200","line":1,"column":10,"nodeType":"192","messageId":"193","endLine":1,"endColumn":31},{"ruleId":"190","severity":1,"message":"200","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":31},{"ruleId":"190","severity":1,"message":"201","line":13,"column":25,"nodeType":"192","messageId":"193","endLine":13,"endColumn":29},{"ruleId":"190","severity":1,"message":"202","line":14,"column":9,"nodeType":"192","messageId":"193","endLine":14,"endColumn":13},{"ruleId":"190","severity":1,"message":"203","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"204","line":2,"column":9,"nodeType":"192","messageId":"193","endLine":2,"endColumn":15},{"ruleId":"190","severity":1,"message":"205","line":2,"column":17,"nodeType":"192","messageId":"193","endLine":2,"endColumn":22},{"ruleId":"190","severity":1,"message":"206","line":2,"column":24,"nodeType":"192","messageId":"193","endLine":2,"endColumn":28},{"ruleId":"190","severity":1,"message":"207","line":2,"column":30,"nodeType":"192","messageId":"193","endLine":2,"endColumn":42},{"ruleId":"190","severity":1,"message":"200","line":3,"column":9,"nodeType":"192","messageId":"193","endLine":3,"endColumn":30},{"ruleId":"190","severity":1,"message":"208","line":4,"column":9,"nodeType":"192","messageId":"193","endLine":4,"endColumn":17},{"ruleId":"190","severity":1,"message":"209","line":5,"column":9,"nodeType":"192","messageId":"193","endLine":5,"endColumn":20},{"ruleId":"190","severity":1,"message":"194","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":14},{"ruleId":"190","severity":1,"message":"210","line":17,"column":9,"nodeType":"192","messageId":"193","endLine":17,"endColumn":13},{"ruleId":"190","severity":1,"message":"203","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"211","line":48,"column":9,"nodeType":"192","messageId":"193","endLine":48,"endColumn":26},{"ruleId":"182","replacedBy":"212"},{"ruleId":"184","replacedBy":"213"},{"ruleId":"190","severity":1,"message":"214","line":5,"column":16,"nodeType":"192","messageId":"193","endLine":5,"endColumn":24},{"ruleId":"190","severity":1,"message":"204","line":10,"column":5,"nodeType":"192","messageId":"193","endLine":10,"endColumn":11},{"ruleId":"190","severity":1,"message":"206","line":10,"column":13,"nodeType":"192","messageId":"193","endLine":10,"endColumn":17},{"ruleId":"190","severity":1,"message":"205","line":10,"column":19,"nodeType":"192","messageId":"193","endLine":10,"endColumn":24},{"ruleId":"190","severity":1,"message":"207","line":10,"column":26,"nodeType":"192","messageId":"193","endLine":10,"endColumn":38},{"ruleId":"182","replacedBy":"215"},{"ruleId":"184","replacedBy":"216"},{"ruleId":"190","severity":1,"message":"217","line":8,"column":13,"nodeType":"192","messageId":"193","endLine":8,"endColumn":16},{"ruleId":"182","replacedBy":"218"},{"ruleId":"184","replacedBy":"219"},{"ruleId":"190","severity":1,"message":"204","line":2,"column":9,"nodeType":"192","messageId":"193","endLine":2,"endColumn":15},{"ruleId":"190","severity":1,"message":"205","line":2,"column":17,"nodeType":"192","messageId":"193","endLine":2,"endColumn":22},{"ruleId":"190","severity":1,"message":"206","line":2,"column":24,"nodeType":"192","messageId":"193","endLine":2,"endColumn":28},{"ruleId":"190","severity":1,"message":"207","line":2,"column":30,"nodeType":"192","messageId":"193","endLine":2,"endColumn":42},{"ruleId":"190","severity":1,"message":"208","line":4,"column":9,"nodeType":"192","messageId":"193","endLine":4,"endColumn":17},{"ruleId":"190","severity":1,"message":"194","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":14},{"ruleId":"190","severity":1,"message":"210","line":17,"column":9,"nodeType":"192","messageId":"193","endLine":17,"endColumn":13},{"ruleId":"195","severity":1,"message":"220","line":98,"column":8,"nodeType":"197","endLine":98,"endColumn":10,"suggestions":"221"},{"ruleId":"190","severity":1,"message":"203","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"204","line":2,"column":9,"nodeType":"192","messageId":"193","endLine":2,"endColumn":15},{"ruleId":"190","severity":1,"message":"205","line":2,"column":17,"nodeType":"192","messageId":"193","endLine":2,"endColumn":22},{"ruleId":"190","severity":1,"message":"206","line":2,"column":24,"nodeType":"192","messageId":"193","endLine":2,"endColumn":28},{"ruleId":"190","severity":1,"message":"207","line":2,"column":30,"nodeType":"192","messageId":"193","endLine":2,"endColumn":42},{"ruleId":"190","severity":1,"message":"200","line":3,"column":9,"nodeType":"192","messageId":"193","endLine":3,"endColumn":30},{"ruleId":"190","severity":1,"message":"208","line":4,"column":9,"nodeType":"192","messageId":"193","endLine":4,"endColumn":17},{"ruleId":"190","severity":1,"message":"209","line":5,"column":9,"nodeType":"192","messageId":"193","endLine":5,"endColumn":20},{"ruleId":"190","severity":1,"message":"194","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":14},{"ruleId":"190","severity":1,"message":"210","line":17,"column":9,"nodeType":"192","messageId":"193","endLine":17,"endColumn":13},{"ruleId":"190","severity":1,"message":"222","line":18,"column":34,"nodeType":"192","messageId":"193","endLine":18,"endColumn":47},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],["223"],["224"],["223"],["224"],"no-unused-vars","'useSnackbar' is defined but never used.","Identifier","unusedVar","'report' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'errorHandler' and 'searchTerm'. Either include them or remove the dependency array.","ArrayExpression",["225"],"'handlePageSizeChange' is assigned a value but never used.","'authenticationService' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'useEffect' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'ErrorMessage' is defined but never used.","'Redirect' is defined but never used.","'userContext' is defined but never used.","'func' is defined but never used.","'setCurrentStudent' is assigned a value but never used.",["223"],["224"],"'useState' is defined but never used.",["223"],["224"],"'res' is assigned a value but never used.",["223"],["224"],"React Hook useEffect has missing dependencies: 'logged', 'props.history', and 'userCtx'. Either include them or remove the dependency array.",["226"],"'signupService' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [errorHandler, page, pageSize, searchTerm]",{"range":"231","text":"232"},"Update the dependencies array to be: [logged, props.history, userCtx]",{"range":"233","text":"234"},[2472,2488],"[errorHandler, page, pageSize, searchTerm]",[3018,3020],"[logged, props.history, userCtx]"]