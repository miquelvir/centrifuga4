[{"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js":"1","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js":"2","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js":"3","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js":"4","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js":"5","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/routes.js":"6","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js":"7","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js":"8","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js":"9","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js":"10","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js":"11","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js":"12","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.component.js":"13","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js":"14","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js":"15","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js":"16","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js":"17","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js":"18","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js":"19","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js":"20","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js":"21","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js":"22","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js":"23","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js":"24","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js":"25","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js":"26","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js":"27","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js":"28","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js":"29","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js":"30","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js":"31","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js":"32","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/relations.js":"33","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js":"34","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js":"35","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js":"36","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js":"37","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js":"38","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js":"39","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js":"40","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js":"41","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js":"42","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js":"43","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js":"44","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsGrants.service.js":"45","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js":"46","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js":"47","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js":"48","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js":"49","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js":"50","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/empty_objects.js":"51","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.courses.component.js":"52","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js":"53","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js":"54","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js":"55"},{"size":1217,"mtime":1609287125732,"results":"56","hashOfConfig":"57"},{"size":708,"mtime":1609237004697,"results":"58","hashOfConfig":"57"},{"size":189,"mtime":1609237004665,"results":"59","hashOfConfig":"57"},{"size":7350,"mtime":1610013084913,"results":"60","hashOfConfig":"57"},{"size":11026,"mtime":1610013084913,"results":"61","hashOfConfig":"57"},{"size":2034,"mtime":1610396049516,"results":"62","hashOfConfig":"57"},{"size":865,"mtime":1610411554056,"results":"63","hashOfConfig":"57"},{"size":136,"mtime":1610013084917,"results":"64","hashOfConfig":"57"},{"size":1554,"mtime":1610452360110,"results":"65","hashOfConfig":"57"},{"size":2530,"mtime":1610396706700,"results":"66","hashOfConfig":"57"},{"size":10086,"mtime":1610391865411,"results":"67","hashOfConfig":"57"},{"size":102,"mtime":1609330842002,"results":"68","hashOfConfig":"57"},{"size":4709,"mtime":1610013084913,"results":"69","hashOfConfig":"57"},{"size":102,"mtime":1610013084917,"results":"70","hashOfConfig":"57"},{"size":1410,"mtime":1610013084917,"results":"71","hashOfConfig":"57"},{"size":13498,"mtime":1609250043345,"results":"72","hashOfConfig":"57"},{"size":14250,"mtime":1610319381946,"results":"73","hashOfConfig":"57"},{"size":8643,"mtime":1610395854946,"results":"74","hashOfConfig":"57"},{"size":5926,"mtime":1610382334080,"results":"75","hashOfConfig":"57"},{"size":13855,"mtime":1610382135398,"results":"76","hashOfConfig":"57"},{"size":3137,"mtime":1610017429116,"results":"77","hashOfConfig":"57"},{"size":1291,"mtime":1610013084917,"results":"78","hashOfConfig":"57"},{"size":190,"mtime":1609237004661,"results":"79","hashOfConfig":"57"},{"size":1167,"mtime":1609272998086,"results":"80","hashOfConfig":"57"},{"size":1338,"mtime":1609237004653,"results":"81","hashOfConfig":"57"},{"size":11240,"mtime":1610378323363,"results":"82","hashOfConfig":"57"},{"size":1982,"mtime":1610452632283,"results":"83","hashOfConfig":"57"},{"size":6619,"mtime":1610452632271,"results":"84","hashOfConfig":"57"},{"size":6383,"mtime":1610452632263,"results":"85","hashOfConfig":"57"},{"size":174,"mtime":1609264823340,"results":"86","hashOfConfig":"57"},{"size":123,"mtime":1610409944049,"results":"87","hashOfConfig":"57"},{"size":1688,"mtime":1610214056416,"results":"88","hashOfConfig":"57"},{"size":200,"mtime":1610021618850,"results":"89","hashOfConfig":"57"},{"size":6690,"mtime":1610452680262,"results":"90","hashOfConfig":"57"},{"size":1191,"mtime":1610013084917,"results":"91","hashOfConfig":"57"},{"size":1397,"mtime":1610013084917,"results":"92","hashOfConfig":"57"},{"size":103,"mtime":1610013084917,"results":"93","hashOfConfig":"57"},{"size":442,"mtime":1610187820379,"results":"94","hashOfConfig":"57"},{"size":12173,"mtime":1610381476843,"results":"95","hashOfConfig":"57"},{"size":890,"mtime":1610097450475,"results":"96","hashOfConfig":"57"},{"size":362,"mtime":1608812823740,"results":"97","hashOfConfig":"57"},{"size":894,"mtime":1610189290429,"results":"98","hashOfConfig":"57"},{"size":96,"mtime":1609237004601,"results":"99","hashOfConfig":"57"},{"size":293,"mtime":1610013084913,"results":"100","hashOfConfig":"57"},{"size":884,"mtime":1610208606652,"results":"101","hashOfConfig":"57"},{"size":7799,"mtime":1610452702114,"results":"102","hashOfConfig":"57"},{"size":91,"mtime":1610219326811,"results":"103","hashOfConfig":"57"},{"size":8271,"mtime":1610394796589,"results":"104","hashOfConfig":"57"},{"size":731,"mtime":1609097773908,"results":"105","hashOfConfig":"57"},{"size":103,"mtime":1610283282248,"results":"106","hashOfConfig":"57"},{"size":843,"mtime":1610381732416,"results":"107","hashOfConfig":"57"},{"size":9088,"mtime":1610395940693,"results":"108","hashOfConfig":"57"},{"size":101,"mtime":1610366819472,"results":"109","hashOfConfig":"57"},{"size":113,"mtime":1610366539040,"results":"110","hashOfConfig":"57"},{"size":115,"mtime":1610382247341,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d3a0qb",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"137"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"128"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"125"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"168"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js",[],["247","248"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js",[],["249","250"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js",[],["251","252"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js",[],["253","254"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/routes.js",[],["255","256"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js",["257"],"import { useEffect } from \"react\";\n\nexport const useOnMount = handler => {\n  return useEffect(() => {\n    return handler();\n  }, []);\n};",["258","259"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js",[],["260","261"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.list.component.js",["262","263","264"],"import React, {useEffect, useState} from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchBar from './searchbar.component'\nimport Box from \"@material-ui/core/Box\";\nimport {useTranslation} from \"react-i18next\";\nimport {Accordion, AccordionDetails, AccordionSummary, Chip, ListItemSecondaryAction} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LoadingBackdrop from \"./loadingBackdrop.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flex: 1,\n        overflow: 'auto',\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    list: {\n        overflow: \"auto\",\n        // maxHeight: \"60vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        minHeight: '150px'\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: '30px'\n    },\n    chip: {\n        margin: theme.spacing(2)\n    },\n    avatar: {},\n    selectedAvatar: {\n        backgroundColor: theme.palette.primary.dark\n    },\n    chips: {\n        flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n    }\n}));\n\nconst StudentsList = (props) => {\n    const setCurrentStudentId = props.setCurrentStudentId;\n    const currentStudentId = props.currentStudentId;\n    const students = props.students;\n    const setStudents = props.setStudents;\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [filters, setFilters] = useState({\n        onlyEnrolled: false,\n        onlyEarlyUnenrolled: false,\n        onlyPreEnrolled: false,\n        onlyCash: false,\n        onlyBankTransfer: false,\n        onlyDirectDebit: false\n    });\n\n    const {t} = useTranslation();\n\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const errorHandler = useErrorHandler();\n\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(false);  // todo\n\n    const onChangeSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    };\n\n    function getFilters(fs){\n        let myFilters = {};\n\n        if (fs.onlyEnrolled) {\n            myFilters['enrollment_status'] = 'enrolled';\n        } else if (fs.onlyEarlyUnenrolled) {\n            myFilters['enrollment_status'] = 'early-unenrolled';\n        } else if (fs.onlyPreEnrolled) {\n            myFilters['enrollment_status'] = 'pre-enrolled'\n        }\n\n        if (fs.onlyCash) {\n            myFilters['default_payment_method'] = 'cash';\n        } else if (fs.onlyBankTransfer) {\n            myFilters['default_payment_method'] = 'bank-transfer';\n        } else if (fs.onlyDirectDebit) {\n            myFilters['default_payment_method'] = 'bank-direct-debit';\n        }\n\n        return myFilters;\n    }\n\n    function search() {\n\n        StudentsDataService\n            .getAll({name: 'full_name', value: searchTerm}, page, ['id', 'full_name'], getFilters(filters))\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setStudents(res[\"data\"]);\n                    setCount(res[\"_pagination\"][\"totalPages\"]);\n                });\n    }\n\n    useEffect(search, [page, setStudents, filters]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n    function exportCsv() {\n        setLoading(true);  // todo clean this and the loading background\n        StudentsDataService\n            .downloadAllCsv(searchTerm, page, getFilters(filters))\n            .finally(()=>{\n                setLoading(false);\n            });\n    }\n\n    return (\n        <Box className={classes.root}>\n            <Box className={classes.box}>\n                <SearchBar\n                    label={t(\"students\")}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={search}\n                />\n\n                    <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n        >\n          <Typography className={classes.heading}>{t(\"filters_actions\")}</Typography>\n        </AccordionSummary>\n        <AccordionDetails><Box className={classes.chips}>\n          <Tooltip title={t(\"export_results_csv\")} aria-label={t(\"export_results_csv\")}>\n                        <Chip variant=\"outlined\"\n                              color=\"primary\"\n                              size=\"small\"\n                              avatar={<Avatar>csv</Avatar>}\n                              label={t(\"export\")}\n                              onClick={exportCsv}/>\n                        </Tooltip>\n\n                    { [{label: \"enrolled\", tooltip: \"only_enrolled\", value: 'onlyEnrolled'},\n                        {label: \"pre-enrolled\", tooltip: \"only_preenrolled\", value: 'onlyPreEnrolled'},\n                        {label: \"early-unenrolled\", tooltip: \"only_earlyunenrolled\", value: 'onlyEarlyUnenrolled'},\n                    {label: \"cash\", tooltip: \"only_cash\", value: 'onlyCash'},\n                    {label: \"bank-transfer\", tooltip: \"only_banktransfer\", value: 'onlyBankTransfer'},\n                    {label: \"bank-direct-debit\", tooltip: \"only_bankdirectdebit\", value: 'onlyDirectDebit'}].map(x => (\n                            <Tooltip key={x.label} title={t(x.tooltip)} aria-label={t(x.tooltip)}>\n                                <Chip size=\"small\"\n                                      color={filters[x.value]? \"primary\": \"normal\"}\n                                      label={t(x.label)}\n                                      onClick={(e) => {\n                                          let newFilters = {...filters};\n                                          if (x.value === 'onlyEnrolled' ||\n                                              x.value === 'onlyPreEnrolled' ||\n                                              x.value === 'onlyEarlyUnenrolled'\n                                          ) {\n                                              newFilters['onlyEnrolled'] = false;\n                                              newFilters['onlyPreEnrolled'] = false;\n                                              newFilters['onlyEarlyUnenrolled'] = false;\n                                          }\n\n                                          if (x.value === 'onlyBankTransfer' ||\n                                              x.value === 'onlyCash' ||\n                                              x.value === 'onlyDirectDebit'\n                                          ) {\n                                              newFilters['onlyBankTransfer'] = false;\n                                              newFilters['onlyCash'] = false;\n                                              newFilters['onlyDirectDebit'] = false;\n                                          }\n\n                                          newFilters[x.value] = !filters[x.value];\n                                          setFilters(newFilters);\n                                      }}/>\n                            </Tooltip>\n                    ))}\n\n</Box>\n        </AccordionDetails>\n      </Accordion>\n\n\n\n                <Box my={2}>\n                    <Pagination\n                        className=\"pagination\"\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            </Box>\n            <List className={classes.list}>\n                {students && students.map((student, index) => (\n                    <div key={student[\"id\"]}>\n                        <ListItem key={student[\"id\"]} button\n                                  onClick={() => {\n                                      setCurrentStudentId(student['id']);\n                                  }}>\n                            <ListItemAvatar>\n                                <Avatar className={student[\"id\"] === currentStudentId? classes.selectedAvatar: classes.avatar}>{student['full_name'].charAt(0).toUpperCase()}</Avatar>\n                            </ListItemAvatar>\n                            <ListItemText id=\"name\" primary={student.full_name}/>\n\n                                <ListItemSecondaryAction>\n                                    <Tooltip title={t(\"export\") + \" .csv\"}>\n                                    <IconButton edge=\"end\" aria-label={t(\"export\")} onClick={(e) => {\n                                        StudentsDataService\n                                            .downloadOneCsv(currentStudentId)\n                                            .then(...errorHandler({}));\n                                    }}>\n                                        <GetAppIcon/>\n                                    </IconButton>\n                                        </Tooltip>\n                                </ListItemSecondaryAction>\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n        </Box>\n    );\n};\n\nexport default StudentsList;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js",[],["265","266"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.component.js",["267","268"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport PaymentCard from \"./students.student.payments.payment.component\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst getDefaultValues = () => {\n    const date = new Date();\n    const dd = date.getDate();\n    const mm = date.getMonth() + 1; //Month from 0 to 11\n    const yyyy = date.getFullYear();\n    return {'id': null, 'date': `${yyyy}-${mm<=9 ? '0' + mm : mm}-${dd <= 9 ? '0' + dd : dd}`, 'quantity': null, 'concept': null, 'method': null}\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  newLine: {\n    width: '100%',\n       marginTop: theme.spacing(1),\n        display: \"flex\",\n    flexDirection: \"column\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  sizeSmall: {\n    width: \"25ch\"\n  },\n  line: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  composite: {display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n    gap: theme.spacing(1), width: \"100%\"}\n}));\n\nfunction Payments({ children, value, index, title, paymentIds, deletePaymentFromStudent, addPaymentId, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const loading = paymentIds === null;\n\n  const [payments, setPayments] = useState([]);\n  const [newPaymentCard, setNewPaymentCard] = useState(false);\n\n  useEffect(()=>{\n    setNewPaymentCard(false);\n  }, [payments])\n\n  const updatePayment = (id, body) => {\n    setPayments(payments.map(payment => {\n      if (payment.id !== id) return payment;\n      return body;\n    }))\n  }\n\n  const deletePayment = (id) => {\n    PaymentsDataService.delete(id)\n        .then(...errorHandler({snackbarSuccess:true}))\n        .then(function (r) {\n             deletePaymentFromStudent(id);\n        });\n  }\n\n  useEffect(() => {\n    if (paymentIds === null) return;\n\n    if (paymentIds.length === 0){\n      setPayments([]);\n    } else {\n      PaymentsDataService\n            .getMany(paymentIds)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setPayments(res.map(res => res[\"data\"]).sort((p1, p2) => p1.date.localeCompare(p2.date)));\n                });\n    }\n  }, [paymentIds])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      className={classes.root}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>  {// todo simplify everywhere\n        } <Box px={2}>\n\n              {loading?\n                  <Skeleton style={{float: 'right'}}><AddCircleIcon/></Skeleton>\n              :\n              <Tooltip style={{float: 'right'}} title={t(\"new_payment\")} aria-label={t(\"new_payment\")}>\n                <IconButton onClick={(e) => { setNewPaymentCard(true); }}>\n                  <AddCircleIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <div className={classes.newLine}>\n\n              {\n                payments && payments.map(payment =>\n                    (<PaymentCard payment={payment} key={payment['id']} updatePayment={updatePayment} deletePayment={deletePayment}/>)\n                )\n              }\n\n              {newPaymentCard &&\n                <PaymentCard payment={getDefaultValues()}\n                             updatePayment={updatePayment}\n                             deletePayment={(_) => {setNewPaymentCard(false)}}\n                            newPayment={true}\n                             student_id={student_id}\n                addPaymentId={addPaymentId}/>\n              }\n\n              {loading &&\n                <Skeleton width=\"100%\" height=\"250px\"/>  // todo we can do better\n              }\n\n              {!loading && payments.length === 0 && !newPaymentCard &&\n                <Typography>{t(\"no_payments\")}</Typography>\n              }\n              </div>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nPayments.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Payments;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js",["269","270","271","272"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport * as yup from 'yup';\nimport Person from \"./students.student.person.component\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport {sendEnrollmentEmail} from \"../_services/emailsEnrollment.service\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {sendGrantEmail} from \"../_services/emailsGrants.service\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {payment_methods} from \"../_data/payment_methods\";\nimport {emptyAttendee, emptyGuardian} from \"../_data/empty_objects\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  fullWidth: {\n    width: \"100%\"\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  sizeSmall: {\n    width: \"25ch\"\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nfunction Attendee({ children, addStudentId, value, index, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\n  const { t } = useTranslation();\n  const loading = currentStudent === null;\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = React.useState(false);\n  const deleteFullStudent = () => {\n    StudentsDataService\n              .delete(currentStudent['id'])\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                PaymentsDataService\n                      .deleteMany(currentStudent['payments'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n                GuardiansDataService\n                      .deleteMany(currentStudent['guardians'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n\n                // todo schedules, courses\n\n\n                deleteStudent(currentStudent['id']);\n              });\n  }\n  const sendGrantLetter = () => {\n      sendGrantEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}));\n  }\n  const sendEnrollmentAgreement = () => {\n      sendEnrollmentEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}));\n  }\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      <Dialog\n        open={openConfirmDeleteDialog}\n        onClose={(e) => {setOpenConfirmDeleteDialog(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t(\"delete_student_question\")}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{t(\"student_also_deletes\")}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button onClick={(e) => {\n            deleteFullStudent(currentStudent['id']);\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\" autoFocus>\n            {t(\"delete_student\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {value === index && (\n        <Box p={3}>\n            <Box px={2}>\n              {loading?\n                  !newStudent && <Skeleton style={{float: 'right'}}><PersonAddIcon/></Skeleton>\n              :\n              !newStudent && <Tooltip style={{float: 'right'}} title={t(\"new_guardian\")} aria-label={t(\"new_guardian\")}>\n                <IconButton onClick={(e) => {\n                  addNewGuardian();\n                }}>\n                  <PersonAddIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n\n              {loading ?\n                  !newStudent && <Skeleton style={{float: 'right'}}><IconButton/></Skeleton>\n              :\n               !newStudent && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\n                <IconButton onClick={(e) => {\n                  setOpenConfirmDeleteDialog(true);\n                }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <Person\n                      currentPerson={newStudent? emptyAttendee: currentStudent}\n                      newPerson={newStudent}\n                      updateCurrentStudent={(x) => {\n                        if (!newStudent) return updateCurrentStudent(x);\n                        addStudentId(x);\n                      }}\n                      patchService={patchService}\n                      onUpdate={(changedBody) => {\n                        if (\"status\" in changedBody && changedBody[\"status\"] === \"enrolled\"){\n                          // sendGrantLetter(); todo ask\n                        }\n                      }}\n                      additionalValidation={{\n                        enrollment_status: yup.string().required(t(\"status_required\")),\n                        image_agreement: yup.boolean().required(t(\"image_required\")),\n                        birth_date: yup.date().required(t(\"birthdate_required\"))\n                      }}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"price_term\")}\n                                style={{flex: 1}}\n                                name=\"price_term\"\n                                type=\"number\"\n                                InputProps={{endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,}}\n                            />,\n                            <DirtyTextField\n                                label={t(\"default_payment_method\")}\n                                style={{flex: 1}}\n                                name=\"default_payment_method\"\n                                select>\n                                { payment_methods.map(\n                                                    (method) => (\n                                                        <MenuItem key={method} value={method}>{t(method)}</MenuItem>\n                                                    )\n                                                )\n                                                }\n                            </DirtyTextField>],\n                            <DirtyTextField\n                                label={t(\"payment_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"payment_comments\"\n                            />,\n                            [<DirtyTextField\n                                label={t(\"birthdate\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                name=\"birth_date\"\n                                InputLabelProps={{shrink: true}}/>,\n                            <DirtyTextField\n                              label={t(\"years_in_xamfra\")}\n                              type=\"number\"\n                              style={{flex: 1}}\n                              name=\"years_in_xamfra\"/>],\n                          [\n                              <DirtyTextField\n                                label={t(\"status\")}\n                                style={{flex: 1}}\n                                name=\"enrollment_status\"\n                                select>\n                                {['enrolled', 'early-unenrolled', 'pre-enrolled'].map((s) => (\n                                    <MenuItem key={s} value={s}>{t(s)}</MenuItem>\n                                ))}\n                            </DirtyTextField>,\n                              <DirtyTextField\n                                label={t(\"image_agreement\")}\n                                style={{flex: 1}}\n                                name=\"image_agreement\"\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                          ],\n                        <DirtyTextField\n                                label={t(\"other_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"other_comments\"\n                            />]}\n              >\n\n              </Person>\n\n              {!newStudent && <Box my={3}>\n            <Divider />\n            </Box>}\n\n              <Box className={[classes.line, classes.composite]}>\n                {loading ?\n                      !newStudent && <Skeleton style={{flex: 1}}><Button/></Skeleton>\n                      :\n                        !newStudent &&   <Tooltip style={{flex: 1}} title={t(\"send_grant_letter\")} aria-label={t(\"send_grant_letter\")}>\n                           <Button\n                          variant=\"contained\"\n                          color=\"default\"\n                          className={classes.button}\n                          startIcon={<SendIcon />}\n                          onClick={(e) => {\n                               sendGrantLetter();\n                            }}\n                        >\n                          {t(\"grant_letter\")}\n                        </Button>\n                </Tooltip>\n                      }\n\n                {loading? !newStudent && <Skeleton style={{float: 'right'}}><Button/></Skeleton>\n                :\n               !newStudent &&  <Tooltip style={{flex: 1}} title={t(\"export_grant_letter\")} aria-label={t(\"export_grant_letter\")}>\n            <Button\n                          variant=\"contained\"\n                          color=\"default\"\n                          className={classes.button}\n                          startIcon={<GetAppIcon />}\n                          onClick={(e) => {\n                               StudentsDataService\n                    .downloadSubresource(currentStudent[\"id\"], 'grantLetter')\n                    .then(...errorHandler({snackbarSuccess:true}))\n                    .then(()=>null)\n                            }}\n                        >\n                          {t(\"grant_letter\")}\n                        </Button>\n          </Tooltip>}\n              </Box>\n\n              <Box className={[classes.line, classes.composite]}>\n                {loading?\n                     !newStudent &&  <Skeleton style={{flex: 1}}><Button/></Skeleton>\n                      :\n                        !newStudent &&   <Tooltip style={{flex: 1}} title={t(\"send_enrollment_agreement\")} aria-label={t(\"enrollment_agreement\")}>\n                           <Button\n                          variant=\"contained\"\n                          color=\"default\"\n                          className={classes.button}\n                          startIcon={<SendIcon />}\n                          onClick={(e) => {\n                               sendEnrollmentAgreement();\n                            }}\n                        >\n                          {t(\"enrollment_agreement\")}\n                        </Button>\n                </Tooltip>\n                      }\n\n                {loading? !newStudent && <Skeleton style={{float: 'right'}}><Button/></Skeleton>\n                :\n              !newStudent &&   <Tooltip style={{flex: 1}} title={t(\"export_enrollment_agreement\")} aria-label={t(\"export_enrollment_agreement\")}>\n            <Button\n                          variant=\"contained\"\n                          color=\"default\"\n                          className={classes.button}\n                          startIcon={<GetAppIcon />}\n                          onClick={(e) => {\n                               StudentsDataService\n                    .downloadSubresource(currentStudent[\"id\"], 'enrollmentAgreement')\n                    .then(...errorHandler({snackbarSuccess:true}))\n                    .then(()=>null)\n                            }}\n                        >\n                          {t(\"enrollment_agreement\")}\n                        </Button>\n          </Tooltip>}\n              </Box>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nAttendee.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Attendee;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js",["273","274","275","276","277","278","279","280"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\nimport Guardian from \"./students.student.guardian.component\";\nimport StudentsDataService from \"../_services/students.service\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport Payments from \"./students.student.payments.component\";\nimport Courses from \"./students.student.courses.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Schedule from \"./students.student.schedule.component\";\nimport * as PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n\n  },\n    fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    backgroundColor: theme.palette.primary.main\n  }, fab_placeholder: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar AND fab\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    minHeight: 200,\n\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  sizeSmall: {\n    margin: theme.spacing(1),\n    width: \"25ch\"\n  },\n  sizeLong: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\n\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\n\nexport default function Student(props) {\n  const currentStudentId = props.currentStudentId;\n  const deleteStudent = props.deleteStudent;\n  const newStudent = props.newStudent;\n  const addStudentId = props.addStudentId;\n  const loading = currentStudentId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [student, setStudent] = useState(null);  // todo rename to student\n  const [newGuardian, setNewGuardian] = useState(false);\n\n\n\n  useEffect(() => {\n    if (loading) return setStudent(null);\n    StudentsDataService\n            .getOne(currentStudentId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setStudent(res[\"data\"]);\n                });\n  }, [currentStudentId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentStudentId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n\n\n  const guardians = student === null? []: student.guardians;\n    // todo maybe tabs with or only with icons\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"auto\"\n                  aria-label=\"full width tabs example\"\n                >\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\n\n                    { !newStudent &&\n                  <Tab label={t(\"schedule\")} {...a11yProps(1)} />}\n                 { !newStudent && <Tab label={t(\"payments\")} {...a11yProps(2)} />}\n                 { !newStudent && <Tab label={t(\"courses\")} {...a11yProps(3)} />}\n\n                  {\n                  (!newStudent && guardians) && guardians.map((contact, index) => (\n                  <Tab key={t(\"contact\") + \" \" + (index+1)} label={t(\"contact\") + \" \" + (index+1)} {...a11yProps(index+4)} />\n                      ))}\n\n\n                  {\n                    (!newStudent && newGuardian) &&\n                        <Tab key={t(\"new_guardian\")} label={t(\"new_guardian\")} {...a11yProps(4+guardians.length)} />\n                  }\n\n\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <Attendee value={value}\n                      index={0}\n                      dir={theme.direction}\n                      newStudent={newStudent}\n                      title={t(\"attendee\")}\n                      currentStudent={student}\n                      addStudentId={addStudentId}\n                      patchService={StudentsDataService}\n                      updateCurrentStudent={setStudent}\n                      deleteStudent={deleteStudent}\n                      addNewGuardian={() => {\n                        setNewGuardian(true);\n                        setValue(4+guardians.length);\n                      }}\n            />\n\n            <Schedule value={value}\n                      index={1}\n                      dir={theme.direction}\n                      title={t(\"attendee\")}\n                      scheduleIds={student === null? null: student['schedules']}\n                      student_id={currentStudentId}\n            />\n            <Payments value={value}\n                      index={2}\n                      paymentIds={student === null? null: student.payments}\n                      addPaymentId={(payment_id) => {\n                        setStudent({...student, payments: [...student.payments, payment_id]})\n                      }}\n                      student_id={currentStudentId}\n                      deletePaymentFromStudent={(payment_id) => {\n                        setStudent({...student,\n                            payments: student.payments.filter((p) => p !== payment_id)});\n                      }}\n            />\n\n            <Courses value={value}\n                      index={3}\n                     history={props.history}\n                      courseIds={student === null? null: student['courses']}\n                      addCourseId={(course_id) => {\n                        setStudent({...student,\n                            courses: [...student['courses'], course_id]})\n                      }}\n                      student_id={currentStudentId}\n                      deleteCourseFromStudent={(course_id) => {\n                        setStudent({...student,\n                            courses: student['courses'].filter((c) => c !== course_id)});\n                      }}\n            />\n\n\n            {\n              guardians && guardians.map((guardian, index) => (\n                  <Guardian value={value}\n                            index={index+4}\n                            key={guardian}\n                            dir={theme.direction}\n                            guardianId={guardian}\n                            deleteGuardianId={(id) => {\n                              setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                              setValue(0);\n                            }}\n            />\n                  ))}\n\n                  <Guardian value={value}\n                        index={4+guardians.length}\n                        dir={theme.direction}\n                        newGuardian={true}\n                        deleteNewGuardian={() => {\n                            setNewGuardian(false);\n                            setValue(0);\n                        }}\n                            studentId={currentStudentId}\n                        addGuardianId={(id) => {\n                            setNewGuardian(false);\n                            setStudent({...student, guardians: [...student.guardians, id]});\n                            setValue(4+guardians.length);\n                        }\n                        }\n                        deleteGuardianId={(id) => {\n                            setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                            setValue(0);\n                        }}\n              />\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n",["281","282"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js",["283","284","285","286","287","288","289","290"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport Divider from \"@material-ui/core/Divider\";\nimport StudentGuardianDataService from \"../_services/student_guardians.service\"\nimport {student_guardian_relations} from \"../_data/relations\"\nimport Person from \"./students.student.person.component\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport * as yup from \"yup\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {education_years} from \"../_data/education\";\nimport {emptyGuardian} from \"../_data/empty_objects\";\n\n// here\nconst useStyles = makeStyles((theme) => ({\n\n  fullWidth: {\n    width: \"100%\"\n  },\n  sizeSmall: {\n    width: \"25ch\"\n  },\n  line: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  composite: {display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n    gap: theme.spacing(1), width: \"100%\"}\n}));\n\nfunction Guardian({ value, index, studentId, title, guardianId, deleteGuardianId, addGuardianId, deleteNewGuardian, newGuardian=false, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n\n  const [guardian, setGuardian] = useState(null);\n\n  const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = React.useState(false);\n  console.log(guardianId, guardian);\n\n  useEffect(() => {\n    if (newGuardian) return;\n\n    GuardiansDataService\n            .getOne(guardianId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setGuardian(res[\"data\"]);\n\n                });\n  }, [guardianId])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n        <Dialog\n        open={openConfirmDeleteDialog}\n        onClose={(e) => {setOpenConfirmDeleteDialog(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t(\"delete_guardian_question\")}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{t(\"action_cant_undone\")}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button onClick={(e) => {\n            GuardiansDataService\n              .delete(guardianId)\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                      deleteGuardianId(guardianId);\n                  });\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\" autoFocus>\n            {t(\"delete_guardian\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {value === index && (\n        <Box p={3}>\n            <Box px={2}>\n\n\n          <IconButton style={{float: 'right'}}  onClick={(e) => {\n            if (!newGuardian) return setOpenConfirmDeleteDialog(true);\n            deleteNewGuardian();\n          }}>\n            <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\n            <DeleteIcon />\n             </Tooltip>\n          </IconButton>\n\n\n              <Person currentPerson={newGuardian? emptyGuardian: guardian}\n                      studentId={studentId}\n                      newPerson={newGuardian}\n                      updateCurrentStudent={(x) => {\n                        if (!newGuardian) return setGuardian(x);\n                        StudentGuardianDataService.postWithId(studentId, x)\n                          .then(...errorHandler({snackbarSuccess: true}))\n                          .then(() => {\n                          addGuardianId(x);\n                        });\n                      }}\n                      patchService={GuardiansDataService}\n                      additionalValidation={{\n                        relation: yup.string().required(t(\"relation_required\"))}}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"relation\")}\n                                style={{flex: 1}}\n                                name=\"relation\"\n                                select\n                            >\n                          {student_guardian_relations.map((r) => (\n                                   <MenuItem key={r} value={r}>{t(r)}</MenuItem>\n                                ))}\n                                ))}\n\n                        </DirtyTextField>]]}\n              />\n\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nGuardian.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Guardian;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js",["291","292"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {MenuItem} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport * as yup from 'yup';\nimport DirtyCountrySelect from \"./contry-select.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useNormik} from \"../_helpers/normik\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport {education_years} from \"../_data/education\";\nimport Divider from \"@material-ui/core/Divider\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n\n    fullWidth: {\n        width: \"100%\"\n    },\n    sizeSmall: {\n        width: \"25ch\"\n    },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction Person(props) {\n    const currentPerson = props.currentPerson;\n    const dataService = props.patchService;\n    const newPerson = props.newPerson;\n    const updateCurrentPerson = props.updateCurrentStudent;\n    const additionalFields = props.additionalFields;\n    const additionalValidation = props.additionalValidation === undefined? {}: props.additionalValidation;\n    const studentId = props.studentId;\n    const onUpdate = props.onUpdate;\n\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const errorHandler = useErrorHandler();\n    let initialValues = currentPerson === null ? {} : currentPerson;\n\n\n    const formik = useNormik(!newPerson, {\n        initialValues: initialValues,\n        validationSchema: yup.object({...{\n            email: yup.string().email(t(\"invalid_email\")),  // todo\n            name: yup.string().required(t(\"name_required\")),\n            is_studying: yup.boolean().required(t(\"studying_required\")),\n            is_working: yup.boolean().required(t(\"working_required\")),\n            career: yup.string().when('is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"career_required\"))\n                                                }),\n            education_entity: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_entity_required\"))\n                                                }),\n            education_year: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_year_required\"))\n                                                })\n        }, ...additionalValidation}),\n        enableReinitialize: true,\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\n            if (newPerson) {\n                setStatus();\n                dataService.post({...changedValues})\n                    .then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (new_id) {\n                        updateCurrentPerson(new_id['id']);\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                    setStatus(true);\n                    }).finally(() => {\n                    setSubmitting(false);\n                });\n            } else {\n                if (Object.keys(changedValues).length > 0) {\n                setStatus();\n                dataService.patch({\n                    id: initialValues[\"id\"],\n                    body: changedValues,\n                    initial_values: initialValues\n                }).then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (patched_body) {\n                        formik.resetForm(patched_body);\n                        updateCurrentPerson(patched_body);\n\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                        setStatus(true);\n                    }).finally(() => {\n                        setSubmitting(false);\n                    });\n\n\n            } else {\n                setSubmitting(false);\n            }\n            }\n        }\n    });\n\n    function recursiveForm(elements) {\n        if (elements === undefined) return null;\n\n        return <div>\n            <Box my={3}>\n            <Divider />\n            </Box>\n            {\n            elements.map(res => (\n                <Box className={[classes.line, classes.composite]}>\n                    {res instanceof Array ?\n                        res.map((r) => (\n                            React.cloneElement(r, {formik: formik})\n                        ))\n                        : React.cloneElement(res, {formik: formik})}\n                </Box>))\n        }\n        </div>;\n    }\n\n\n    return (\n        <Box>\n            {currentPerson === null\n                ?\n                (\n\n                    <Box>\n                        <Skeleton style={{float: 'right'}}><IconButton/></Skeleton>\n                        <Skeleton style={{float: 'right'}}><IconButton/></Skeleton>\n\n                        {\n\n                            [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map((value, idx) => {\n                                return (\n                                    <Box key={idx} py={0}>\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\n                                    </Box>);\n                            })\n                        }\n                    </Box>\n                )\n                :\n                (\n                    <form onSubmit={formik.handleSubmit}>\n\n\n                        <IconButton style={{float: 'right'}}\n                                    onClick={formik.handleReset}\n                                    disabled={!formik.dirty || formik.isSubmitting}>\n                            <Tooltip title={t(\"reset\")} aria-label={t(\"reset\")}>\n                                <RestoreIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <IconButton style={{float: 'right'}} type=\"submit\"\n                                    disabled={!newPerson && (!formik.dirty || formik.isSubmitting)}>\n                            <Tooltip title={t(\"save\")} aria-label={t(\"save\")}>\n                                <SaveIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <DirtyTextField\n                            label={t(\"id\")}\n                            name=\"id\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                        />\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"address\")}\n                                formik={formik}\n                                style={{flex: 4}}\n                                name=\"address\"\n                            />\n                            <DirtyTextField\n                                label={t(\"city\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"city\"\n                            />\n                            <DirtyTextField\n                                label={t(\"zip\")}\n                                formik={formik}\n                                type=\"number\"\n                                style={{flex: 1}}\n                                name=\"zip\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"dni\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"dni\"\n                            />\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"phone\"\n                            />\n\n\n\n                        </Box>\n\n\n\n                        <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyCountrySelect\n                                formik={formik}\n                                style={{flex: 1}}\n                                name={\"country_of_origin\"}\n                                label={t(\"country_of_origin\")}\n                            />\n<DirtyTextField\n                                label={t(\"gender\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"gender\"\n                                select>\n                                <MenuItem value=\"m\">{t(\"male\")}</MenuItem>\n                                <MenuItem value=\"f\">{t(\"female\")}</MenuItem>\n                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\n                            </DirtyTextField>\n                        </Box>\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name=\"is_studying\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"education_entity\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"education_entity\"\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                name=\"education_year\"\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name=\"is_working\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                name=\"career\"\n                            />\n                        </Box>\n\n                        {recursiveForm(additionalFields)}\n\n                    </form>\n                )\n\n            }\n        </Box>\n    );\n}\n\n\nexport default Person;",["293","294"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js",["295","296","297"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {countries} from \"../_data/countries\";\nimport TextField from \"@material-ui/core/TextField\";\nimport createStyles from \"@material-ui/styles/createStyles\";\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\nconst useStyles = makeStyles(theme => (createStyles({\n  textField: dirty => ({\n    '& label.Mui-focused':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},  // todo color to theme\n    '& .MuiInput-underline:after': {borderBottomColor: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},\n      '& label':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\n      '& fieldset': {borderColor: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\n  }\n  ),\n    option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },})));\n\nexport default function DirtyCountrySelect({formik, name, label, ...textFieldProps}) {\n  const getInitialOption = (code) => {\n      if (code === undefined) return '';\n      return countries.find(x=>x.code===code);\n  }\n\n  const [option, _setOption] = React.useState(getInitialOption(formik.values[name]));\n\n  React.useEffect(() => {\n    _setOption(getInitialOption(formik.values[name]));\n  }, [formik.values[name]]);\n\n  const setOption = (option) => {\n      const newOption = (option !== null)? option.code: '';\n      formik.setFieldValue(name, newOption);\n      _setOption(newOption);\n  }\n\n  const dirty = formik.values[name] !== formik.initialValues[name];\n  const classes = useStyles(dirty);\n\n  const [inputValue, setInputValue] = React.useState('');\n\n  const { t } = useTranslation();\n\n  return (\n    <Autocomplete  // o¡todo use\n      style={{ width: 300 }}\n      options={countries}\n      classes={{\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={(option) => option.label }\n      value={option}\n        onChange={(event, newValue) => {\n          setOption(newValue);\n        }}\n        inputValue={inputValue}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        name={name}\n      onBlur={formik.handleBlur}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.label} ({option.code}) +{option.phone}\n        </React.Fragment>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={label}\n          className={classes.textField}\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n  );\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/relations.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js",["298","299"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendReceiptEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/paymentReceipt/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js",[],["300","301"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js",["302","303"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendEnrollmentEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/enrollmentEmail/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsGrants.service.js",["304","305"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendGrantEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/grantEmail/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n",["306","307"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js",["308","309","310"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport React, {useEffect, useState} from \"react\";\nimport SchedulesDataService from \"../_services/schedules.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport styled from \"@emotion/styled\";\nimport { useTheme } from '@material-ui/core/styles';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport {useSnackbar} from \"notistack\";\nconst useStyles = makeStyles((theme) => ({\n  fullWidth: {\n    width: \"100%\"\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  sizeSmall: {\n    width: \"25ch\"\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n    calendar: {\n      margin: theme.spacing(2)\n    }\n\n}));\n\n\nfunction Schedule({ value, index, title, scheduleIds, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n  const errorHandler = useErrorHandler();\n    const theme = useTheme();\n   const StyleWrapper = styled.div`\n      .fc-button, .fc-button.fc-button-primary {\n        background: ${theme.palette.primary.main};\n        color: ${theme.palette.primary.contrastText};\n        border-color: ${theme.palette.primary.main};\n        background-image: none;\n    }\n    .fc-button:enabled:hover {\n        background: ${theme.palette.primary.dark};\n        color: ${theme.palette.primary.contrastText};\n        border-color: ${theme.palette.primary.dark};\n        background-image: none;\n    }\n    `\n\n    const [schedules, setSchedules] = useState(null);\n   const loading = scheduleIds === null;\n\n   const eventFromSchedule = (schedule) => {\n       return {\n            daysOfWeek: [schedule['day_week']],\n            title: schedule['course']['name'],\n            groupId: [schedule['id']],\n            startTime: schedule['start_time'],\n            endTime: schedule['end_time'],\n            color: schedule[\"is_base\"]? theme.palette.secondary.main: theme.palette.secondary.light,\n            textColor: schedule[\"is_base\"]? theme.palette.secondary.contrastText: theme.palette.secondary.contrastText,\n            extendedProps: {\n                schedule: schedule\n            },\n        }\n   }\n\n   useEffect(() => {\n    if (scheduleIds === null) return;\n\n    if (scheduleIds.length === 0){\n      setSchedules([]);\n    } else {\n      SchedulesDataService\n            .getMany(scheduleIds)\n            .then(...errorHandler({}))\n            .then(function (res) {\n                    setSchedules(res.map(res => res[\"data\"]).map(schedule => {\n                        return eventFromSchedule(schedule);\n                    }));\n                });\n    }\n  }, [scheduleIds, theme]);\n\n   const eventChanged = (info) => {\n       const schedule = info.event.extendedProps[\"schedule\"];\n       const newEvent = info.event;\n       let body = {};\n        body['day_week'] = newEvent['start'].getDay();\n        body['start_time'] = newEvent['start'].toLocaleTimeString('en-US', { hour12: false });\n        body['end_time'] = newEvent['end'].toLocaleTimeString('en-US', { hour12: false });\n\n        if (schedule[\"is_base\"] === true) {\n            body['course_id'] = schedule['course_id'];\n            body['student_id'] = student_id;\n            body['is_base'] = false;\n            SchedulesDataService\n                    .post(body)\n                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                    .then(function (res) {\n                        let calendarApi = info.view.calendar;\n                        newEvent['is_base'] = true;\n                        calendarApi.addEvent(eventFromSchedule(res));\n                        info.revert();\n                    }).catch(function(err){\n                        info.revert();\n            });\n\n        } else {\n            SchedulesDataService\n                    .patch({id: schedule['id'],\n                                                body: body,\n                                                initial_values: schedule})\n                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                    .then(function (res) {\n                        /*setSchedules(schedules.map(payment => {\n                          if (payment.id !== res['id']) return payment;\n                          return res;\n                        }))*/\n                    }).catch(function (err){\n                        info.revert();\n                    });\n        }\n    }\n  return (\n    <div\n      role=\"tabpanel\"\n      className={classes.root}\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\n\n    >{// todo fix height\n           }\n           <Box p={2} style={{height: \"100%\"}}>\n                <StyleWrapper  style={{height: \"100%\"}}>\n                      <FullCalendar\n                        plugins={[ timeGridPlugin, interactionPlugin ]}\n                        initialView=\"timeGridWeek\"\n                        height=\"100%\"\n                        firstDay={1}\n                        editable={true}\n                          selectable={true}\n                          selectMirror={true}\n                          dayMaxEvents={true}\n                          weekends={true}\n\n                            snapDuration={'00:15'}\n                        events={schedules}\n                        eventAdd={function(){}}\n                        eventChange={function(clickInfo){\n                            // const schedule = clickInfo.event.extendedProps[\"schedule\"];\n                            // if (schedule[\"is_base\"] === true) return enqueueSnackbar(t(\"cant_remove_schedule\"), {'variant': 'warning'});\n                        }}\n                        eventRemove={function(){}}\n                        select={function(selectInfo){\n                            let title = prompt('Please enter a new title for your event')\n                            let calendarApi = selectInfo.view.calendar\n\n                            calendarApi.unselect() // clear date selection\n\n                            if (title) {\n                              calendarApi.addEvent({\n                                id: 24,\n                                title,\n                                start: selectInfo.startStr,\n                                end: selectInfo.endStr,\n                                allDay: selectInfo.allDay\n                              })\n                            }\n                        }}\n                        eventContent={function(){}} // custom render function\n                        eventClick={function(clickInfo){\n                            const schedule = clickInfo.event.extendedProps[\"schedule\"];\n                            if (schedule[\"is_base\"] === true) return enqueueSnackbar(t(\"cant_remove_schedule\"), {'variant': 'warning'});\n                           if (window.confirm(t(\"sure_delete_event\"))) {\n                               SchedulesDataService\n                                    .delete(schedule['id'])\n                                    .then(...errorHandler({snackbarSuccess: true}))\n                                    .then(function (res) {\n                                        clickInfo.event.remove();\n                                    });\n\n                        }}}\n                        eventTimeFormat={{\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            hour12: false\n                        }}\n                        eventResize={eventChanged}\n                        eventDrop={eventChanged}\n                      />\n                </StyleWrapper>\n               </Box>\n    </div>\n  );\n}\n\nexport default Schedule;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/loadingBackdrop.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/empty_objects.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.courses.component.js",["311","312"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport StudentsCourseDataService from \"../_services/student_courses.service\";\nimport CoursesDataService from \"../_services/courses.service\"\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {\n    AppBar,\n    Dialog,\n    ListItemSecondaryAction,\n    Slide\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchBar from \"./searchbar.component\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },list: {\n        overflow: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: '30px'\n    },\n  newLine: {\n    width: '100%',\n       marginTop: theme.spacing(1),\n        display: \"flex\",\n    flexDirection: \"column\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  sizeSmall: {\n    width: \"25ch\"\n  },\n  line: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  composite: {display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n    gap: theme.spacing(1), width: \"100%\"}, appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nclass CloseIcon extends React.Component {\n    render() {\n        return null;\n    }\n}\n\nfunction Courses({ children, history, value, index, title, courseIds, deleteCourseFromStudent, addCourseId, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const loading = courseIds === null;\n\n  const [courses, setCourses] = useState([]);\n  const [allCourses, setAllCourses] = useState(null);\n  const [newCourse, setNewCourse] = useState(false);\n  const handleClose = () => {\n    setNewCourse(false);\n  };\n\n  useEffect(()=>{\n    setNewCourse(false);\n  }, [courses])\n\n\n   const [searchTerm, setSearchTerm] = useState('');\n   const [page, setPage] = useState(1);\n   const [count, setCount] = useState(0);\n\n   function search() {\n       if (loading || !newCourse) return;\n\n        CoursesDataService\n            .getAll({name: 'name', value: searchTerm}, page, ['name', 'description', 'id'])\n            .then(...errorHandler({}))\n            .then(res => {\n                setAllCourses(res[\"data\"].filter(x => !(courseIds.includes(x['id']))));\n                setCount(res[\"_pagination\"][\"totalPages\"]);\n            });\n    }\n\n    useEffect(search, [page, setAllCourses, loading, newCourse]);\n\n   const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n  const deleteStudentCourse = (id) => {\n    StudentsCourseDataService\n        .delete(student_id, id)\n        .then(...errorHandler({snackbarSuccess:true}))\n        .then(function (r) {\n             deleteCourseFromStudent(id);\n        });\n  }\n\n  useEffect(() => {\n    if (courseIds === null) return;\n\n    if (courseIds.length === 0){\n      setCourses([]);\n    } else {\n      CoursesDataService\n            .getMany(courseIds)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setCourses(res.map(res => res[\"data\"]));\n                });\n    }\n  }, [courseIds])\nconst onChangeSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    };\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      className={classes.root}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>  {// todo simplify everywhere\n        } <Box px={2}>\n\n            <Dialog fullScreen open={newCourse} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar} color=\"secondary\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n                {t(\"enroll_to_course\")}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n                {t(\"cancel\")}\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.box} m={3}>\n                <SearchBar\n                    label={t(\"courses\")}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={search}\n                />\n\n                <Box my={2}>\n                    <Pagination\n                        className=\"pagination\"\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            <List className={classes.list}>\n                {allCourses && allCourses.map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button\n                                  onClick={() => {\n                                      if (window.confirm(t(\"confirm_enroll_to_course\"))){  // todo\n                                        StudentsCourseDataService\n                                            .postWithId(student_id, course['id'])\n                                            .then(...errorHandler({snackbarSuccess: true}))\n                                            .then((body) => {\n                                                addCourseId(course['id']);\n                                                handleClose();\n                                            })\n                                      }\n                                  }}>\n\n                            <ListItemText id=\"name\" primary={course['name']} secondary={course['description']}/>\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n            </Box>\n\n      </Dialog>\n\n              {loading?\n                  <Skeleton style={{float: 'right'}}><AddCircleIcon/></Skeleton>\n              :\n              <Tooltip style={{float: 'right'}} title={t(\"new_payment\")} aria-label={t(\"new_payment\")}>\n                <IconButton onClick={(e) => {\n                    if (allCourses === null) {\n                        search();\n                    }\n                    setNewCourse(true);\n                }}>\n                  <AddCircleIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <div className={classes.newLine}>\n\n                  <List className={classes.list}>\n                {courses && courses.map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button onClick={(e) => {\n                            history.push('/courses?id='+course['id']);\n                        }}>\n                            <ListItemText id=\"name\" primary={course.name} secondary={course.description}/>\n                            <ListItemSecondaryAction>\n                                <IconButton onClick={(e) => {\n                                    if (window.confirm(t(\"confirm_unenroll_to_course\"))) deleteStudentCourse(course['id'])\n                                }}>\n                                  <DeleteIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n\n\n\n              {loading &&\n                <Skeleton width=\"100%\" height=\"250px\"/>  // todo we can do better\n              }\n\n              {!loading && courses.length === 0 && !newCourse &&\n                <Typography>{t(\"no_courses\")}</Typography>\n              }\n              </div>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default Courses;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js",[],{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"313","replacedBy":"317"},{"ruleId":"315","replacedBy":"318"},{"ruleId":"313","replacedBy":"319"},{"ruleId":"315","replacedBy":"320"},{"ruleId":"313","replacedBy":"321"},{"ruleId":"315","replacedBy":"322"},{"ruleId":"313","replacedBy":"323"},{"ruleId":"315","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":6,"column":6,"nodeType":"327","endLine":6,"endColumn":8,"suggestions":"328"},{"ruleId":"313","replacedBy":"329"},{"ruleId":"315","replacedBy":"330"},{"ruleId":"313","replacedBy":"331"},{"ruleId":"315","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":18,"column":8,"nodeType":"335","messageId":"336","endLine":18,"endColumn":23},{"ruleId":"333","severity":1,"message":"337","line":88,"column":12,"nodeType":"335","messageId":"336","endLine":88,"endColumn":19},{"ruleId":"325","severity":1,"message":"338","line":127,"column":23,"nodeType":"327","endLine":127,"endColumn":51,"suggestions":"339"},{"ruleId":"313","replacedBy":"340"},{"ruleId":"315","replacedBy":"341"},{"ruleId":"333","severity":1,"message":"342","line":11,"column":8,"nodeType":"335","messageId":"336","endLine":11,"endColumn":21},{"ruleId":"325","severity":1,"message":"343","line":88,"column":6,"nodeType":"327","endLine":88,"endColumn":18,"suggestions":"344"},{"ruleId":"333","severity":1,"message":"345","line":3,"column":8,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"346","line":5,"column":19,"nodeType":"335","messageId":"336","endLine":5,"endColumn":28},{"ruleId":"333","severity":1,"message":"347","line":29,"column":8,"nodeType":"335","messageId":"336","endLine":29,"endColumn":19},{"ruleId":"333","severity":1,"message":"348","line":34,"column":24,"nodeType":"335","messageId":"336","endLine":34,"endColumn":37},{"ruleId":"333","severity":1,"message":"349","line":13,"column":8,"nodeType":"335","messageId":"336","endLine":13,"endColumn":28},{"ruleId":"333","severity":1,"message":"350","line":17,"column":8,"nodeType":"335","messageId":"336","endLine":17,"endColumn":15},{"ruleId":"333","severity":1,"message":"351","line":18,"column":8,"nodeType":"335","messageId":"336","endLine":18,"endColumn":11},{"ruleId":"333","severity":1,"message":"352","line":19,"column":8,"nodeType":"335","messageId":"336","endLine":19,"endColumn":12},{"ruleId":"333","severity":1,"message":"353","line":20,"column":8,"nodeType":"335","messageId":"336","endLine":20,"endColumn":15},{"ruleId":"333","severity":1,"message":"354","line":21,"column":8,"nodeType":"335","messageId":"336","endLine":21,"endColumn":16},{"ruleId":"333","severity":1,"message":"355","line":23,"column":13,"nodeType":"335","messageId":"336","endLine":23,"endColumn":22},{"ruleId":"325","severity":1,"message":"356","line":96,"column":6,"nodeType":"327","endLine":96,"endColumn":24,"suggestions":"357"},{"ruleId":"313","replacedBy":"358"},{"ruleId":"315","replacedBy":"359"},{"ruleId":"333","severity":1,"message":"345","line":3,"column":8,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"346","line":4,"column":19,"nodeType":"335","messageId":"336","endLine":4,"endColumn":28},{"ruleId":"333","severity":1,"message":"354","line":8,"column":9,"nodeType":"335","messageId":"336","endLine":8,"endColumn":17},{"ruleId":"333","severity":1,"message":"360","line":9,"column":8,"nodeType":"335","messageId":"336","endLine":9,"endColumn":15},{"ruleId":"333","severity":1,"message":"361","line":26,"column":8,"nodeType":"335","messageId":"336","endLine":26,"endColumn":22},{"ruleId":"333","severity":1,"message":"362","line":27,"column":9,"nodeType":"335","messageId":"336","endLine":27,"endColumn":24},{"ruleId":"333","severity":1,"message":"363","line":54,"column":9,"nodeType":"335","messageId":"336","endLine":54,"endColumn":16},{"ruleId":"325","severity":1,"message":"364","line":72,"column":6,"nodeType":"327","endLine":72,"endColumn":18,"suggestions":"365"},{"ruleId":"333","severity":1,"message":"366","line":18,"column":8,"nodeType":"335","messageId":"336","endLine":18,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":45,"column":11,"nodeType":"335","messageId":"336","endLine":45,"endColumn":20},{"ruleId":"313","replacedBy":"368"},{"ruleId":"315","replacedBy":"369"},{"ruleId":"325","severity":1,"message":"370","line":46,"column":6,"nodeType":"327","endLine":46,"endColumn":27,"suggestions":"371"},{"ruleId":"325","severity":1,"message":"372","line":46,"column":7,"nodeType":"373","endLine":46,"endColumn":26},{"ruleId":"333","severity":1,"message":"374","line":59,"column":11,"nodeType":"335","messageId":"336","endLine":59,"endColumn":12},{"ruleId":"333","severity":1,"message":"375","line":1,"column":8,"nodeType":"335","messageId":"336","endLine":1,"endColumn":22},{"ruleId":"333","severity":1,"message":"376","line":2,"column":9,"nodeType":"335","messageId":"336","endLine":2,"endColumn":20},{"ruleId":"313","replacedBy":"377"},{"ruleId":"315","replacedBy":"378"},{"ruleId":"333","severity":1,"message":"375","line":1,"column":8,"nodeType":"335","messageId":"336","endLine":1,"endColumn":22},{"ruleId":"333","severity":1,"message":"376","line":2,"column":9,"nodeType":"335","messageId":"336","endLine":2,"endColumn":20},{"ruleId":"333","severity":1,"message":"375","line":1,"column":8,"nodeType":"335","messageId":"336","endLine":1,"endColumn":22},{"ruleId":"333","severity":1,"message":"376","line":2,"column":9,"nodeType":"335","messageId":"336","endLine":2,"endColumn":20},{"ruleId":"313","replacedBy":"379"},{"ruleId":"315","replacedBy":"380"},{"ruleId":"333","severity":1,"message":"381","line":46,"column":27,"nodeType":"335","messageId":"336","endLine":46,"endColumn":40},{"ruleId":"333","severity":1,"message":"337","line":65,"column":10,"nodeType":"335","messageId":"336","endLine":65,"endColumn":17},{"ruleId":"325","severity":1,"message":"382","line":97,"column":6,"nodeType":"327","endLine":97,"endColumn":26,"suggestions":"383"},{"ruleId":"325","severity":1,"message":"384","line":116,"column":23,"nodeType":"327","endLine":116,"endColumn":64,"suggestions":"385"},{"ruleId":"325","severity":1,"message":"343","line":144,"column":6,"nodeType":"327","endLine":144,"endColumn":17,"suggestions":"386"},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],["387"],["388"],["387"],["388"],["387"],["388"],["387"],["388"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["389"],["387"],["388"],["387"],["388"],"no-unused-vars","'LoadingBackdrop' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'searchTerm'. Either include them or remove the dependency array.",["390"],["387"],["388"],"'PersonAddIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.",["391"],"'Typography' is defined but never used.","'TextField' is defined but never used.","'ReceiptIcon' is defined but never used.","'emptyGuardian' is defined but never used.","'GuardiansDataService' is defined but never used.","'AddIcon' is defined but never used.","'Fab' is defined but never used.","'Zoom' is defined but never used.","'Tooltip' is defined but never used.","'Skeleton' is defined but never used.","'PropTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'loading'. Either include them or remove the dependency array.",["392"],["387"],["388"],"'Divider' is defined but never used.","'InputAdornment' is defined but never used.","'education_years' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'newGuardian'. Either include them or remove the dependency array.",["393"],"'GetAppIcon' is defined but never used.","'studentId' is assigned a value but never used.",["387"],["388"],"React Hook React.useEffect has missing dependencies: 'formik.values' and 'name'. Either include them or remove the dependency array. If '_setOption' needs the current value of 'formik.values', you can also switch to useReducer instead of useState and read 'formik.values' in the reducer.",["394"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'t' is assigned a value but never used.","'serviceFactory' is defined but never used.","'API_VERSION' is defined but never used.",["387"],["388"],["387"],["388"],"'closeSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'eventFromSchedule'. Either include them or remove the dependency array.",["395"],"React Hook useEffect has missing dependencies: 'courseIds', 'errorHandler', and 'searchTerm'. Either include them or remove the dependency array. If 'setAllCourses' needs the current value of 'courseIds', you can also switch to useReducer instead of useState and read 'courseIds' in the reducer.",["396"],["397"],"no-global-assign","no-unsafe-negation",{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},"Update the dependencies array to be: [handler]",{"range":"416","text":"417"},"Update the dependencies array to be: [page, setStudents, filters, searchTerm, errorHandler]",{"range":"418","text":"419"},"Update the dependencies array to be: [errorHandler, paymentIds]",{"range":"420","text":"421"},"Update the dependencies array to be: [currentStudentId, errorHandler, loading]",{"range":"422","text":"423"},"Update the dependencies array to be: [errorHandler, guardianId, newGuardian]",{"range":"424","text":"425"},"Update the dependencies array to be: [formik.values, name]",{"range":"426","text":"427"},"Update the dependencies array to be: [errorHandler, eventFromSchedule, scheduleIds, theme]",{"range":"428","text":"429"},"Update the dependencies array to be: [page, setAllCourses, loading, newCourse, searchTerm, errorHandler, courseIds]",{"range":"430","text":"431"},"Update the dependencies array to be: [courseIds, errorHandler]",{"range":"432","text":"433"},[129,131],"[handler]",[4012,4040],"[page, setStudents, filters, searchTerm, errorHandler]",[2783,2795],"[errorHandler, paymentIds]",[2818,2836],"[currentStudentId, errorHandler, loading]",[2636,2648],"[errorHandler, guardianId, newGuardian]",[1694,1715],"[formik.values, name]",[3104,3124],"[errorHandler, eventFromSchedule, scheduleIds, theme]",[3355,3396],"[page, setAllCourses, loading, newCourse, searchTerm, errorHandler, courseIds]",[4093,4104],"[courseIds, errorHandler]"]