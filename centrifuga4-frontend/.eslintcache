[{"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js":"1","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js":"2","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js":"3","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js":"4","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js":"5","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/routes.js":"6","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js":"7","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js":"8","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js":"9","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js":"10","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js":"11","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.component.js":"12","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js":"13","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js":"14","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js":"15","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js":"16","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js":"17","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js":"18","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js":"19","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js":"20","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js":"21","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js":"22","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js":"23","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js":"24","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js":"25","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js":"26","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js":"27","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js":"28","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js":"29","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js":"30","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js":"31","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/relations.js":"32","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js":"33","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js":"34","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js":"35","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js":"36","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js":"37","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js":"38","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js":"39","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js":"40","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js":"41","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js":"42","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js":"43","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsGrants.service.js":"44","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js":"45","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js":"46","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js":"47","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js":"48","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/empty_objects.js":"49","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.courses.component.js":"50","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js":"51","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js":"52","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js":"53","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.component.js":"54","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/needs.js":"55","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/userInvites.service.js":"56","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/users.service.js":"57","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_skeletons/iconButton.js":"58","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/PreEnrollmentPage/PreEnrollmentPage.js":"59","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/pre-enrollment.service.js":"60","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/payments.component.js":"61","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.user.component.js":"62","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.userperson.component.js":"63","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.component.js":"64","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list.component.js":"65","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/rooms.service.js":"66","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.room.component.js":"67","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/scheduler.component.js":"68","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.room.schedule.component.js":"69","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/ExportSearchChip.component.js":"70","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/theme_button.component.js":"71","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/translate_button.component.js":"72","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/not_found.js":"73"},{"size":1217,"mtime":1610534696698,"results":"74","hashOfConfig":"75"},{"size":683,"mtime":1611434950829,"results":"76","hashOfConfig":"75"},{"size":226,"mtime":1611442219444,"results":"77","hashOfConfig":"75"},{"size":8230,"mtime":1611442336843,"results":"78","hashOfConfig":"75"},{"size":10527,"mtime":1611442336835,"results":"79","hashOfConfig":"75"},{"size":1680,"mtime":1611434871798,"results":"80","hashOfConfig":"75"},{"size":829,"mtime":1611444412114,"results":"81","hashOfConfig":"75"},{"size":136,"mtime":1610534696698,"results":"82","hashOfConfig":"75"},{"size":1554,"mtime":1610534696698,"results":"83","hashOfConfig":"75"},{"size":4217,"mtime":1611425495661,"results":"84","hashOfConfig":"75"},{"size":102,"mtime":1610534696698,"results":"85","hashOfConfig":"75"},{"size":4495,"mtime":1610539006981,"results":"86","hashOfConfig":"75"},{"size":102,"mtime":1610534696698,"results":"87","hashOfConfig":"75"},{"size":1410,"mtime":1610534696698,"results":"88","hashOfConfig":"75"},{"size":13541,"mtime":1610541011827,"results":"89","hashOfConfig":"75"},{"size":13641,"mtime":1610538697377,"results":"90","hashOfConfig":"75"},{"size":8131,"mtime":1611417798893,"results":"91","hashOfConfig":"75"},{"size":5164,"mtime":1610539007001,"results":"92","hashOfConfig":"75"},{"size":13913,"mtime":1610541417434,"results":"93","hashOfConfig":"75"},{"size":3475,"mtime":1610710736373,"results":"94","hashOfConfig":"75"},{"size":1086,"mtime":1610975076039,"results":"95","hashOfConfig":"75"},{"size":206,"mtime":1611440120721,"results":"96","hashOfConfig":"75"},{"size":1259,"mtime":1611444412098,"results":"97","hashOfConfig":"75"},{"size":1288,"mtime":1610538516531,"results":"98","hashOfConfig":"75"},{"size":11238,"mtime":1611424653727,"results":"99","hashOfConfig":"75"},{"size":2307,"mtime":1611445038923,"results":"100","hashOfConfig":"75"},{"size":6691,"mtime":1611434998824,"results":"101","hashOfConfig":"75"},{"size":6383,"mtime":1610534696698,"results":"102","hashOfConfig":"75"},{"size":174,"mtime":1610534696698,"results":"103","hashOfConfig":"75"},{"size":231,"mtime":1611438350530,"results":"104","hashOfConfig":"75"},{"size":1696,"mtime":1610705518185,"results":"105","hashOfConfig":"75"},{"size":229,"mtime":1611254428806,"results":"106","hashOfConfig":"75"},{"size":5634,"mtime":1611441891096,"results":"107","hashOfConfig":"75"},{"size":1191,"mtime":1610013084917,"results":"108","hashOfConfig":"75"},{"size":1397,"mtime":1610534696698,"results":"109","hashOfConfig":"75"},{"size":103,"mtime":1610534696698,"results":"110","hashOfConfig":"75"},{"size":442,"mtime":1610187820379,"results":"111","hashOfConfig":"75"},{"size":12021,"mtime":1610539007013,"results":"112","hashOfConfig":"75"},{"size":890,"mtime":1610534696698,"results":"113","hashOfConfig":"75"},{"size":362,"mtime":1608812823740,"results":"114","hashOfConfig":"75"},{"size":893,"mtime":1611227296865,"results":"115","hashOfConfig":"75"},{"size":96,"mtime":1610534696698,"results":"116","hashOfConfig":"75"},{"size":292,"mtime":1611257166053,"results":"117","hashOfConfig":"75"},{"size":884,"mtime":1610534696698,"results":"118","hashOfConfig":"75"},{"size":9582,"mtime":1611442219420,"results":"119","hashOfConfig":"75"},{"size":91,"mtime":1610534696698,"results":"120","hashOfConfig":"75"},{"size":3707,"mtime":1611428190581,"results":"121","hashOfConfig":"75"},{"size":103,"mtime":1610534696698,"results":"122","hashOfConfig":"75"},{"size":843,"mtime":1610381732416,"results":"123","hashOfConfig":"75"},{"size":8844,"mtime":1610740456379,"results":"124","hashOfConfig":"75"},{"size":101,"mtime":1610534696698,"results":"125","hashOfConfig":"75"},{"size":113,"mtime":1610534696698,"results":"126","hashOfConfig":"75"},{"size":115,"mtime":1610534696698,"results":"127","hashOfConfig":"75"},{"size":5895,"mtime":1611425483301,"results":"128","hashOfConfig":"75"},{"size":1208,"mtime":1610483170623,"results":"129","hashOfConfig":"75"},{"size":681,"mtime":1610485187600,"results":"130","hashOfConfig":"75"},{"size":99,"mtime":1610534696698,"results":"131","hashOfConfig":"75"},{"size":368,"mtime":1610537113987,"results":"132","hashOfConfig":"75"},{"size":47325,"mtime":1611442801946,"results":"133","hashOfConfig":"75"},{"size":1625,"mtime":1611252104917,"results":"134","hashOfConfig":"75"},{"size":1867,"mtime":1611335717769,"results":"135","hashOfConfig":"75"},{"size":3591,"mtime":1611418512308,"results":"136","hashOfConfig":"75"},{"size":9467,"mtime":1611426011910,"results":"137","hashOfConfig":"75"},{"size":2713,"mtime":1611428722135,"results":"138","hashOfConfig":"75"},{"size":9566,"mtime":1611425659115,"results":"139","hashOfConfig":"75"},{"size":99,"mtime":1611424265939,"results":"140","hashOfConfig":"75"},{"size":4711,"mtime":1611428682511,"results":"141","hashOfConfig":"75"},{"size":5772,"mtime":1611428217373,"results":"142","hashOfConfig":"75"},{"size":1607,"mtime":1611428989079,"results":"143","hashOfConfig":"75"},{"size":1816,"mtime":1611421533159,"results":"144","hashOfConfig":"75"},{"size":828,"mtime":1611440717537,"results":"145","hashOfConfig":"75"},{"size":1158,"mtime":1611440981594,"results":"146","hashOfConfig":"75"},{"size":594,"mtime":1611445095451,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1d3a0qb",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"173"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"161"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"173"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"150"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"150"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"173"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"196"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"173"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"150"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"173"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"156"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"173"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"173"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"153"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"161"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"173"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"161"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"156"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"173"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"224"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"153"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"287"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"173"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"156"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"156"},"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/i18nextConf.js",[],["334","335"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/PrivateRoute.js",[],["336","337"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/theme-context.js",[],["338","339"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/ResetPage/ResetPage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/SignupPage/SignupPage.js",[],["340","341"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/routes.js",["342"],"import React from \"react\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Students from \"../_components/students.component\";\nimport Users from \"../_components/users.component\";\nimport {useTranslation} from \"react-i18next\";\nimport Payments from \"../_components/payments.component\";\nimport Rooms from \"../_components/rooms.component\";\n\n\nconst Courses = () => {\n  const { t } = useTranslation();\n  const query = new URLSearchParams(window.location.search);\n  const id = query.get('id')\n  return (\n      <div>\n        <h1>{t(\"courses\")}</h1>\n      <h2>{id}</h2>\n      </div>\n\n  );\n};\n\nconst Teachers = () => {\n  const { t } = useTranslation();\n\n  return (\n    <h1>{t(\"teachers\")}</h1>\n  );\n};\n\n\nconst Routes = [\n  {\n    path: '/students',\n    component: Students,\n    title: 'students',\n    icon: PersonIcon\n  },\n  {\n    path: '/courses',\n    component: Courses,\n    title: 'courses',\n    icon: ClassIcon\n  },\n  {\n    path: '/teachers',\n    component: Teachers,\n    title: 'teachers',\n    icon: SchoolIcon\n  },\n  {\n    path: '/locations',\n    component: Rooms,\n    title: 'locations',\n    icon:  RoomIcon\n  },{\n    path: '/payments',\n    component: Payments,\n    title: 'payments',\n    icon: AccountBalanceIcon\n  },{\n    path: '/users',\n    component: Users,\n    title: 'users',\n    icon: ContactMailIcon\n  }\n];\n\n\nexport default Routes;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/signup.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/on-mount.js",["343"],"import { useEffect } from \"react\";\n\nexport const useOnMount = handler => {\n  return useEffect(() => {\n    return handler();\n  }, []);\n};",["344","345"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/auth.service.js",[],["346","347"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/students.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.component.js",["348","349"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport PaymentCard from \"./students.student.payments.payment.component\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\n\nconst getDefaultValues = () => {\n    const date = new Date();\n    const dd = date.getDate();\n    const mm = date.getMonth() + 1; //Month from 0 to 11\n    const yyyy = date.getFullYear();\n    return {'id': null, 'date': `${yyyy}-${mm<=9 ? '0' + mm : mm}-${dd <= 9 ? '0' + dd : dd}`, 'quantity': null, 'concept': null, 'method': null}\n}\nconst useStyles = makeStyles((theme) => ({\n\n  actionIcon: {\n    float: 'right'\n  },\n  newLine: {\n    width: '100%',\n       marginTop: theme.spacing(1),\n        display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\n\nfunction Payments({ children, value, index, title, paymentIds, deletePaymentFromStudent, addPaymentId, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const loading = paymentIds === null;\n\n  const [payments, setPayments] = useState([]);\n  const [newPaymentCard, setNewPaymentCard] = useState(false);\n\n  useEffect(()=>{\n    setNewPaymentCard(false);\n  }, [payments])\n\n  const updatePayment = (id, body) => {\n    setPayments(payments.map(payment => {\n      if (payment.id !== id) return payment;\n      return body;\n    }))\n  }\n\n  const deletePayment = (id) => {\n    PaymentsDataService.delete(id)\n        .then(...errorHandler({snackbarSuccess:true}))\n        .then(function (r) {\n             deletePaymentFromStudent(id);\n        });\n  }\n\n  useEffect(() => {\n    if (paymentIds === null) return;\n\n    if (paymentIds.length === 0){\n      setPayments([]);\n    } else {\n      PaymentsDataService\n            .getMany(paymentIds)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setPayments(res.map(res => res[\"data\"]).sort((p1, p2) => p1.date.localeCompare(p2.date)));\n                });\n    }\n  }, [paymentIds])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>  {// todo simplify everywhere\n        } <Box px={2}>\n\n              {loading?\n                  <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n              <Tooltip className={classes.actionIcon} title={t(\"new_payment\")} aria-label={t(\"new_payment\")}>\n                <IconButton onClick={(e) => { setNewPaymentCard(true); }}>\n                  <AddCircleIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <div className={classes.newLine}>\n\n              {\n                payments && payments.map(payment =>\n                    (<PaymentCard payment={payment} key={payment['id']} updatePayment={updatePayment} deletePayment={deletePayment}/>)\n                )\n              }\n\n              {newPaymentCard &&\n                <PaymentCard payment={getDefaultValues()}\n                             updatePayment={updatePayment}\n                             deletePayment={(_) => {setNewPaymentCard(false)}}\n                            newPayment={true}\n                             student_id={student_id}\n                addPaymentId={addPaymentId}/>\n              }\n\n              {loading &&\n                <Skeleton width=\"100%\" height=\"250px\"/>  // todo we can do better\n              }\n\n              {!loading && payments.length === 0 && !newPaymentCard &&\n                <Typography>{t(\"no_payments\")}</Typography>\n              }\n              </div>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nPayments.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Payments;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/payments.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/normik.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/countries.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.attendee.component.js",["350","351","352","353","354"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport * as yup from 'yup';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\"\nimport Person from \"./students.student.person.component\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport {sendEnrollmentEmail} from \"../_services/emailsEnrollment.service\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {sendGrantEmail} from \"../_services/emailsGrants.service\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {payment_methods} from \"../_data/payment_methods\";\nimport {emptyAttendee, emptyGuardian} from \"../_data/empty_objects\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: {\n    float: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction Attendee({ children, addStudentId, value, index, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\n  const { t } = useTranslation();\n  const loading = currentStudent === null;\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = React.useState(false);\n  const deleteFullStudent = () => {\n    StudentsDataService\n              .delete(currentStudent['id'])\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                PaymentsDataService\n                      .deleteMany(currentStudent['payments'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n                GuardiansDataService\n                      .deleteMany(currentStudent['guardians'])\n                      .then(...errorHandler({}))  // todo everywhere\n                      .then(function (res) {\n\n                      });\n\n\n                // todo schedules, courses\n\n\n                deleteStudent(currentStudent['id']);\n              });\n  }\n  const sendGrantLetter = () => {\n      sendGrantEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}));\n  }\n  const sendEnrollmentAgreement = () => {\n      sendEnrollmentEmail(currentStudent['id'])\n          .then(...errorHandler({snackbarSuccess: true}));\n  }\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      <Dialog\n        open={openConfirmDeleteDialog}\n        onClose={(e) => {setOpenConfirmDeleteDialog(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t(\"delete_student_question\")}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{t(\"student_also_deletes\")}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button onClick={(e) => {\n            deleteFullStudent(currentStudent['id']);\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\" autoFocus>\n            {t(\"delete_student\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {value === index && (\n        <Box p={3}>\n            <Box px={2}>\n              {loading?\n                  !newStudent && <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n              !newStudent && <Tooltip style={{float: 'right'}} title={t(\"new_guardian\")} aria-label={t(\"new_guardian\")}>\n                <IconButton onClick={(e) => {\n                  addNewGuardian();\n                }}>\n                  <PersonAddIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n\n              {loading ?\n                  !newStudent && <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n               !newStudent && <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\n                <IconButton onClick={(e) => {\n                  setOpenConfirmDeleteDialog(true);\n                }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <Person\n                      currentPerson={newStudent? emptyAttendee: currentStudent}\n                      newPerson={newStudent}\n                      updateCurrentStudent={(x) => {\n                        if (!newStudent) return updateCurrentStudent(x);\n                        addStudentId(x);\n                      }}\n                      patchService={patchService}\n                      onUpdate={(changedBody) => {\n                        if (\"status\" in changedBody && changedBody[\"status\"] === \"enrolled\"){\n                          // sendGrantLetter(); todo ask\n                        }\n                      }}\n                      additionalValidation={{\n                        enrollment_status: yup.string().required(t(\"status_required\")),\n                        image_agreement: yup.boolean().required(t(\"image_required\")),\n                        birth_date: yup.date().required(t(\"birthdate_required\"))\n                      }}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"price_term\")}\n                                style={{flex: 1}}\n                                name=\"price_term\"\n                                type=\"number\"\n                                InputProps={{endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,}}\n                            />,\n                            <DirtyTextField\n                                label={t(\"default_payment_method\")}\n                                style={{flex: 1}}\n                                name=\"default_payment_method\"\n                                select>\n                                { payment_methods.map(\n                                                    (method) => (\n                                                        <MenuItem key={method} value={method}>{t(method)}</MenuItem>\n                                                    )\n                                                )\n                                                }\n                            </DirtyTextField>],\n                            <DirtyTextField\n                                label={t(\"payment_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"payment_comments\"\n                            />,\n                            [<DirtyTextField\n                                label={t(\"birthdate\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                name=\"birth_date\"\n                                InputLabelProps={{shrink: true}}/>,\n                            <DirtyTextField\n                              label={t(\"years_in_xamfra\")}\n                              type=\"number\"\n                              style={{flex: 1}}\n                              name=\"years_in_xamfra\"/>],\n                          [\n                              <DirtyTextField\n                                label={t(\"status\")}\n                                style={{flex: 1}}\n                                name=\"enrollment_status\"\n                                select>\n                                {['enrolled', 'early-unenrolled', 'pre-enrolled'].map((s) => (\n                                    <MenuItem key={s} value={s}>{t(s)}</MenuItem>\n                                ))}\n                            </DirtyTextField>,\n                              <DirtyTextField\n                                label={t(\"image_agreement\")}\n                                style={{flex: 1}}\n                                name=\"image_agreement\"\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                          ],\n                        <DirtyTextField\n                                label={t(\"other_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                rowsMax={8}\n                                name=\"other_comments\"\n                            />]}\n              >\n\n              </Person>\n\n              {!loading && !newStudent && <Box my={3}>\n            <Divider />\n            </Box>}\n\n              <Box className={[classes.line, classes.composite]}>\n                {!loading && !newStudent &&\n                <Tooltip style={{flex: 1}} title={t(\"send_grant_letter\")} aria-label={t(\"send_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<SendIcon/>}\n                      onClick={(e) => {\n                        sendGrantLetter();\n                      }}\n                  >\n                    {t(\"grant_letter\")}\n                  </Button>\n                </Tooltip>}\n\n                {!loading && !newStudent &&\n                <Tooltip style={{flex: 1}} title={t(\"export_grant_letter\")} aria-label={t(\"export_grant_letter\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                        StudentsDataService\n                            .downloadSubresource(currentStudent[\"id\"], 'grantLetter')\n                            .then(...errorHandler({snackbarSuccess: true}))\n                            .then(() => null)\n                      }}\n                  >\n                    {t(\"grant_letter\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n\n              <Box className={[classes.line, classes.composite]}>\n                {!loading && !newStudent && <Tooltip style={{flex: 1}} title={t(\"send_enrollment_agreement\")}\n                                                     aria-label={t(\"enrollment_agreement\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<SendIcon/>}\n                      onClick={(e) => {\n                        sendEnrollmentAgreement();\n                      }}\n                  >\n                    {t(\"enrollment_agreement\")}\n                  </Button>\n                </Tooltip>}\n\n                {!loading && !newStudent && <Tooltip style={{flex: 1}} title={t(\"export_enrollment_agreement\")}\n                                                     aria-label={t(\"export_enrollment_agreement\")}>\n                  <Button\n                      variant=\"contained\"\n                      color=\"default\"\n                      className={classes.button}\n                      startIcon={<GetAppIcon/>}\n                      onClick={(e) => {\n                        StudentsDataService\n                            .downloadSubresource(currentStudent[\"id\"], 'enrollmentAgreement')\n                            .then(...errorHandler({snackbarSuccess: true}))\n                            .then(() => null)\n                      }}\n                  >\n                    {t(\"enrollment_agreement\")}\n                  </Button>\n                </Tooltip>}\n              </Box>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nAttendee.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Attendee;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.component.js",["355"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\nimport Guardian from \"./students.student.guardian.component\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Payments from \"./students.student.payments.component\";\nimport Courses from \"./students.student.courses.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport Schedule from \"./students.student.schedule.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    display: 'flex',\n      flexDirection: 'column'\n  },\n    content: {\n      overflowX: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        flex: 1,\n        height: '100%'\n    },\n    tab: {\n      height: '100%'\n    }\n}));\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\n\nexport default function Student(props) {\n  const currentStudentId = props.currentStudentId;\n  const deleteStudent = props.deleteStudent;\n  const newStudent = props.newStudent;\n  const addStudentId = props.addStudentId;\n  const loading = currentStudentId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [student, setStudent] = useState(null);  // todo rename to student\n  const [newGuardian, setNewGuardian] = useState(false);\n\n\n\n  useEffect(() => {\n    if (loading) return setStudent(null);\n    StudentsDataService\n            .getOne(currentStudentId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setStudent(res[\"data\"]);\n                });\n  }, [currentStudentId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentStudentId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n\n\n  const guardians = student === null? []: student.guardians;\n    // todo maybe tabs with or only with icons\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                >\n                  <Tab label={t(\"attendee\")} {...a11yProps(0)} />\n\n                    { !newStudent &&\n                  <Tab label={t(\"schedules\")} {...a11yProps(1)} />}\n                 { !newStudent && <Tab label={t(\"payments\")} {...a11yProps(2)} />}\n                 { !newStudent && <Tab label={t(\"courses\")} {...a11yProps(3)} />}\n\n                  {\n                  (!newStudent && guardians) && guardians.map((contact, index) => (\n                  <Tab key={t(\"contact\") + \" \" + (index+1)} label={t(\"contact\") + \" \" + (index+1)} {...a11yProps(index+4)} />\n                      ))}\n\n\n                  {\n                    (!newStudent && newGuardian) &&\n                        <Tab key={t(\"new_guardian\")} label={t(\"new_guardian\")} {...a11yProps(4+guardians.length)} />\n                  }\n\n\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            containerStyle={{height: '100%'}}\n            className={classes.content}\n            onChangeIndex={handleChangeIndex}\n          >\n            <Attendee value={value}\n                      index={0}\n                      dir={theme.direction}\n                      newStudent={newStudent}\n                      title={t(\"attendee\")}\n                      currentStudent={student}\n                      addStudentId={addStudentId}\n                      patchService={StudentsDataService}\n                      updateCurrentStudent={setStudent}\n                      deleteStudent={deleteStudent}\n                      addNewGuardian={() => {\n                        setNewGuardian(true);\n                        setValue(4+guardians.length);\n                      }}\n            />\n\n            <Schedule value={value}\n                      index={1}\n                      className={classes.tab}\n                      dir={theme.direction}\n                      title={t(\"attendee\")}\n                      scheduleIds={student === null? null: student['schedules']}\n                      student_id={currentStudentId}\n            />\n            <Payments value={value}\n                      index={2}\n                      paymentIds={student === null? null: student.payments}\n                      addPaymentId={(payment_id) => {\n                        setStudent({...student, payments: [...student.payments, payment_id]})\n                      }}\n                      student_id={currentStudentId}\n                      deletePaymentFromStudent={(payment_id) => {\n                        setStudent({...student,\n                            payments: student.payments.filter((p) => p !== payment_id)});\n                      }}\n            />\n\n            <Courses value={value}\n                      index={3}\n                     history={props.history}\n                      courseIds={student === null? null: student['courses']}\n                      addCourseId={(course_id) => {\n                        setStudent({...student,\n                            courses: [...student['courses'], course_id]})\n                      }}\n                      student_id={currentStudentId}\n                      deleteCourseFromStudent={(course_id) => {\n                        setStudent({...student,\n                            courses: student['courses'].filter((c) => c !== course_id)});\n                      }}\n            />\n\n\n            {\n              guardians && guardians.map((guardian, index) => (\n                  <Guardian value={value}\n                            index={index+4}\n                            key={guardian}\n                            dir={theme.direction}\n                            guardianId={guardian}\n                            deleteGuardianId={(id) => {\n                              setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                              setValue(0);\n                            }}\n            />\n                  ))}\n\n                  <Guardian value={value}\n                        index={4+guardians.length}\n                        dir={theme.direction}\n                        newGuardian={true}\n                        deleteNewGuardian={() => {\n                            setNewGuardian(false);\n                            setValue(0);\n                        }}\n                            studentId={currentStudentId}\n                        addGuardianId={(id) => {\n                            setNewGuardian(false);\n                            setStudent({...student, guardians: [...student.guardians, id]});\n                            setValue(4+guardians.length);\n                        }\n                        }\n                        deleteGuardianId={(id) => {\n                            setStudent({...student, guardians: student['guardians'].filter((gId) => gId !== id)});\n                            setValue(0);\n                        }}\n              />\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.guardian.component.js",["356","357"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {MenuItem} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport StudentGuardianDataService from \"../_services/student_guardians.service\"\nimport {student_guardian_relations} from \"../_data/relations\"\nimport Person from \"./students.student.person.component\";\nimport GuardiansDataService from \"../_services/guardians.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport * as yup from \"yup\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport {emptyGuardian} from \"../_data/empty_objects\";\n\nfunction Guardian({ value, index, studentId, title, guardianId, deleteGuardianId, addGuardianId, deleteNewGuardian, newGuardian=false, ...other }) {\n  const { t } = useTranslation();\n  const errorHandler = useErrorHandler();\n\n  const [guardian, setGuardian] = useState(null);\n\n  const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = React.useState(false);\n\n  useEffect(() => {\n    if (newGuardian) return;\n\n    GuardiansDataService\n            .getOne(guardianId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setGuardian(res[\"data\"]);\n\n                });\n  }, [guardianId])\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n        <Dialog\n        open={openConfirmDeleteDialog}\n        onClose={(e) => {setOpenConfirmDeleteDialog(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t(\"delete_guardian_question\")}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{t(\"action_cant_undone\")}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button onClick={(e) => {\n            GuardiansDataService\n              .delete(guardianId)\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                      deleteGuardianId(guardianId);\n                  });\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\" autoFocus>\n            {t(\"delete_guardian\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {value === index && (\n        <Box p={3}>\n            <Box px={2}>\n\n\n          <IconButton style={{float: 'right'}}  onClick={(e) => {\n            if (!newGuardian) return setOpenConfirmDeleteDialog(true);\n            deleteNewGuardian();\n          }}>\n            <Tooltip title={t(\"delete\")} aria-label={t(\"delete\")}>\n            <DeleteIcon />\n             </Tooltip>\n          </IconButton>\n\n\n              <Person currentPerson={newGuardian? emptyGuardian: guardian}\n                      studentId={studentId}\n                      newPerson={newGuardian}\n                      updateCurrentStudent={(x) => {\n                        if (!newGuardian) return setGuardian(x);\n                        StudentGuardianDataService.postWithId(studentId, x)\n                          .then(...errorHandler({snackbarSuccess: true}))\n                          .then(() => {\n                          addGuardianId(x);\n                        });\n                      }}\n                      patchService={GuardiansDataService}\n                      additionalValidation={{\n                        relation: yup.string().required(t(\"relation_required\"))}}\n                      additionalFields={\n                        [[<DirtyTextField\n                                label={t(\"relation\")}\n                                style={{flex: 1}}\n                                name=\"relation\"\n                                select\n                            >\n                          {student_guardian_relations.map((r) => (\n                                   <MenuItem key={r} value={r}>{t(r)}</MenuItem>\n                                ))}\n                                ))}\n\n                        </DirtyTextField>]]}\n              />\n\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nGuardian.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default Guardian;",["358","359"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.person.component.js",["360"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport {MenuItem} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport * as yup from 'yup';\nimport DirtyCountrySelect from \"./contry-select.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useNormik} from \"../_helpers/normik\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport {education_years} from \"../_data/education\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    },\n    actionIcon: {\n        float: 'right'\n    }\n}));\n\nfunction Person(props) {\n    const currentPerson = props.currentPerson;\n    const dataService = props.patchService;\n    const newPerson = props.newPerson;\n    const updateCurrentPerson = props.updateCurrentStudent;\n    const additionalFields = props.additionalFields;\n    const additionalValidation = props.additionalValidation === undefined? {}: props.additionalValidation;\n    const studentId = props.studentId;\n    const onUpdate = props.onUpdate;\n    const loading = currentPerson === null;\n\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const errorHandler = useErrorHandler();\n    let initialValues = loading ? {} : currentPerson;\n\n\n    const formik = useNormik(!newPerson, {\n        initialValues: initialValues,\n        validationSchema: yup.object({...{\n            email: yup.string().email(t(\"invalid_email\")),  // todo\n            name: yup.string().required(t(\"name_required\")),\n            is_studying: yup.boolean().required(t(\"studying_required\")),\n            is_working: yup.boolean().required(t(\"working_required\")),\n            career: yup.string().when('is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"career_required\"))\n                                                }),\n            education_entity: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_entity_required\"))\n                                                }),\n            education_year: yup.string().when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(t(\"education_year_required\"))\n                                                })\n        }, ...additionalValidation}),\n        enableReinitialize: true,\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\n            if (newPerson) {\n                setStatus();\n                dataService.post({...changedValues})\n                    .then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (new_id) {\n                        updateCurrentPerson(new_id['id']);\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                    setStatus(true);\n                    }).finally(() => {\n                    setSubmitting(false);\n                });\n            } else {\n                if (Object.keys(changedValues).length > 0) {\n                setStatus();\n                dataService.patch({\n                    id: initialValues[\"id\"],\n                    body: changedValues,\n                    initial_values: initialValues\n                }).then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (patched_body) {\n                        formik.resetForm(patched_body);\n                        updateCurrentPerson(patched_body);\n\n                        if (typeof onUpdate === 'function') onUpdate(changedValues);\n                    }).catch(function (err) {\n                        setStatus(true);\n                    }).finally(() => {\n                        setSubmitting(false);\n                    });\n\n\n            } else {\n                setSubmitting(false);\n            }\n            }\n        }\n    });\n\n    function recursiveForm(elements) {\n        if (elements === undefined) return null;\n\n        return <div>\n            <Box my={3}>\n            <Divider />\n            </Box>\n            {\n            elements.map((res, idx) => (\n                <Box key={idx} className={`${classes.line} ${classes.composite}`}>\n                    {res instanceof Array ?\n                        res.map((r, idx2) => (\n                            React.cloneElement(r, {formik: formik, key: idx+\"-\"+idx2})\n                        ))\n                        : React.cloneElement(res, {formik: formik})}\n                </Box>))\n        }\n        </div>;\n    }\n\n\n    return (\n        <Box>\n            {loading?\n                (\n\n                    <Box>\n                         <IconButtonSkeleton className={classes.actionIcon}/>\n                       <IconButtonSkeleton className={classes.actionIcon}/>\n\n\n                            <div style={{clear: 'both'}}>\n                               {   [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"].map((value, idx) => {\n                                return (\n                                    <Box key={idx} py={0} >\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\n                                    </Box>);\n                            })}\n                            </div>\n                    </Box>\n                )\n                :\n                (\n                    <form onSubmit={formik.handleSubmit}>\n\n\n                        <IconButton className={classes.actionIcon}\n                                     onClick={formik.handleReset}\n                                     disabled={!formik.dirty || formik.isSubmitting}>\n                            <Tooltip title={t(\"reset\")} aria-label={t(\"reset\")}>\n                                <RestoreIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <IconButton className={classes.actionIcon} type=\"submit\"\n                                    disabled={!newPerson && (!formik.dirty || formik.isSubmitting)}>\n                            <Tooltip title={t(\"save\")} aria-label={t(\"save\")}>\n                                <SaveIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <DirtyTextField\n                            label={t(\"id\")}\n                            name=\"id\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                        />\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"address\")}\n                                formik={formik}\n                                style={{flex: 4}}\n                                name=\"address\"\n                            />\n                            <DirtyTextField\n                                label={t(\"city\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"city\"\n                            />\n                            <DirtyTextField\n                                label={t(\"zip\")}\n                                formik={formik}\n                                type=\"number\"\n                                style={{flex: 1}}\n                                name=\"zip\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"dni\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"dni\"\n                            />\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"phone\"\n                            />\n\n\n\n                        </Box>\n\n\n\n                        <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyCountrySelect\n                                formik={formik}\n                                style={{flex: 1}}\n                                name={\"country_of_origin\"}\n                                label={t(\"country_of_origin\")}\n                            />\n<DirtyTextField\n                                label={t(\"gender\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"gender\"\n                                select>\n                                <MenuItem value=\"m\">{t(\"male\")}</MenuItem>\n                                <MenuItem value=\"f\">{t(\"female\")}</MenuItem>\n                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\n                            </DirtyTextField>\n                        </Box>\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name=\"is_studying\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"education_entity\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"education_entity\"\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                name=\"education_year\"\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name=\"is_working\"\n                                formik={formik}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                name=\"career\"\n                            />\n                        </Box>\n\n                        {recursiveForm(additionalFields)}\n\n                    </form>\n                )\n\n            }\n        </Box>\n    );\n}\n\n\nexport default Person;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/contry-select.component.js",["361","362"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {countries} from \"../_data/countries\";\nimport TextField from \"@material-ui/core/TextField\";\nimport createStyles from \"@material-ui/styles/createStyles\";\nimport DirtyTextField from \"./dirtytextfield.component\";\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\nconst useStyles = makeStyles(theme => (createStyles({\n  textField: dirty => ({\n    '& label.Mui-focused':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},  // todo color to theme\n    '& .MuiInput-underline:after': {borderBottomColor: dirty? theme.palette.neutral.status.dirty: theme.palette.primary.main},\n      '& label':  {color: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\n      '& fieldset': {borderColor: dirty? theme.palette.neutral.status.dirty: theme.palette.neutral.emphasisText.medium},\n  }\n  ),\n    option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },})));\n\nexport default function DirtyCountrySelect({formik, noDirty, name, label, ...textFieldProps}) {\n  const getInitialOption = (code) => {\n      if (code === undefined) return countries.find(x=>x.code==='');\n      return countries.find(x=>x.code===code);\n  }\n\n  const [option, _setOption] = React.useState(getInitialOption(formik.values[name]));\n\n  React.useEffect(() => {\n    _setOption(getInitialOption(formik.values[name]));\n  }, [formik.values, name]);\n\n  const setOption = (option) => {\n      const newOption = (option !== null)? option.code: '';\n      formik.setFieldValue(name, newOption);\n      _setOption(option);\n  }\n\n  const dirty = noDirty === true? false: formik.values[name] !== formik.initialValues[name];\n  const classes = useStyles(dirty);\n\n  const [inputValue, setInputValue] = React.useState('');\n\n  const { t } = useTranslation();\n\n  return (\n    <Autocomplete\n      style={{ width: 300 }}\n      options={countries}\n      classes={{\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={(option) => option.label }\n      getOptionSelected={(o) => o.code === option.code}\n      value={option}\n        onChange={(event, newValue) => {\n          setOption(newValue);\n        }}\n        inputValue={inputValue}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        name={name}\n      onBlur={formik.handleBlur}\n      renderOption={(option) => (\n        <React.Fragment key={option.code}>\n          <span>{countryToFlag(option.code)}</span>\n          {option.label} ({option.code}) +{option.phone}\n        </React.Fragment>\n      )}\n\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={label}\n          noDirty={noDirty}\n          className={classes.textField}\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n          error={formik.status  || formik.errors[name] !== undefined}\n        helperText={formik.touched[name] && formik.errors[name]}\n        />\n      )}\n    />\n  );\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/index.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_context/user-context.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/password-reset.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/searchbar.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/service-factory.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/App/App.js",["363","364","365"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/HomePage/HomePage.js",["366","367"],"import {makeStyles} from \"@material-ui/core/styles\";\nimport createStyles from \"@material-ui/styles/createStyles\";\nimport React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Routes from \"./routes\";\nimport {BrowserRouter, Link, Redirect, Route, Router} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport HomeToolbar from \"../_components/toolbar.home.component\";\nimport {createBrowserHistory} from \"history\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => (createStyles({\n    root: {\n        display: 'flex',\n        height: '100vh'\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        background: theme.palette.neutral.main,\n        color: theme.palette.neutral.emphasisText.medium,\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        display: 'flex',\n        flexFlow: 'column',\n        height: \"100%\",\n        width: \"100%\",\n        overflow: 'auto'\n    },\n    main: {\n        flex: 1,\n        padding: theme.spacing(3),\n        overflow: 'auto'\n    },\n    icon: {\n      '&': {\n          color: theme.palette.neutral.emphasisText.medium,\n      }\n    },\n    selectedIcon: {\n      '&': {\n          color: theme.palette.primary.main,\n      }\n    },\n    grow: {\n        flexGrow: 1,\n    },\n})));\n\nconst HomePage = (props) => {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    const { t } = useTranslation();\n\n    const [open, setOpen] = React.useState(false);\n    const [currentRoute, setCurrentRoute] = React.useState('/students');\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const onItemClick = p => {\n        setCurrentRoute(p.path);\n    };\n\n    const history = createBrowserHistory();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}>\n                <HomeToolbar\n                    changeTheme={props.changeTheme}\n                    handleDrawerOpen={handleDrawerOpen}\n                    handleDrawerClose={handleDrawerClose}\n                    open={open}\n                />\n            </AppBar>\n            <BrowserRouter history={history} basename=\"/app/home\">\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                >\n                    <div className={classes.toolbar}>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        {Routes.map((prop) =>(\n                                  <ListItem key={prop.title} to={prop.path } button component={Link} onClick={() => onItemClick(prop)}>\n                                    <ListItemIcon className={prop.path === currentRoute? classes.selectedIcon: classes.icon}>\n                                        <Tooltip title={t(prop.title)} aria-label={t(prop.title)}>\n                                            {<prop.icon/>}\n                                        </Tooltip>\n                                    </ListItemIcon>\n                                    <ListItemText primary={t(prop.title)}/>\n                                </ListItem>\n                                ))}\n                    </List>\n                </Drawer>\n                <div className={classes.content}>\n                    <div className={classes.toolbar}/>\n                    <main className={classes.main}>\n                        {Routes.map((prop) => {\n                            return (\n                                <Route key={prop.title} path={prop.path} component={prop.component}/>)\n                        })}\n                    </main>\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default HomePage;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/handle-response.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/auth-header.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/config.js",[],["368","369"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/dirtytextfield.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/relations.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/toolbar.home.component.js",["370","371","372","373","374"],"import IconButton from \"@material-ui/core/IconButton\";\nimport clsx from \"clsx\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React, {useContext} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport i18next from \"i18next\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport createStyles from \"@material-ui/styles/createStyles\";\nimport {userContext} from \"../_context/user-context\";\nimport {authenticationService} from \"../_services/auth.service\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport TranslateButton from \"./translate_button.component\";\nimport ThemeButton from \"./theme_button.component\";\n\nconst languageMap = {\n    eng: { label: \"english\", dir: \"ltr\", active: true },\n    cat: { label: \"català\", dir: \"ltr\", active: false }\n};\n\nconst useStyles = makeStyles(theme => (createStyles({\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n})));\n\nexport default function HomeToolbar(props){\n    const changeTheme = props.changeTheme;\n    const classes = useStyles();\n    const errorHandler = useErrorHandler();\n\n    const selected = localStorage.getItem(\"i18nextLng\") || \"eng\";\n    const { t } = useTranslation();\n\n    const title = \"centrífuga4\";\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const isMenuOpen = Boolean(anchorEl);\n    const handleProfileMenuOpen = (event, ) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const [anchorElLan, setAnchorElLan] = React.useState(null);\n    const isLanguageMenuOpen = Boolean(anchorElLan);\n    const handleLanguageMenuOpen = (event) => {\n        setAnchorElLan(event.currentTarget);\n    };\n    const handleLanguageMenuClose = () => {\n        setAnchorElLan(null);\n    };\n    const changeLanguage = (language) => {\n        i18next.changeLanguage(language).then();\n        handleLanguageMenuClose();\n    }\n    React.useEffect(() => {\n        document.body.dir = languageMap[selected].dir;\n      }, [anchorElLan, selected]);\n\n    const languageMenuId = 'primary-language-select-menu';\n    const languageMenu = (\n        <Menu\n            anchorEl={anchorElLan}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={languageMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isLanguageMenuOpen}\n            onClose={handleLanguageMenuClose}>\n            {Object.keys(languageMap)?.map(key => (\n              <MenuItem key={key} onClick={() => changeLanguage(key)}>{languageMap[key].label}</MenuItem>\n            ))}\n        </Menu>\n    );\n\n    const userCtx = useContext(userContext);\n\n\n    const userMenuId = 'primary-search-account-menu';\n    const userMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={userMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMenuOpen}\n            onClose={handleMenuClose}>\n\n\n                     <MenuItem\n                         onClick={(event) => {\n                             authenticationService\n                                 .logout()\n                                 .then(...errorHandler({}))\n                                 .then(() => {\n                                     userCtx[\"setUser\"]({logged: false, ping: false});\n                                 });\n                             handleMenuClose(event);\n                         }}>\n                         {t(\"log_out\")}\n                     </MenuItem>\n\n\n        </Menu>\n    );\n\n    return (\n    <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label={t(\"open_drawer\")}\n                        onClick={props.handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: props.open,\n                        })}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                      {title}\n                    </Typography>\n                    <div className={classes.grow}/>\n\n                    <TranslateButton/>\n            <ThemeButton />\n\n\n                        <Tooltip title={t(\"my_account\")}>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={handleProfileMenuOpen}\n                            aria-label={t(\"my_account\")}\n                            aria-controls={userMenuId}\n                            aria-haspopup=\"true\">\n                            <AccountCircleIcon/>\n                        </IconButton>\n                    </Tooltip>\n\n\n        {languageMenu}\n        {userMenu}\n                </Toolbar>\n    )\n};\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/theme.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_yup/validators.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/guardians.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/education.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.payments.payment.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsReceipts.service.js",["375","376"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendReceiptEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/paymentReceipt/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/reportWebVitals.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsEnrollment.service.js",["377","378"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendEnrollmentEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/enrolmentEmail/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_helpers/history.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/password_regex.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/emailsGrants.service.js",["379","380"],"import serviceFactory from \"./service-factory\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport axios from \"axios\";\n\n\nexport const sendGrantEmail = (id) => {  // todo abstract\n            return new Promise(function (resolve, reject) {\n                axios({\n                    method: 'post',\n                    url: `${BACKEND_URL}/emails/v1/grantEmail/${id}`,\n                    headers: {\n                        ...{\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache'\n                        }, ...authHeader()\n                    }\n                }).then(function (res) {\n                        resolve(res);\n                    }).catch(function (err) {\n                        reject(err);\n                });\n            });\n        };\n\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/LoginPage/LoginPage.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/payment_methods.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.schedule.component.js",["381"],"import {useTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport SchedulesDataService from \"../_services/schedules.service\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useSnackbar} from \"notistack\";\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n    calendar: {\n      margin: theme.spacing(2)\n    }\n\n}));\n\n\nfunction Schedule({ value, index, title, scheduleIds, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n  const errorHandler = useErrorHandler();\nconst theme = useTheme();\n   const eventChanged = (info, day_week, start_time, end_time, schedule) => {\n       const newEvent = info.event;\n       let body = {};\n        body['day_week'] = day_week;\n        body['start_time'] = start_time;\n        body['end_time'] = end_time;\n\n        if (schedule[\"is_base\"]) {\n            body['course_id'] = schedule[\"course_id\"];\n            body['student_id'] = student_id;\n            body['is_base'] = false;\n            SchedulesDataService\n                    .post(body)\n                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                    .then(function (res) {\n                        let calendarApi = info.view.calendar;\n                        newEvent['is_base'] = true;  // todo why needed\n                        calendarApi.addEvent(eventFromSchedule(theme, res));\n                        info.revert();\n                    }).catch(function(err){\n                        info.revert();\n            });\n\n        } else {\n            SchedulesDataService\n                    .patch({id: schedule['id'],\n                                                body: body,\n                                                initial_values: schedule})\n                    .then(...errorHandler({errorOut: true, snackbarSuccess: true}))\n                    .then(function (res) {\n                        /*setSchedules(schedules.map(payment => {\n                          if (payment.id !== res['id']) return payment;\n                          return res;\n                        }))*/\n                    }).catch(function (err){\n                        info.revert();\n                    });\n        }\n    }\n  return (\n    <div\n      role=\"tabpanel\"\n      className={classes.root}\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\n\n    >\n        <Scheduler\n            onEventClick={function (clickInfo) {\n                           const schedule = clickInfo.event.extendedProps[\"schedule\"];\n                           if (schedule[\"is_base\"] === true) return enqueueSnackbar(t(\"cant_remove_schedule\"), {'variant': 'warning'});\n                           if (window.confirm(t(\"sure_delete_event\"))) {\n                               SchedulesDataService\n                                   .delete(schedule['id'])\n                                   .then(...errorHandler({snackbarSuccess: true}))\n                                   .then(function (res) {\n                                       clickInfo.event.remove();\n                                   });\n\n                           }\n                       }}\n            onEventDrop={eventChanged}\n            onEventResize={eventChanged}\n            scheduleIds={scheduleIds}\n            editable={true}\n        />\n    </div>\n  );\n}\n\nexport default Schedule;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/schedules.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/empty_objects.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.student.courses.component.js",["382","383"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport StudentsCourseDataService from \"../_services/student_courses.service\";\nimport CoursesDataService from \"../_services/courses.service\"\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {\n    AppBar,\n    Dialog,\n    ListItemSecondaryAction,\n    Slide\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SearchBar from \"./searchbar.component\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n        overflow: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1\n    },\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: '30px'\n    },\n  newLine: {\n    width: '100%',\n       marginTop: theme.spacing(1),\n        display: \"flex\",\n    flexDirection: \"column\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  }, actionIcon: {\n      float: 'right'\n    }\n}));\n\nclass CloseIcon extends React.Component {\n    render() {\n        return null;\n    }\n}\n\nfunction Courses({ children, history, value, index, title, courseIds, deleteCourseFromStudent, addCourseId, student_id, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const loading = courseIds === null;\n\n  const [courses, setCourses] = useState([]);\n  const [allCourses, setAllCourses] = useState(null);\n  const [newCourse, setNewCourse] = useState(false);\n  const handleClose = () => {\n    setNewCourse(false);\n  };\n\n  useEffect(()=>{\n    setNewCourse(false);\n  }, [courses])\n\n\n   const [searchTerm, setSearchTerm] = useState('');\n   const [page, setPage] = useState(1);\n   const [count, setCount] = useState(0);\n\n   function search() {\n       if (loading || !newCourse) return;\n\n        CoursesDataService\n            .getAll({name: 'name', value: searchTerm}, page, ['name', 'description', 'id'])\n            .then(...errorHandler({}))\n            .then(res => {\n                setAllCourses(res[\"data\"].filter(x => !(courseIds.includes(x['id']))));\n                setCount(res[\"_pagination\"][\"totalPages\"]);\n            });\n    }\n\n    useEffect(search, [page, setAllCourses, loading, newCourse]);\n\n   const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n  const deleteStudentCourse = (id) => {\n    StudentsCourseDataService\n        .delete(student_id, id)\n        .then(...errorHandler({snackbarSuccess:true}))\n        .then(function (r) {\n             deleteCourseFromStudent(id);\n        });\n  }\n\n  useEffect(() => {\n    if (courseIds === null) return;\n\n    if (courseIds.length === 0){\n      setCourses([]);\n    } else {\n      CoursesDataService\n            .getMany(courseIds)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setCourses(res.map(res => res[\"data\"]));\n                });\n    }\n  }, [courseIds])\nconst onChangeSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    };\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>  {// todo simplify everywhere\n        } <Box px={2}>\n\n            <Dialog fullScreen open={newCourse} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar} color=\"secondary\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n                {t(\"enroll_to_course\")}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n                {t(\"cancel\")}\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.box} m={3}>\n                <SearchBar\n                    label={t(\"courses\")}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={search}\n                />\n\n                <Box my={2}>\n                    <Pagination\n                        className={classes.pagination}\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            <List className={classes.list}>\n                {allCourses && allCourses.map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button\n                                  onClick={() => {\n                                      if (window.confirm(t(\"confirm_enroll_to_course\"))){  // todo\n                                        StudentsCourseDataService\n                                            .postWithId(student_id, course['id'])\n                                            .then(...errorHandler({snackbarSuccess: true}))\n                                            .then((body) => {\n                                                addCourseId(course['id']);\n                                                handleClose();\n                                            })\n                                      }\n                                  }}>\n\n                            <ListItemText id=\"name\" primary={course['name']} secondary={course['description']}/>\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n            </Box>\n\n      </Dialog>\n\n              {loading?\n                  <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n              <Tooltip className={classes.actionIcon} title={t(\"new_payment\")} aria-label={t(\"new_payment\")}>\n                <IconButton onClick={(e) => {\n                    if (allCourses === null) {\n                        search();\n                    }\n                    setNewCourse(true);\n                }}>\n                  <AddCircleIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              <div className={classes.newLine}>\n\n                  <List className={classes.list}>\n                {courses && courses.map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button onClick={(e) => {\n                            history.push('/courses?id='+course['id']);\n                        }}>\n                            <ListItemText id=\"name\" primary={course.name} secondary={course.description}/>\n                            <ListItemSecondaryAction>\n                                <IconButton onClick={(e) => {\n                                    if (window.confirm(t(\"confirm_unenroll_to_course\"))) deleteStudentCourse(course['id'])\n                                }}>\n                                  <DeleteIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n\n\n\n              {loading &&\n                <Skeleton width=\"100%\" height=\"250px\"/>  // todo we can do better\n              }\n\n              {!loading && courses.length === 0 && !newCourse &&\n                <Typography>{t(\"no_courses\")}</Typography>\n              }\n              </div>\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default Courses;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_courses.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/student_guardians.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.component.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_data/needs.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/userInvites.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/users.service.js",[],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_skeletons/iconButton.js",[],["384","385"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/PreEnrollmentPage/PreEnrollmentPage.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441"],"import React, {useEffect, useState} from 'react';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {\n    Card, CardActions,\n    Checkbox,\n    Dialog,\n    FormControlLabel,\n    MenuItem,\n    Step,\n    StepLabel,\n    Stepper,\n    TextField\n} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {preEnrollmentService} from \"../_services/pre-enrollment.service\";\nimport {authenticationService as signupService} from \"../_services/signup.service\";\nimport {useSnackbar} from \"notistack\";\nimport i18next from \"i18next\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useOnMount} from \"../_helpers/on-mount\";\nimport { useFormikContext } from 'formik';\nimport ReCAPTCHA from \"react-google-recaptcha\"\n\nimport {safe_password_repetition, safe_email, safe_password, safe_username} from \"../_yup/validators\";\nimport DirtyTextField from \"../_components/dirtytextfield.component\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DirtyCountrySelect from \"../_components/contry-select.component\";\nimport {education_years} from \"../_data/education\";\nimport {emptyAttendee} from \"../_data/empty_objects\";\nimport {useNormik} from \"../_helpers/normik\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {act} from \"@testing-library/react\";\nimport {student_guardian_relations} from \"../_data/relations\";\nimport SearchBar from \"../_components/searchbar.component\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport StudentsCourseDataService from \"../_services/student_courses.service\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CoursesDataService from \"../_services/courses.service\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {PUBLIC_URL, RECAPTCHA} from \"../config\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport ThemeButton from \"../_components/theme_button.component\";\nimport Link from \"@material-ui/core/Link\";\nimport TranslateButton from \"../_components/translate_button.component\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\"\n    },\n    field: {\n        width: \"100%\",\n        margin: \"5px\"\n    },\n    cards: {\n        '& > *': {\n            margin: theme.spacing(3),\n        },\n    },\n    buttons: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    }, line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    card: {\n    minWidth: 200,\n        width: 'fit-content',\n        maxWidth: 500,\n        display: 'inline-block'\n  },\n    recaptcha: {\n        margin: theme.spacing(4)\n    },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n    list: {\n        maxHeight: '30vh',\n        minHeight: '150px',\n        overflow: 'auto'\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nconst getLocalisedWeekday = (num) => {\n    let d = new Date();\n    const currentDay = d.getDay();\n    const distance = num - currentDay;\n    d.setDate(currentDay + distance);\n    return d.toLocaleString(window.navigator.language, {weekday: 'short'});\n}\n\nconst isUnderage = (birthDateString) => {\n    let today = new Date();\n    let birthDate = new Date(birthDateString);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    let m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) age--;\n    return age < 18;\n}\nconst PreEnrollmentPage = (props) => {\n    const {t} = useTranslation();\n\n    const can_pay_60 = \"Puc pagar la quota trimestral de 60€/estudiant\";\n     const can_pay_50 =   \"Puc pagar una quota trimestral de 50€/estudiant\";\n     const can_pay_40 =  \"Puc pagar una quota trimestral de 40€/estudiant\";\n\n    const classes = useStyles();\n\n\n    const [recaptcha, setRecaptcha] = React.useState(null);\n    function onChange(value) {\n      setRecaptcha(value);\n    }\n\n\n\n    const {enqueueSnackbar} = useSnackbar();\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [availableCourses, setAvailableCourses] = React.useState([]);\n    const [filteredCourses, setFilteredCourses] = React.useState([]);\n    const [chosenCourses, setChosenCourses] = React.useState([]);\n    const [raw_economic_comments, setRawEconomicComments] = React.useState([]);\n   const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n    const [activeStep, setActiveStep] = React.useState(0);\n      const steps = [t(\"data_protection\"), t(\"student_info\"), t(\"contact_person_1\"), t(\"contact_person_2\"), t(\"courses\"), t(\"confirmation\")];\n\n    const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n      const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n      };\n\n      const handleReset = () => {\n        setActiveStep(0);\n      };\n\n      useOnMount(() => {\n          i18next.changeLanguage('cat').then();\n         preEnrollmentService.getCourses()\n             .then(...errorHandler({}))\n             .then(courses => {\n                 console.log(\"courses...\", courses);\n                 setAvailableCourses(courses);\n                 setFilteredCourses(courses);\n             })\n      });\n\n\n      const [searchTerm, setSearchTerm] = useState('');\n\n    const errorHandler = useErrorHandler();\n    const required = t(\"required\");\n    const formik = useNormik(false,{\n        initialValues: {...emptyAttendee,\n            __person1__name: '', __person2__name: '',\n__person1__surname1: '',\n            __person1__surname2: '',\n            __person1__email: '', __person1__phone: '', __person1__relation: '',\n            __person1__is_studying: '', __person1__is_working: '', __person1__career: '',\n            __person1__education_entity: '', __person1__education_year: '',\n            __person2__surname1: '',\n            __person2__surname2: '',\n            __person2__email: '', __person2__phone: '', __person2__relation: '',\n            __person2__is_studying: '', __person2__is_working: '', __person2__career: '',\n            __person2__education_entity: '', __person2__education_year: '',\n            image_agreement: false\n\n\n        },\n        validationSchema: yup.object({  // todo translate\n            name: yup.string(required).required(required),\n            surname1: yup.string(required).required(required),\n            surname2: yup.string(required).required(required),\n            email: yup.string(required).email(t(\"invalid_email\")).when('birth_date', (other, schema) => ((other && !isUnderage(other))? schema.required(required): schema)),\n            phone: yup.string().when('birth_date', (other, schema) => ((other && !isUnderage(other))? schema.required(required): schema)),\n            address: yup.string(required).required(required),\n            city: yup.string(required).required(required),\n            zip: yup.number(required).required(required),\n            dni: yup.string(required).matches(/^[0-9]{8}[TRWAGMYFPDXBNJZSQVHLCKE]$/i , \"format de DNI invàlid\"),\n            country_of_origin: yup.string(required).notOneOf(['empty']).test(  // one of the array\n                                  'countryNonEmpty',\n                                  required,\n                                  v =>  v !== undefined\n                                ),\n            gender: yup.string(required).required(required),\n            is_studying: yup.boolean(required).required(required),\n            is_working: yup.boolean(required).required(required),\n            career: yup.string(required).when('is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            education_entity: yup.string(required).when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            education_year: yup.string(required).when('is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            birth_date: yup.date(required).required(required),\n            years_in_xamfra: yup.number(required).required(required),\n            __person1__name: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => {\n                                      return v !== undefined && v !== \"\" || isStepSkipped(2)\n                                  }\n                                ),\n            __person1__surname1: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\"|| isStepSkipped(2)\n                                ),\n            __person1__surname2: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(2)\n                                ),\n            __person1__email: yup.string(required).email(t(\"invalid_email\")).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\"||  isStepSkipped(2)\n                                ),\n            __person1__phone: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\" || isStepSkipped(2)\n                                ),\n            __person1__relation: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\"|| isStepSkipped(2)\n                                ),\n            __person1__is_studying: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" ||  isStepSkipped(2)\n                                ),\n            __person1__is_working: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\"|| isStepSkipped(2)\n                                ),\n            __person1__career: yup.string(required).when('__person1__is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person1__education_entity: yup.string(required).when('__person1__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person1__education_year: yup.string(required).when('__person1__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person2__name: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__surname1: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__surname2: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\"|| isStepSkipped(3)\n                                ),\n            __person2__email: yup.string(required).email(t(\"invalid_email\")).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__phone: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\"|| isStepSkipped(3)\n                                ),\n            __person2__relation: yup.string(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>v !== undefined && v !== \"\"|| isStepSkipped(3)\n                                ),\n            __person2__is_studying: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v =>  v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__is_working: yup.boolean(required).test(  // one of the array\n                                  'requiredIfNotSkipped',\n                                  required,\n                                  v => v !== undefined && v !== \"\" || isStepSkipped(3)\n                                ),\n            __person2__career: yup.string(required).when('__person2__is_working', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person2__education_entity: yup.string(required).when('__person2__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            __person2__education_year: yup.string(required).when('__person2__is_studying', {\n                                                  is: true,\n                                                  then: yup.string().required(required)\n                                                }),\n            image_agreement: yup.boolean(required)\n        }),\n        enableReinitialize: true,\n        onSubmit: (values, {setStatus, setSubmitting}) => {\n            setStatus();\n\n            let body = {};\n\n            body['image_agreement'] = values.image_agreement;\n            body['name'] = values.name;\n            body['surname1'] = values.surname1;\n            body['surname2'] = values.surname2;\n            body['email'] = values.email;\n            body['address'] = values.address;\n            body['city'] = values.city;\n            body['zip'] = values.zip;\n            body['dni'] = values.dni;\n            body['phone'] = values.phone;\n            body['country_of_origin'] = values.country_of_origin;\n            body['gender'] = values.gender;\n            body['is_studying'] = values.is_studying;\n            body['is_working'] = values.is_working;\n            body['education_entity'] = values.education_entity;\n            body['education_year'] = values.education_year;\n            body['career'] = values.career;\n            body['birth_date'] = values.birth_date;\n            body['years_in_xamfra'] = values.years_in_xamfra;\n            body['guardians'] = [];\n            [2,3].map(idx => {\n                if (!isStepSkipped(idx)){\n                    let guardian = {};\n                    const prefix = `__person${idx-1}__`;\n                    guardian['name'] = values[prefix+\"name\"];\n                    guardian['surname1'] = values[prefix+\"surname1\"];\n                    guardian['surname2'] = values[prefix+\"surname2\"];\n                    guardian['email'] = values[prefix+\"email\"];\n                    guardian['phone'] = values[prefix+\"phone\"];\n                    guardian['is_studying'] = values[prefix+\"is_studying\"];\n                    guardian['is_working'] = values[prefix+\"is_working\"];\n                    guardian['education_entity'] = values[prefix+\"education_entity\"];\n                    guardian['education_year'] = values[prefix+\"education_year\"];\n                    guardian['career'] = values[prefix+\"career\"];\n                    guardian['relation'] = values[prefix+\"relation\"];\n\n                    body['guardians'].push(guardian);\n                }\n            })\n            body['payment_comments'] = raw_economic_comments.join('. ');\n            if (raw_economic_comments.includes(can_pay_40)){\n                body['price_term'] = 40;\n            } else if (raw_economic_comments.includes(can_pay_50)){\n                body['price_term'] = 50;\n            } else if (raw_economic_comments.includes(can_pay_60)){\n                body['price_term'] = 60;\n            } else {\n                body['price_term'] = null;\n            }\n            body['other_comments'] = values['other_comments'];\n            body['courses'] = chosenCourses.map(x => x.id);\n\n            setSubmitting(false);\n\n            preEnrollmentService.postPreEnrollment(body, recaptcha)\n                .then(...errorHandler({snackbarSuccess: true}))\n                .then(() => {\n                    setActiveStep(steps.length);\n                })\n        }\n    });\n\n    console.log(\"fis\", formik.isSubmitting);\n\n useEffect(() => {\n          let labels = [];\n          if (!isUnderage(formik.values['birth_date']) ){\n              labels.push(\"adult\");\n          }\n          if (formik.values['is_studying']){\n              labels.push(formik.values['education_year']);\n          }\n\n          setFilteredCourses(availableCourses.filter(x => labels.some(l => x['labels'].includes(l))));\n\n      }, [availableCourses, formik.values['education_year'], formik.values['birth_date']]);\n\n\n    const isStepOptional = (step) => {\n    return step === 3 || (step === 2  && formik.values['birth_date'] !== '' && !isUnderage(formik.values['birth_date']));\n  };\n    const fieldsToValidatePerStep = [  // to have coinciding indexes with steps\n        [],\n    ['birth_date', 'name', 'surname1', 'surname2', 'address', 'city', 'zip', 'gender', 'is_studying', 'is_working', 'education_entity', 'education_year', 'career', 'years_in_xamfra', 'country_of_origin', 'phone', 'email'],\n        ['__person1__name', '__person1__surname1', '__person1__surname2', '__person1__email', '__person1__phone', '__person1__phone', '__person1__relation', '__person1__is_studying', '__person1__education_entity', '__person1__education_year', '__person1__is_working', '__person1__career'],\n        ['__person2__name', '__person2__surname1', '__person2__surname2', '__person2__email', '__person2__phone', '__person2__phone', '__person2__relation', '__person2__is_studying', '__person2__education_entity', '__person2__education_year', '__person2__is_working', '__person2__career'],\n    [], ['image_agreement']]\nconst handleNext = () => {\n        formik.setFieldTouched('');\n\n\n            let newSkipped = skipped;\n            if (isStepSkipped(activeStep)) {\n              newSkipped = new Set(newSkipped.values());\n              newSkipped.delete(activeStep);\n            }\n\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            setSkipped(newSkipped);\n\n\n\n      };\n    const themeCtx = React.useContext(themeContext);\n    return (\n        <Box p={5} style={{width: '100%'}}>\n             <TranslateButton style={{float: 'right'}}/>\n                <ThemeButton style={{float: 'right'}}/>\n\n            <Box m={2} style={{textAlign: \"center\"}}>\n        <img src={ `${PUBLIC_URL}/logo_xamfra_${themeCtx.label}.png`} alt=\"Logo Xamfrà\"\n             style={{height: \"85px\"}}/>\n            </Box>\n                <Paper className={`${classes.paper} ${classes.root}`}>\n                   <Box p={2}> <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                      const stepProps = {};\n                      const labelProps = {};\n                      if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\">opcional</Typography>;\n                      }\n                      if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                      }\n                      return (\n                        <Step key={label} {...stepProps}>\n                          <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                      );\n                    })}\n                  </Stepper>\n                    <div>\n        {activeStep === steps.length ? (\n          <div style={{textAlign:\"center\"}}>\n            <Typography>Prematrícula completada amb èxit! | ¡Prematrícula completada con éxito! | Pre-enrolment successful!</Typography>\n          </div>\n        ) : (\n             <form onSubmit={formik.handleSubmit}>\n          <Box m={2}>\n              <div>\n                  {activeStep === 0 &&\n                  <div>\n                      <Typography>\n                          Podeu consultar el quadre horari del curs 20-21 <Link target=\"_blank\" href=\"https://xamfra.net/com-participar-hi/horaris/\">aquí</Link>.\n                      </Typography>\n                      <br/>\n                      <Typography variant={\"caption\"}>\nEnviar aquest formulari implica consentiment per fer ús de les dades per tal de rebre informació durant el període de preinscripció i inici de curs.\n\nLa posterior matrícula presencial al centre implica també l'ús de les dades durant tot el curs 2020-2021.\n\nLa nostra política protecció de dades es basa en que:\n\n1) El Responsable del Tractament de les teves dades personals és de Xamfrà, Centre de Música i Escena del Raval (Fundació l'ARC Música)\n2) Les finalitats del tractament de les dades personals és la de gestionar la teva vinculació amb Xamfrà. La base de dades disposa de noms, telèfons, adreça postal i adreça electrònica.\n3) Les teves dades no seran comunicades a tercers sense previ consentiment.\n4) Pots exercir els drets d'accés, rectificació i oposició segons preveu a la normativa.\n            </Typography>\n\n                  </div>\n                  }\n\n\n\n\n\n                  {activeStep === 1 &&\n                  <div>\n                      <Typography variant=\"h2\">{t(\"student\")}</Typography>\n\n<Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                                noDirty={true}\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                noDirty={true}\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"address\")}\n                                formik={formik}\n                                noDirty={true}\n                                style={{flex: 4}}\n                                name=\"address\"\n                            />\n                            <DirtyTextField\n                                label={t(\"city\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"city\"\n                            />\n                            <DirtyTextField\n                                label={t(\"zip\")}\n                                formik={formik}\n                                type=\"number\"\n                                noDirty={true}\n                                style={{flex: 1}}\n                                name=\"zip\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"dni\")}\n                                style={{flex: 1}}\n                                noDirty={true}\n                                formik={formik}\n                                name=\"dni\"\n                            />\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"phone\"\n                            />\n\n\n\n                        </Box>\n\n\n                      <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyCountrySelect\n                                formik={formik}\n                                style={{flex: 1}}\n                                noDirty={true}\n                                name={\"country_of_origin\"}\n                                label={t(\"country_of_origin\")}\n                            />\n<DirtyTextField\n                                label={t(\"gender\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"gender\"\n                                select>\n                                <MenuItem value=\"m\">{t(\"m\")}</MenuItem>\n                                <MenuItem value=\"f\">{t(\"f\")}</MenuItem>\n                                <MenuItem value=\"nb\">{t(\"nb\")}</MenuItem>\n                            </DirtyTextField>\n                        </Box>\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name=\"is_studying\"\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"school_university\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name=\"education_entity\"\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                noDirty={true}\n                                name=\"education_year\"\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name=\"is_working\"\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                noDirty={true}\n                                name=\"career\"\n                            />\n                        </Box>\n\n                       <Box className={[classes.line, classes.composite]}>\n\n <DirtyTextField\n                                label={t(\"birthdate\")}\n                                type=\"date\"\n                                style={{flex: 1}}\n                                noDirty={true}\n                                formik={formik}\n                                name=\"birth_date\"\n                                InputLabelProps={{shrink: true}}/>\n                            <DirtyTextField\n                              label={t(\"years_in_xamfra\")}\n                              type=\"number\"\n                              noDirty={true}\n                              formik={formik}\n                              style={{flex: 1}}\n                              name=\"years_in_xamfra\"/>\n                        </Box>\n\n\n\n                  </div>\n                  }\n\n\n                  {(activeStep === 2 || activeStep === 3) &&\n                  <div>\n                      <Typography variant=\"h2\">{t(\"contact\") + \" \" + (activeStep - 1)}</Typography>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__name\"}\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__surname1\"}\n                                formik={formik}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name={\"__person\" + (activeStep-1) + \"__surname2\"}\n                                noDirty={true}\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name={\"__person\" + (activeStep-1) + \"__email\"}\n                                noDirty={true}\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n                            <DirtyTextField\n                                label={t(\"phone\")}\n                                type=\"tel\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                noDirty={true}\n                                name={\"__person\" + (activeStep-1) + \"__phone\"}\n                            />\n\n                            <DirtyTextField\n                                label={t(\"relation\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__relation\"}\n                                select\n                                noDirty={true}\n                                formik={formik}\n                            >\n                          {student_guardian_relations.map((r) => (\n                                   <MenuItem key={r} value={r}>{t(r)}</MenuItem>\n                                ))}\n                                ))}\n\n                        </DirtyTextField>\n\n\n\n                        </Box>\n\n\n<Box my={3}>\n            <Divider />\n            </Box>\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"is_studying\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep - 1) + \"__is_studying\"}\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"school_university\")}\n                                style={{flex: 2}}\n                                formik={formik}\n                                name={\"__person\" + (activeStep-1) + \"__education_entity\"}\n                                noDirty={true}\n                            />\n                            <DirtyTextField\n                                label={t(\"education_year\")}\n                                style={{flex: 2}}\n                                noDirty={true}\n                                name={\"__person\" + (activeStep-1) + \"__education_year\"}\n                                formik={formik}\n                                select>\n                                {education_years.map((level) => (\n                                    <MenuItem key={level} value={level}>{t(level)}</MenuItem>\n                                ))}\n                            </DirtyTextField>\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n\n\n                            <DirtyTextField\n                                label={t(\"is_working\")}\n                                style={{flex: 1}}\n                                name={\"__person\" + (activeStep-1) + \"__is_working\"}\n                                formik={formik}\n                                noDirty={true}\n                                select>\n                                <MenuItem value={true}>{t(\"yes\")}</MenuItem>\n                                <MenuItem value={false}>{t(\"no\")}</MenuItem>\n                            </DirtyTextField>\n                            <DirtyTextField\n                                label={t(\"career\")}\n                                style={{flex: 4}}\n                                formik={formik}\n                                noDirty={true}\n                                name={\"__person\" + (activeStep-1) + \"__career\"}\n                            />\n                        </Box>\n\n\n\n\n                  </div>\n                  }\n\n    {activeStep === 4 &&\n    <div>\n\n        <Box className={classes.cards}>\n            {chosenCourses && chosenCourses.map(course => (\n                <Card className={classes.card} raised={true}>\n                  <CardContent>\n\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {course['name']}\n                    </Typography>\n      <Typography className={classes.pos} color=\"textSecondary\">\n                      {course['description']? course['description']: \"...\"}\n                    </Typography>\n                      {  course['base_schedules'] && course['base_schedules'].map(s => (\n                          <Typography variant=\"body2\" component=\"p\">\n                              {getLocalisedWeekday(s.day_week)}, {s.start_time.slice(0, -3)} - {s.end_time.slice(0, -3)}\n                    </Typography>\n                      ))}\n\n\n\n\n                  </CardContent>\n                  <CardActions>\n                      <IconButton size=\"small\" onClick={() => {setChosenCourses(chosenCourses.filter(c => (c !== course)))}}><DeleteIcon/></IconButton>\n                  </CardActions>\n                </Card>\n            ))}\n        </Box>\n\n     <Box my={3}>\n            <Divider />\n            </Box>\n\n         <Box className={classes.box} m={3}>\n                <SearchBar\n                    label={t(\"courses\")}\n                    value={searchTerm}\n                    onChange={(e) => {\n                        setSearchTerm(e.target.value);\n                    }}\n                    onSearch={() => {}}\n                />\n            <List className={classes.list}>\n                {filteredCourses && filteredCourses.filter(x =>\n                    !chosenCourses.includes(x) &&\n                    (x.name.includes(searchTerm) || (x.description !== null && x.description.includes(searchTerm)))).map((course) => (\n                    <div key={course[\"id\"]}>\n                        <ListItem key={course[\"id\"]} button\n                                  onClick={() => {\n                                        setChosenCourses([...chosenCourses, course]);\n                                  }}>\n\n                            <ListItemText id=\"description\" primary={course['name']} secondary={course['description']}/>\n                            {course[\"base_schedules\"] && course[\"base_schedules\"].map(s => (\n                                <ListItemText id=\"schedule\" key={s['id']} secondary={getLocalisedWeekday(s.day_week) + \", \" + s.start_time.slice(0, -3) + \" - \" + s.end_time.slice(0, -3)}/>\n\n                            ))}\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n             {filteredCourses.length === 0 &&\n                <Typography>{t(\"no_courses_found_add_edu\")}</Typography>\n             }\n            </Box>\n    </div>}\n\n  {activeStep === 5 &&\n      <div>\n\n          <Typography>\n                    Xamfrà és un centre que treballa perquè tots els infants i joves puguin fer música, teatre i dansa. Les famílies aporten el que poden per ajudar a fer sostenible el centre. En cap cas, la quota cobreix el cost dels tallers que fan els nens i nenes. Marqueu, si us plau, una o vàries opcions.\n                </Typography>\n          <Typography>\n              IMPORTANT: CAP INFANT O JOVE HA DE DEIXAR DE FER TEATRE, MÚSICA O DANSA A XAMFRÀ PER MOTIUS ECONÒMICS. A QUI NO PUGUI, L'AJUDAREM; I QUI PUGUI AJUDAR: MOLTES GRÀCIES!\n          </Typography>\n\n          {\n              [can_pay_60,\n              can_pay_50,\n              can_pay_40,\n              \"Puc pagar una quota a acordar personalment\",\n              \"No puc pagar la quota trimestral\",\n              \"Puc aportar una segona quota per un altre nen/a (desgravació fiscal)\",\n              \"Puc fer-me teamer (1 €/mes)\",\n              \"Puc fer donatius puntuals (desgravació fiscal)\",\n              \"Puc fer donatius regulars (desgravació fiscal)\",\n              \"Puc ajudar en tasques puntuals\",\n              \"Puc ajudar a la Campanya RISUONA (donació d'instruments)\",\n              \"Puc fer serveis professionals relacionats amb els meus estudis o professió\"].map(option => (\n                  <FormControlLabel\n                        control={\n                            <Checkbox\n                                onChange={(event, checked) => {\n                                    if (checked) {\n                                        raw_economic_comments.push(option);\n                                    } else {\n                                        setRawEconomicComments( raw_economic_comments.filter((x) => x !== option));\n                                    }\n\n                                    }\n                                }\n                            />\n                        }\n                        key={option}\n                        label={option}\n                      />\n              ))\n          }\n\n          <Box my={3}>\n            <Divider />\n            </Box>\n\n          <Box className={[classes.line, classes.composite]}>\n                             <DirtyTextField\n                                label={t(\"other_comments\")}\n                                style={{flex: 1}}\n                                multiline\n                                formik={formik}\n                                rowsMax={8}\n                                noDirty={true}\n                                name=\"other_comments\"\n                            />\n                        </Box>\n\n\n            <Box my={3}>\n            <Divider />\n            </Box>\n          <FormControlLabel\n                        control={\n                            <Checkbox\n                                defaultValue={false}\n                                defaultChecked={false}\n                                checked={formik.values['image_agreement']}\n                                name={'image_agreement'}\n                                value={formik.values['image_agreement']}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                        }\n                        key={'image_agreement'}\n                        label={isUnderage(formik.values['birth_date'])?\n                        \"En cas de matricular-lo, autoritzo l’ús de la imatge de l’estudiant, menor d'edat, per a que pugui aparèixer a materials escrits o multimèdia corresponents a activitats educatives organitzades per Xamfrà.\"\n                        : \"En cas de matricular-me, autoritzo l’ús de la meva imatge per a que pugui aparèixer a materials escrits o multimèdia corresponents a activitats educatives organitzades per Xamfrà.\" }\n                      />\n\n                      <ReCAPTCHA sitekey={RECAPTCHA}\n                                 onChange={onChange}\n                                 theme={themeCtx.theme? \"dark\": \"light\"}\n                                 className={classes.recaptcha}\n                      />\n      </div>\n               }\n\n              </div>\n            <Box m={2} className={classes.buttons}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                  {t(\"back\")}\n              </Button>\n                {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                    {t(\"skip\")}\n                </Button>\n              )}\n\n\n\n\n\n <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={(activeStep === steps.length - 1) || !fieldsToValidatePerStep[activeStep].every(f => (!formik.errors[f]))}\n                  onClick={handleNext}>\n                { t(\"next\")}\n              </Button>\n\n                {activeStep === steps.length - 1 && <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClickCapture={() => {console.log(\"clicked finish\")}}\n                  disabled={formik.isSubmitting || recaptcha===null || !fieldsToValidatePerStep[activeStep].every(f => (!formik.errors[f]))}>\n                { t(\"finish\")}\n              </Button> }\n\n\n\n            </Box>\n              </Box>\n             </form>\n          )}\n                    </div>\n\n\n                </Box></Paper>\n        </Box>\n\n        );\n\n}\n\nexport default PreEnrollmentPage;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/pre-enrollment.service.js",["442"],"import axios from \"axios\";\nimport {authHeader} from \"../_helpers/auth-header\";\nimport {API_VERSION, BACKEND_URL} from \"../config\";\n\nexport const preEnrollmentService = {\n    getCourses,\n    postPreEnrollment\n};\n\nfunction getCourses() {\n        return new Promise(function (resolve, reject) {\n\n            axios({\n                method: 'get',\n                url: `${BACKEND_URL}/pre-enrolment/v1/courses`,\n                headers: {\n                    ...{\n                        'Content-Type': 'application/json',\n                        'Cache-Control': 'no-cache'\n                    }, ...authHeader()  // todo are auth headers needed for gets?\n                }\n            }).then(function (response) {\n                    resolve(response.data);\n                }).catch(function (err) {\n                    reject(err);\n            });\n        });\n    }\n\n\n    function postPreEnrollment(data, recaptcha) {\n        return new Promise(function (resolve, reject) {\n\n            axios({\n                method: 'post',\n                url: `${BACKEND_URL}/pre-enrolment/v1/pre-enrolment`,\n                data: {\n                    body: data,\n                    recaptcha: recaptcha\n                },\n                headers: {\n                    ...{\n                        'Content-Type': 'application/json',\n                        'Cache-Control': 'no-cache'\n                    }, ...authHeader()\n                }\n            }).then(function (response) {\n                    resolve(response);\n                }).catch(function (err) {\n                    reject(err);\n            });\n        });\n    }\n",["443","444"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/payments.component.js",["445","446","447"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {useTranslation} from \"react-i18next\";\nimport PaymentsDataService from \"../_services/payments.service\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n    root2: {\n    display: 'flex',\n  },\n  formControl: {\n      padding: theme.spacing(2),\n        maxHeight: '50vh',\n      overflow: 'auto',\n      minWidth: '40vw'\n  },\n    dialog: {\n\n    },\n  left: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n      position: 'relative',\n\n  },fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  }\n}));\n\n\nexport default function Payments({history, ...other}) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const errorHandler = useErrorHandler();\n\n  return (\n      <div>\n          <h1>{t(\"payments\")}</h1>\n\n      <List className={classes.list}>\n        <ListItem button\n                  onClick={() => {\n                      PaymentsDataService\n                          .downloadCsv(null, '*', null)\n                          .then(...errorHandler({}))\n\n                  }}>\n        <ListItemAvatar>\n            <Avatar className={classes.avatar}>\n                csv\n            </Avatar>\n        </ListItemAvatar>\n        <ListItemText id=\"name\" primary={t(\"export_all\")}/>\n\n    </ListItem>\n    <Divider/>\n    </List></div>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/students.user.component.js",["448","449","450","451","452","453"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\nimport Guardian from \"./students.student.guardian.component\";\nimport UsersDataService from \"../_services/users.service\";\nimport Payments from \"./students.student.payments.component\";\nimport Courses from \"./students.student.courses.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport Schedule from \"./students.student.schedule.component\";\nimport UserPerson from \"./users.user.userperson.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    display: 'flex',\n      flexDirection: 'column'\n  },\n    content: {\n      overflowX: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        flex: 1,\n        height: '100%'\n    },\n    tab: {\n      height: '100%'\n    }\n}));\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\n\nexport default function User(props) {\n  const currentUserId = props.currentStudentId;\n  const deleteUser = props.deleteStudent;\n  const loading = currentUserId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (loading) return setUser(null);\n    UsersDataService\n            .getOne(currentUserId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setUser(res[\"data\"]);\n                });\n  }, [currentUserId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentUserId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                >\n                  <Tab label={t(\"user\")} {...a11yProps(0)} />\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            containerStyle={{height: '100%'}}\n            className={classes.content}\n            onChangeIndex={handleChangeIndex}\n          >\n            <UserPerson value={value}\n                      index={0}\n                      dir={theme.direction}\n                      title={t(\"attendee\")}\n                      currentStudent={user}\n                      updateCurrentStudent={setUser}\n                      deleteStudent={deleteUser}\n            />\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/users.user.userperson.component.js",["454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport {MenuItem, TextField} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport * as yup from 'yup';\nimport {IconButtonSkeleton} from \"../_skeletons/iconButton\"\nimport Person from \"./students.student.person.component\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport UsersDataService from \"../_services/users.service\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DirtyTextField from \"./dirtytextfield.component\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport {sendEnrollmentEmail} from \"../_services/emailsEnrollment.service\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {sendGrantEmail} from \"../_services/emailsGrants.service\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {payment_methods} from \"../_data/payment_methods\";\nimport {emptyAttendee, emptyGuardian} from \"../_data/empty_objects\";\nimport {useNormik} from \"../_helpers/normik\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DirtyCountrySelect from \"./contry-select.component\";\nimport {education_years} from \"../_data/education\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: {\n    float: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n    line: {\n        width: \"100%\",\n        marginTop: theme.spacing(1)\n    },\n    composite: {\n        display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\",\n        gap: theme.spacing(1), width: \"100%\"\n    }\n}));\n\nfunction UserPerson({ children, addStudentId, value, index, newStudent, title, currentStudent, updateCurrentStudent, patchService, deleteStudent, addNewGuardian, ...other }) {\n  const { t } = useTranslation();\n  const loading = currentStudent === null;\n  const classes = useStyles();\n  const errorHandler = useErrorHandler();\n  const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = React.useState(false);\n  const deleteFullStudent = () => {\n    UsersDataService\n              .delete(currentStudent['id'])\n              .then(...errorHandler({snackbarSuccess: true}))  // todo everywhere\n              .then(function (res) {\n                deleteStudent(currentStudent['id']);\n              });\n  }\n\n\n  let initialValues = loading ? {} : currentStudent;\n\n\n    const formik = useNormik(true, {\n        initialValues: initialValues,\n        validationSchema: yup.object({\n            email: yup.string().email(t(\"invalid_email\")),  // todo\n            name: yup.string().required(t(\"name_required\")),\n        }),\n        enableReinitialize: true,\n        onSubmit: (changedValues, {setStatus, setSubmitting}) => {\n\n                if (Object.keys(changedValues).length > 0) {\n                setStatus();\n                UsersDataService.patch({\n                    id: initialValues[\"id\"],\n                    body: changedValues,\n                    initial_values: initialValues\n                }).then(...errorHandler({snackbarSuccess: true}))\n                    .then(function (patched_body) {\n                        formik.resetForm(patched_body);\n                        updateCurrentStudent(patched_body);\n                    }).catch(function (err) {\n                        setStatus(true);\n                    }).finally(() => {\n                        setSubmitting(false);\n                    });\n\n\n            } else {\n                setSubmitting(false);\n            }\n        }\n    });\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      <Dialog\n        open={openConfirmDeleteDialog}\n        onClose={(e) => {setOpenConfirmDeleteDialog(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{t(\"delete_user_question\")}</DialogTitle>\n        <DialogActions>\n          <Button onClick={(e) => {\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\">\n            {t(\"cancel\")}\n          </Button>\n          <Button onClick={(e) => {\n            deleteFullStudent(currentStudent['id']);\n            setOpenConfirmDeleteDialog(false);\n          }} color=\"primary\" autoFocus>\n            {t(\"delete_user\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {value === index && (\n        <Box p={3}>\n            <Box px={2}>\n\n              {loading ?\n                  <IconButtonSkeleton className={classes.actionIcon}/>\n              :\n               <Tooltip style={{float: 'right'}} title={t(\"delete\")} aria-label={t(\"delete\")}>\n                <IconButton onClick={(e) => {\n                  setOpenConfirmDeleteDialog(true);\n                }}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              }\n\n              {loading?\n                (\n\n                    <Box>\n                         <IconButtonSkeleton className={classes.actionIcon}/>\n                       <IconButtonSkeleton className={classes.actionIcon}/>\n\n\n                            <div style={{clear: 'both'}}>\n                               {   [\"100%\", \"100%\", \"100%\"].map((value, idx) => {\n                                return (\n                                    <Box key={idx} py={0} >\n                                        <Skeleton variant=\"text\" width={value} height=\"60px\"/>\n                                    </Box>);\n                            })}\n                            </div>\n                    </Box>\n                )\n                :\n                (\n                    <form onSubmit={formik.handleSubmit}>\n\n\n                        <IconButton className={classes.actionIcon}\n                                     onClick={formik.handleReset}\n                                     disabled={!formik.dirty || formik.isSubmitting}>\n                            <Tooltip title={t(\"reset\")} aria-label={t(\"reset\")}>\n                                <RestoreIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <IconButton className={classes.actionIcon} type=\"submit\"\n                                    disabled={!formik.dirty || formik.isSubmitting}>\n                            <Tooltip title={t(\"save\")} aria-label={t(\"save\")}>\n                                <SaveIcon/>\n                            </Tooltip>\n                        </IconButton>\n\n\n                        <DirtyTextField\n                            label={t(\"id\")}\n                            name=\"id\"\n                            disabled\n                            className={classes.line}\n                            formik={formik}\n                        />\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"name\")}\n                                style={{flex: 1}}\n                                name=\"name\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname1\")}\n                                style={{flex: 1}}\n                                name=\"surname1\"\n                                formik={formik}\n                            />\n                            <DirtyTextField\n                                label={t(\"surname2\")}\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"surname2\"\n                            />\n                        </Box>\n\n                        <Box className={[classes.line, classes.composite]}>\n                            <DirtyTextField\n                                label={t(\"email\")}\n                                type=\"email\"\n                                style={{flex: 1}}\n                                formik={formik}\n                                name=\"email\"\n                                helperText={formik.touched[\"email\"] && formik.errors[\"email\"]}\n                            />\n                        </Box>\n\n                       <Box my={3}>\n            <Divider />\n            </Box>\n\n                    </form>\n                )\n\n            }\n\n\n\n              {\n                // todo user permissions as in dialog\n              }\n            </Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default UserPerson;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.component.js",["474"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {useTranslation} from \"react-i18next\";\nimport Student from \"./students.student.component\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {Tooltip} from \"@material-ui/core\";\nimport ItemsList from \"./items_list.component\";\nimport RoomsDataService from \"../_services/rooms.service\";\nimport Room from \"./rooms.room.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  left: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n      position: 'relative',\n\n  },fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  }\n}));\n\n\nexport default function Rooms({history, ...other}) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [rooms, setRooms] = useState([]);\n  const [newRoom, setNewRoom] = useState(false);\n  const [currentRoomId, setCurrentRoomId] = useState(null);\n\n  const query = new URLSearchParams(window.location.search);\n  const id = query.get('id');\n  useEffect(() => {\n      if (id !== null && id !== undefined) setCurrentRoomId(id);\n  }, [id])\n\n  useEffect(() => {\n      if (currentRoomId !== null) setNewRoom(false);\n  }, [currentRoomId])\n\n  return (\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={4} className={classes.left}>\n          <h1>{t(\"rooms\")}</h1>\n          <ItemsList\n            setCurrentItemId={setCurrentRoomId}\n            currentItemId={currentRoomId}\n            items={rooms}\n            setItems={setRooms}\n            defaultSearchBy=\"name\"\n            displayNameField=\"name\"\n            searchByOptions={[\"name\", \"id\"]}\n            dataService={RoomsDataService}\n            searchBarLabel=\"rooms\"\n          />\n          <Tooltip title={t(\"new_student\")}>\n              <Fab className={classes.fab} color=\"primary\" onClick={(e) => {\n                  setCurrentRoomId(null);\n                 setNewRoom(true);\n              }}>\n                <AddIcon />\n              </Fab>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={8} className={classes.left}>\n          <Room\n            currentRoomId={currentRoomId}\n            newRoom={newRoom}\n            history={history}\n            addRoomId={(id) =>{\n                setCurrentRoomId(id);\n            }}\n            deleteRoom={(studentId) => {\n                if (studentId === currentRoomId) setCurrentRoomId(null);\n\n                setRooms(rooms.filter((s) => s['id'] !== studentId));\n            }}\n          />\n        </Grid>\n      </Grid>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/items_list.component.js",["475"],"import React, {useEffect, useState} from \"react\";\nimport StudentsDataService from \"../_services/students.service\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchBar from './searchbar.component'\nimport Box from \"@material-ui/core/Box\";\nimport {useTranslation} from \"react-i18next\";\nimport {Accordion, AccordionDetails, AccordionSummary, Chip, ListItemSecondaryAction} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExportSearchChip from \"./ExportSearchChip.component\";\nimport UsersDataService from \"../_services/users.service\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flex: 1,\n        overflow: 'auto',\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    list: {\n        overflow: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        minHeight: '150px'\n    },\n    searchAndFilters: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    pagination: {\n        margin: theme.spacing(3)\n    },\n    chip: {\n        margin: theme.spacing(2)\n    },\n    avatar: {},\n    selectedAvatar: {\n        backgroundColor: theme.palette.primary.dark\n    },\n    chips: {\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }\n}));\n\nconst ItemsList = ({setCurrentItemId, currentItemId, items, setItems, displayNameField=\"full_name\",\n                       usableFilters=[], defaultSearchBy=\"full_name\", searchByOptions=[\"full_name\"],\n                        dataService, searchBarLabel, exportPage=true, exportItem=true, exportAllPages=true}) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [filters, setFilters] = useState(usableFilters.reduce((map, f) => {\n        map[f.name] = f.initialValue;\n        return map;\n        }, {})\n    );\n    const [searchBy, setSearchBy] = useState(defaultSearchBy);\n\n    const {t} = useTranslation();\n\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const errorHandler = useErrorHandler();\n\n    const classes = useStyles();\n\n    const onChangeSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    };\n\n    const resetSearchBy = () => {\n        setSearchBy(defaultSearchBy);\n    }\n\n    function getFilters(){\n        return Object.fromEntries(Object.entries(filters).filter(([k,v]) => (v !== null)))\n    }\n\n    function search() {\n        dataService\n            .getAll({name: searchBy, value: searchTerm}, page,\n               [...new Set(['id', displayNameField])], getFilters())\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                setItems(res[\"data\"]);\n                setCount(res[\"_pagination\"][\"totalPages\"]);\n            });\n    }\n\n    // we don't want the search to trigger for each searchTerm change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(search, [page, filters, searchBy]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n    return (\n        <Box className={classes.root}>\n            <Box className={classes.searchAndFilters}>\n                <SearchBar\n                    label={t(searchBarLabel)}\n                    value={searchTerm}\n                    onChange={onChangeSearchTerm}\n                    onSearch={() => {\n                        if (page === 1){\n                            search();\n                        } else {\n                            setPage(1);  // search will be triggered\n                        }\n\n                    }}\n                />\n\n                <Accordion>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                        <Typography className={classes.heading}>{t(\"filters_actions\")}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <Box className={classes.chips}>\n\n                            {exportPage && <ExportSearchChip\n                                searchTerm={searchTerm}\n                                page={page}\n                                dataService={StudentsDataService}\n                                getFilters={getFilters}\n                            />}\n                            {exportAllPages && <ExportSearchChip\n                                searchTerm={searchTerm}\n                                page={page}\n                                dataService={StudentsDataService}\n                                exportAll={true}\n                                getFilters={getFilters}\n                            />}\n\n                            {searchByOptions.map(option => (\n                                <Tooltip key={option} title={`${t(\"search_by\")} ${t(option)}`}>\n                                    <Chip size=\"small\"\n                                          color={searchBy === option ? \"primary\" : \"default\"}\n                                          label={`${t(\"search_by\")} ${t(option)}`}\n                                          onClick={(e) => {\n                                              if (searchBy === option) {\n                                                  resetSearchBy();\n                                              } else {\n                                                  setSearchBy(option);\n                                              }\n                                          }}/>\n                                </Tooltip>\n                            ))}\n\n\n\n                            {usableFilters.map(f => (\n                                f['options'].map(option => (\n                                    <Tooltip key={f.name+option.name}\n                                        title={t(option.tooltip)}\n                                        aria-label={t(option.tooltip)}>\n                                    <Chip size=\"small\"\n                                          color={filters[f.name] === option.name ? \"primary\" : \"default\"}\n                                          label={t(option.label)}\n                                          onClick={(e) => {\n                                              setFilters({...filters, [f.name]: (filters[f.name] === option.name)? null: option.name})\n                                          }}/>\n                                </Tooltip>\n                                    )\n                                )\n                                ))\n                            }\n                        </Box>\n                    </AccordionDetails>\n                </Accordion>\n\n\n                <Box my={2}>\n                    <Pagination\n                        className=\"pagination\"\n                        count={count}\n                        page={page}\n                        size=\"small\"\n                        showFirstButton\n                        showLastButton\n                        siblingCount={1}\n                        boundaryCount={1}\n                        color=\"primary\"\n                        onChange={handlePageChange}\n                    />\n                </Box>\n            </Box>\n            <List className={classes.list}>\n                {items && items.map((item) => (\n                    <div key={item[\"id\"]}>\n                        <ListItem key={item[\"id\"]} button\n                                  onClick={() => {\n                                      setCurrentItemId(item['id']);\n                                  }}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    className={item[\"id\"] === currentItemId ? classes.selectedAvatar : classes.avatar}>{item[displayNameField].charAt(0).toUpperCase()}</Avatar>\n                            </ListItemAvatar>\n                            <ListItemText id=\"name\" primary={item[displayNameField]}/>\n\n                            {exportItem &&\n                            <ListItemSecondaryAction>\n                                <Tooltip title={t(\"export\") + \" .csv\"}>\n                                    <IconButton edge=\"end\" aria-label={t(\"export\")} onClick={(e) => {\n                                        dataService\n                                            .downloadOneCsv(item['id'])\n                                            .then(...errorHandler({}));\n                                    }}>\n                                        <GetAppIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </ListItemSecondaryAction>}\n\n                        </ListItem>\n                        <Divider/>\n                    </div>\n                ))}\n            </List>\n        </Box>\n    );\n};\n\nexport default ItemsList;\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_services/rooms.service.js",[],["476","477"],"/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.room.component.js",["478","479","480","481","482","483"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\";\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Attendee from \"./students.student.attendee.component\";\nimport Guardian from \"./students.student.guardian.component\";\nimport RoomsDataService from \"../_services/rooms.service\";\nimport Payments from \"./students.student.payments.component\";\nimport Courses from \"./students.student.courses.component\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport Schedule from \"./students.student.schedule.component\";\nimport RoomSchedule from \"./rooms.room.schedule.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentPanel: {\n    //flex: 1,\n      position: 'relative', // todo proper scrollbar\n    overflow: \"auto\",\n    boxSizing: \"border-box\",\n      height: '100%', // todo proper,\n    display: 'flex',\n      flexDirection: 'column'\n  },\n    content: {\n      overflowX: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        flex: 1,\n        height: '100%'\n    },\n    tab: {\n      height: '100%'\n    }\n}));\n\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\n\nexport default function Room({history, currentRoomId, deleteRoom, newRoom, addRoomId}) {\n  const loading = currentRoomId === null;\n\n  const errorHandler = useErrorHandler();\n\n  const [room, setRoom] = useState(null);\n\n  useEffect(() => {\n    if (loading) return setRoom(null);\n    RoomsDataService\n            .getOne(currentRoomId)\n            .then(...errorHandler({}))  // todo everywhere\n            .then(function (res) {\n                    setRoom(res[\"data\"]);\n                });\n  }, [currentRoomId])\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n   useEffect(()=>{\n    setValue(0);\n  }, [currentRoomId])\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <Paper elevation={3} square className={classes.contentPanel}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"scrollable\"\n                  scrollButtons=\"on\"\n                >\n                  <Tab label={t(\"room\")} {...a11yProps(0)} />\n\n                    { !newRoom &&\n                  <Tab label={t(\"schedules\")} {...a11yProps(1)} />}\n\n                </Tabs>\n              </AppBar>\n          <SwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            containerStyle={{height: '100%'}}\n            className={classes.content}\n            onChangeIndex={handleChangeIndex}\n          >\n              {\n                  /*\n                   <Attendee value={value}\n                      index={0}\n                      dir={theme.direction}\n                      newStudent={newStudent}\n                      currentStudent={room}\n                      addStudentId={addStudentId}\n                      patchService={StudentsDataService}\n                      updateCurrentStudent={setRoom}\n                      deleteStudent={deleteStudent}\n                      addNewGuardian={() => {\n                        setNewGuardian(true);\n                        setValue(4+guardians.length);\n                      }}\n            />\n\n                  */\n              }\n               <RoomSchedule value={value}\n                      index={0}\n                          history={history}\n                      className={classes.tab}\n                      dir={theme.direction}\n                      scheduleIds={room === null? null: room['schedules']}\n                      student_id={currentRoomId}\n            />\n            <RoomSchedule value={value}\n                      index={1}\n                          history={history}\n                      className={classes.tab}\n                      dir={theme.direction}\n                      scheduleIds={room === null? null: room['schedules']}\n                      student_id={currentRoomId}\n            />\n\n          </SwipeableViews>\n\n    </Paper>\n  );\n}\n","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/scheduler.component.js",["484","485","486","487"],"import {useTranslation} from \"react-i18next\";\nimport Box from \"@material-ui/core/Box\";\nimport React, {useEffect, useState} from \"react\";\nimport SchedulesDataService from \"../_services/schedules.service\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport styled from \"@emotion/styled\";\nimport {useTheme} from '@material-ui/core/styles';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport {useSnackbar} from \"notistack\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    calendar: {\n        margin: theme.spacing(2)\n    }\n\n}));\n\nexport const eventFromSchedule = (theme, schedule) => {\n    return {\n        daysOfWeek: [schedule['day_week']],\n        title: schedule['course']['name'],\n        groupId: [schedule['id']],\n        startTime: schedule['start_time'],\n        endTime: schedule['end_time'],\n        color: schedule[\"is_base\"] ? theme.palette.secondary.main : theme.palette.secondary.light,\n        textColor: schedule[\"is_base\"] ? theme.palette.secondary.contrastText : theme.palette.secondary.contrastText,\n        extendedProps: {\n            schedule: schedule\n        },\n    }\n}\n\nfunction Scheduler({snapDuration = '00:15', scheduleIds, onEventClick, onEventResize, onEventDrop, editable=false, ...other}) {\n    const errorHandler = useErrorHandler();\n    const theme = useTheme();\n    const StyleWrapper = styled.div`\n      .fc-button, .fc-button.fc-button-primary {\n        background: ${theme.palette.primary.main};\n        color: ${theme.palette.primary.contrastText};\n        border-color: ${theme.palette.primary.main};\n        background-image: none;\n    }\n    .fc-button:enabled:hover {\n        background: ${theme.palette.primary.dark};\n        color: ${theme.palette.primary.contrastText};\n        border-color: ${theme.palette.primary.dark};\n        background-image: none;\n    }\n    `\n\n    const [schedules, setSchedules] = useState(null);\n    const loading = scheduleIds === null;\n\n    // todo right click menu to delete\n\n\n    useEffect(() => {\n        if (scheduleIds === null) return;\n\n        if (scheduleIds.length === 0) {\n            setSchedules([]);\n        } else {\n            SchedulesDataService\n                .getMany(scheduleIds)\n                .then(...errorHandler({}))\n                .then(function (res) {\n                    setSchedules(res.map(res => res[\"data\"]).map(schedule => {\n                        return eventFromSchedule(theme, schedule);\n                    }));\n                });\n        }\n    }, [scheduleIds, theme]);\n    const withScheduleInfo = (method, info) => {\n        return method(info,\n            info.event['start'].getDay(),\n            info.event['start'].toLocaleTimeString('en-US', {hour12: false}),\n            info.event['end'].toLocaleTimeString('en-US', {hour12: false}),\n            info.event.extendedProps[\"schedule\"]);\n    }\n\n    return (\n        <Box p={2} style={{height: \"100%\"}}>\n            {loading ? <Skeleton variant=\"rect\" width=\"100%\" height=\"100%\"/>\n                :\n                <StyleWrapper style={{height: \"100%\"}}>\n                    <FullCalendar\n                        plugins={[timeGridPlugin, interactionPlugin]}\n                        initialView=\"timeGridWeek\"\n                        height=\"100%\"\n                        firstDay={1}\n                        editable={editable}\n                        selectable={true}\n                        selectMirror={true}\n                        dayMaxEvents={true}\n                        weekends={true}\n                        snapDuration={snapDuration}\n                        events={schedules}\n                        eventAdd={function () {\n                        }}\n                        eventChange={function (clickInfo) {\n                            // const schedule = clickInfo.event.extendedProps[\"schedule\"];\n                            // if (schedule[\"is_base\"] === true) return enqueueSnackbar(t(\"cant_remove_schedule\"), {'variant': 'warning'});\n                        }}\n                        eventRemove={function () {\n                        }}\n                        select={function (selectInfo) {\n                            // todo proper prompts\n                            /*let title = prompt('Please enter a new title for your event')\n                            let calendarApi = selectInfo.view.calendar\n\n                            calendarApi.unselect() // clear date selection\n\n                            if (title) {\n                                calendarApi.addEvent({\n                                    id: 24,\n                                    title,\n                                    start: selectInfo.startStr,\n                                    end: selectInfo.endStr,\n                                    allDay: selectInfo.allDay\n                                })\n                            }*/\n                        }}\n                        eventContent={function () {\n                        }} // custom render function\n                        eventClick={onEventClick}\n                        eventTimeFormat={{\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            hour12: false\n                        }}\n                        eventResize={(info) => (withScheduleInfo(onEventResize, info))}\n                        eventDrop={(info) => (withScheduleInfo(onEventDrop, info))}\n                    />\n                </StyleWrapper>}\n        </Box>\n    );\n}\n\nexport default Scheduler;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/rooms.room.schedule.component.js",["488","489","490","491","492","493"],"import {useTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport SchedulesDataService from \"../_services/schedules.service\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport {useSnackbar} from \"notistack\";\nimport Scheduler, {eventFromSchedule} from \"./scheduler.component\";\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n    calendar: {\n      margin: theme.spacing(2)\n    }\n\n}));\n\n\nfunction RoomSchedule({ value, history, index, scheduleIds, ...other }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  // todo no minHeight ? and also tabpanel component\n  return (\n    <div\n      role=\"tabpanel\"\n      className={classes.root}\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n        style={{height: '100%', flex: 1, minHeight: \"70vh\" }}\n\n    >\n        <Scheduler\n            onEventClick={function (clickInfo) {  // todo receive schedule\n                           const schedule = clickInfo.event.extendedProps[\"schedule\"];\n                           if (schedule[\"is_base\"]){\n                               history.push('/courses?id='+schedule['course_id']);\n                           } else {\n                               history.push('/?id='+schedule['student_id']);\n                           }\n                       }}\n            scheduleIds={scheduleIds}\n            editable={false}\n        />\n    </div>\n  );\n}\n\nexport default RoomSchedule;","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/ExportSearchChip.component.js",["494","495","496","497","498","499","500"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {useTranslation} from \"react-i18next\";\nimport {Chip} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport UsersDataService from \"../_services/users.service\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {useErrorHandler} from \"../_helpers/handle-response\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  }\n}));\n\nexport default function ExportSearchChip({searchTerm=null, page=null, dataService, exportAll=false, getFilters=null}) {\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n  const errorHandler = useErrorHandler();\n\n  return (\n    <Tooltip title={t(exportAll? \"export_all_csv\": \"export_results_csv\")}\n             aria-label={t(exportAll? \"export_all_csv\": \"export_results_csv\")}>\n        <Chip variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              avatar={<Avatar>csv</Avatar>}\n              label={t(exportAll? \"export_all\": \"export\")}\n              onClick={() => {\n                  dataService\n                    .downloadCsv(searchTerm,\n                        exportAll? \"*\": page,\n                        getFilters === null? {}: getFilters(),\n                                exportAll)\n                    .then(...errorHandler({}))\n\n              }}/>\n    </Tooltip>\n  );\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/theme_button.component.js",["501"],"import Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {useTranslation} from \"react-i18next\";\n\nexport default function ThemeButton({...props}){\n    const themeCtx = React.useContext(themeContext);\n    const {t} = useTranslation();\n\n    return  <Tooltip title={t(\"dark_light_theme\")}  style={{float: 'right'}} {...props}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label={t(\"dark_light_theme\")}\n                    onClick={themeCtx.switchTheme}>\n                    <Brightness4Icon/>\n                </IconButton>\n            </Tooltip>;\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/translate_button.component.js",["502","503","504"],"import Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {useTranslation} from \"react-i18next\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport i18next from \"i18next\";\n\nexport default function TranslateButton({...props}){\n    const {t} = useTranslation();\n\n    return  <Tooltip title={t(\"change_language\")} {...props}>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={() => {\n                                const selectedLan = localStorage.getItem(\"i18nextLng\") || \"cat\";\n                                i18next.changeLanguage(selectedLan === \"eng\"? \"cat\": \"eng\").then();\n                            }}\n                            aria-label={t(\"change_language\")}\n                            aria-haspopup=\"true\">\n                            <TranslateIcon/>\n                        </IconButton>\n\n                    </Tooltip>;\n}","/home/miquelvir/Documents/new/centrifuga4/centrifuga4-frontend/src/_components/not_found.js",["505","506","507","508","509","510","511"],"import Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport {themeContext} from \"../_context/theme-context\";\nimport {useTranslation} from \"react-i18next\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function NotFound({}){\n    const themeCtx = React.useContext(themeContext);\n    const {t} = useTranslation();\n\n    return  <Typography variant=\"h1\">Nope, not found... 👻</Typography>;\n}",{"ruleId":"512","replacedBy":"513"},{"ruleId":"514","replacedBy":"515"},{"ruleId":"512","replacedBy":"516"},{"ruleId":"514","replacedBy":"517"},{"ruleId":"512","replacedBy":"518"},{"ruleId":"514","replacedBy":"519"},{"ruleId":"512","replacedBy":"520"},{"ruleId":"514","replacedBy":"521"},{"ruleId":"522","severity":1,"message":"523","line":8,"column":8,"nodeType":"524","messageId":"525","endLine":8,"endColumn":20},{"ruleId":"526","severity":1,"message":"527","line":6,"column":6,"nodeType":"528","endLine":6,"endColumn":8,"suggestions":"529"},{"ruleId":"512","replacedBy":"530"},{"ruleId":"514","replacedBy":"531"},{"ruleId":"512","replacedBy":"532"},{"ruleId":"514","replacedBy":"533"},{"ruleId":"522","severity":1,"message":"534","line":11,"column":8,"nodeType":"524","messageId":"525","endLine":11,"endColumn":21},{"ruleId":"526","severity":1,"message":"535","line":78,"column":6,"nodeType":"528","endLine":78,"endColumn":18,"suggestions":"536"},{"ruleId":"522","severity":1,"message":"537","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":18},{"ruleId":"522","severity":1,"message":"538","line":5,"column":19,"nodeType":"524","messageId":"525","endLine":5,"endColumn":28},{"ruleId":"522","severity":1,"message":"539","line":10,"column":9,"nodeType":"524","messageId":"525","endLine":10,"endColumn":17},{"ruleId":"522","severity":1,"message":"540","line":30,"column":8,"nodeType":"524","messageId":"525","endLine":30,"endColumn":19},{"ruleId":"522","severity":1,"message":"541","line":35,"column":24,"nodeType":"524","messageId":"525","endLine":35,"endColumn":37},{"ruleId":"526","severity":1,"message":"542","line":72,"column":6,"nodeType":"528","endLine":72,"endColumn":24,"suggestions":"543"},{"ruleId":"522","severity":1,"message":"544","line":6,"column":9,"nodeType":"524","messageId":"525","endLine":6,"endColumn":19},{"ruleId":"526","severity":1,"message":"545","line":43,"column":6,"nodeType":"528","endLine":43,"endColumn":18,"suggestions":"546"},{"ruleId":"512","replacedBy":"547"},{"ruleId":"514","replacedBy":"548"},{"ruleId":"522","severity":1,"message":"549","line":41,"column":11,"nodeType":"524","messageId":"525","endLine":41,"endColumn":20},{"ruleId":"522","severity":1,"message":"550","line":8,"column":8,"nodeType":"524","messageId":"525","endLine":8,"endColumn":22},{"ruleId":"522","severity":1,"message":"551","line":60,"column":11,"nodeType":"524","messageId":"525","endLine":60,"endColumn":12},{"ruleId":"522","severity":1,"message":"552","line":8,"column":9,"nodeType":"524","messageId":"525","endLine":8,"endColumn":16},{"ruleId":"522","severity":1,"message":"553","line":12,"column":31,"nodeType":"524","messageId":"525","endLine":12,"endColumn":37},{"ruleId":"522","severity":1,"message":"554","line":18,"column":9,"nodeType":"524","messageId":"525","endLine":18,"endColumn":29},{"ruleId":"522","severity":1,"message":"555","line":19,"column":30,"nodeType":"524","messageId":"525","endLine":19,"endColumn":38},{"ruleId":"522","severity":1,"message":"553","line":19,"column":47,"nodeType":"524","messageId":"525","endLine":19,"endColumn":53},{"ruleId":"512","replacedBy":"556"},{"ruleId":"514","replacedBy":"557"},{"ruleId":"522","severity":1,"message":"558","line":6,"column":8,"nodeType":"524","messageId":"525","endLine":6,"endColumn":25},{"ruleId":"522","severity":1,"message":"559","line":7,"column":8,"nodeType":"524","messageId":"525","endLine":7,"endColumn":21},{"ruleId":"522","severity":1,"message":"560","line":8,"column":8,"nodeType":"524","messageId":"525","endLine":8,"endColumn":23},{"ruleId":"522","severity":1,"message":"561","line":44,"column":11,"nodeType":"524","messageId":"525","endLine":44,"endColumn":22},{"ruleId":"522","severity":1,"message":"562","line":64,"column":11,"nodeType":"524","messageId":"525","endLine":64,"endColumn":33},{"ruleId":"522","severity":1,"message":"563","line":1,"column":8,"nodeType":"524","messageId":"525","endLine":1,"endColumn":22},{"ruleId":"522","severity":1,"message":"564","line":2,"column":9,"nodeType":"524","messageId":"525","endLine":2,"endColumn":20},{"ruleId":"522","severity":1,"message":"563","line":1,"column":8,"nodeType":"524","messageId":"525","endLine":1,"endColumn":22},{"ruleId":"522","severity":1,"message":"564","line":2,"column":9,"nodeType":"524","messageId":"525","endLine":2,"endColumn":20},{"ruleId":"522","severity":1,"message":"563","line":1,"column":8,"nodeType":"524","messageId":"525","endLine":1,"endColumn":22},{"ruleId":"522","severity":1,"message":"564","line":2,"column":9,"nodeType":"524","messageId":"525","endLine":2,"endColumn":20},{"ruleId":"522","severity":1,"message":"565","line":22,"column":27,"nodeType":"524","messageId":"525","endLine":22,"endColumn":40},{"ruleId":"526","severity":1,"message":"566","line":103,"column":23,"nodeType":"528","endLine":103,"endColumn":64,"suggestions":"567"},{"ruleId":"526","severity":1,"message":"535","line":131,"column":6,"nodeType":"528","endLine":131,"endColumn":17,"suggestions":"568"},{"ruleId":"512","replacedBy":"569"},{"ruleId":"514","replacedBy":"570"},{"ruleId":"522","severity":1,"message":"571","line":2,"column":9,"nodeType":"524","messageId":"525","endLine":2,"endColumn":18},{"ruleId":"522","severity":1,"message":"572","line":7,"column":5,"nodeType":"524","messageId":"525","endLine":7,"endColumn":11},{"ruleId":"522","severity":1,"message":"538","line":13,"column":5,"nodeType":"524","messageId":"525","endLine":13,"endColumn":14},{"ruleId":"522","severity":1,"message":"573","line":16,"column":8,"nodeType":"524","messageId":"525","endLine":16,"endColumn":12},{"ruleId":"522","severity":1,"message":"574","line":24,"column":34,"nodeType":"524","messageId":"525","endLine":24,"endColumn":47},{"ruleId":"522","severity":1,"message":"575","line":29,"column":10,"nodeType":"524","messageId":"525","endLine":29,"endColumn":26},{"ruleId":"522","severity":1,"message":"576","line":32,"column":9,"nodeType":"524","messageId":"525","endLine":32,"endColumn":33},{"ruleId":"522","severity":1,"message":"577","line":32,"column":35,"nodeType":"524","messageId":"525","endLine":32,"endColumn":45},{"ruleId":"522","severity":1,"message":"578","line":32,"column":47,"nodeType":"524","messageId":"525","endLine":32,"endColumn":60},{"ruleId":"522","severity":1,"message":"579","line":32,"column":62,"nodeType":"524","messageId":"525","endLine":32,"endColumn":75},{"ruleId":"522","severity":1,"message":"580","line":39,"column":8,"nodeType":"524","messageId":"525","endLine":39,"endColumn":15},{"ruleId":"522","severity":1,"message":"559","line":41,"column":8,"nodeType":"524","messageId":"525","endLine":41,"endColumn":21},{"ruleId":"522","severity":1,"message":"581","line":42,"column":8,"nodeType":"524","messageId":"525","endLine":42,"endColumn":15},{"ruleId":"522","severity":1,"message":"582","line":43,"column":9,"nodeType":"524","messageId":"525","endLine":43,"endColumn":12},{"ruleId":"522","severity":1,"message":"583","line":46,"column":8,"nodeType":"524","messageId":"525","endLine":46,"endColumn":18},{"ruleId":"522","severity":1,"message":"584","line":49,"column":8,"nodeType":"524","messageId":"525","endLine":49,"endColumn":33},{"ruleId":"522","severity":1,"message":"585","line":51,"column":8,"nodeType":"524","messageId":"525","endLine":51,"endColumn":26},{"ruleId":"522","severity":1,"message":"560","line":55,"column":8,"nodeType":"524","messageId":"525","endLine":55,"endColumn":23},{"ruleId":"522","severity":1,"message":"586","line":145,"column":12,"nodeType":"524","messageId":"525","endLine":145,"endColumn":27},{"ruleId":"522","severity":1,"message":"587","line":176,"column":13,"nodeType":"524","messageId":"525","endLine":176,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":249,"column":62,"nodeType":"590","messageId":"591","endLine":249,"endColumn":64},{"ruleId":"588","severity":1,"message":"589","line":249,"column":74,"nodeType":"590","messageId":"591","endLine":249,"endColumn":76},{"ruleId":"588","severity":1,"message":"589","line":255,"column":57,"nodeType":"590","messageId":"591","endLine":255,"endColumn":59},{"ruleId":"588","severity":1,"message":"589","line":255,"column":68,"nodeType":"590","messageId":"591","endLine":255,"endColumn":70},{"ruleId":"588","severity":1,"message":"589","line":260,"column":56,"nodeType":"590","messageId":"591","endLine":260,"endColumn":58},{"ruleId":"588","severity":1,"message":"589","line":260,"column":68,"nodeType":"590","messageId":"591","endLine":260,"endColumn":70},{"ruleId":"588","severity":1,"message":"589","line":265,"column":55,"nodeType":"590","messageId":"591","endLine":265,"endColumn":57},{"ruleId":"588","severity":1,"message":"589","line":265,"column":66,"nodeType":"590","messageId":"591","endLine":265,"endColumn":68},{"ruleId":"588","severity":1,"message":"589","line":270,"column":55,"nodeType":"590","messageId":"591","endLine":270,"endColumn":57},{"ruleId":"588","severity":1,"message":"589","line":270,"column":67,"nodeType":"590","messageId":"591","endLine":270,"endColumn":69},{"ruleId":"588","severity":1,"message":"589","line":275,"column":56,"nodeType":"590","messageId":"591","endLine":275,"endColumn":58},{"ruleId":"588","severity":1,"message":"589","line":275,"column":67,"nodeType":"590","messageId":"591","endLine":275,"endColumn":69},{"ruleId":"588","severity":1,"message":"589","line":280,"column":56,"nodeType":"590","messageId":"591","endLine":280,"endColumn":58},{"ruleId":"588","severity":1,"message":"589","line":280,"column":68,"nodeType":"590","messageId":"591","endLine":280,"endColumn":70},{"ruleId":"588","severity":1,"message":"589","line":285,"column":56,"nodeType":"590","messageId":"591","endLine":285,"endColumn":58},{"ruleId":"588","severity":1,"message":"589","line":285,"column":67,"nodeType":"590","messageId":"591","endLine":285,"endColumn":69},{"ruleId":"588","severity":1,"message":"589","line":302,"column":55,"nodeType":"590","messageId":"591","endLine":302,"endColumn":57},{"ruleId":"588","severity":1,"message":"589","line":302,"column":67,"nodeType":"590","messageId":"591","endLine":302,"endColumn":69},{"ruleId":"588","severity":1,"message":"589","line":307,"column":56,"nodeType":"590","messageId":"591","endLine":307,"endColumn":58},{"ruleId":"588","severity":1,"message":"589","line":307,"column":68,"nodeType":"590","messageId":"591","endLine":307,"endColumn":70},{"ruleId":"588","severity":1,"message":"589","line":312,"column":57,"nodeType":"590","messageId":"591","endLine":312,"endColumn":59},{"ruleId":"588","severity":1,"message":"589","line":312,"column":68,"nodeType":"590","messageId":"591","endLine":312,"endColumn":70},{"ruleId":"588","severity":1,"message":"589","line":317,"column":56,"nodeType":"590","messageId":"591","endLine":317,"endColumn":58},{"ruleId":"588","severity":1,"message":"589","line":317,"column":68,"nodeType":"590","messageId":"591","endLine":317,"endColumn":70},{"ruleId":"588","severity":1,"message":"589","line":322,"column":57,"nodeType":"590","messageId":"591","endLine":322,"endColumn":59},{"ruleId":"588","severity":1,"message":"589","line":322,"column":68,"nodeType":"590","messageId":"591","endLine":322,"endColumn":70},{"ruleId":"588","severity":1,"message":"589","line":327,"column":55,"nodeType":"590","messageId":"591","endLine":327,"endColumn":57},{"ruleId":"588","severity":1,"message":"589","line":327,"column":66,"nodeType":"590","messageId":"591","endLine":327,"endColumn":68},{"ruleId":"588","severity":1,"message":"589","line":332,"column":57,"nodeType":"590","messageId":"591","endLine":332,"endColumn":59},{"ruleId":"588","severity":1,"message":"589","line":332,"column":69,"nodeType":"590","messageId":"591","endLine":332,"endColumn":71},{"ruleId":"588","severity":1,"message":"589","line":337,"column":56,"nodeType":"590","messageId":"591","endLine":337,"endColumn":58},{"ruleId":"588","severity":1,"message":"589","line":337,"column":68,"nodeType":"590","messageId":"591","endLine":337,"endColumn":70},{"ruleId":"592","severity":1,"message":"593","line":379,"column":27,"nodeType":"594","messageId":"595","endLine":379,"endColumn":29},{"ruleId":"526","severity":1,"message":"596","line":434,"column":10,"nodeType":"528","endLine":434,"endColumn":90,"suggestions":"597"},{"ruleId":"526","severity":1,"message":"598","line":434,"column":29,"nodeType":"599","endLine":434,"endColumn":60},{"ruleId":"526","severity":1,"message":"598","line":434,"column":62,"nodeType":"599","endLine":434,"endColumn":89},{"ruleId":"522","severity":1,"message":"564","line":3,"column":9,"nodeType":"524","messageId":"525","endLine":3,"endColumn":20},{"ruleId":"512","replacedBy":"600"},{"ruleId":"514","replacedBy":"601"},{"ruleId":"522","severity":1,"message":"602","line":1,"column":16,"nodeType":"524","messageId":"525","endLine":1,"endColumn":25},{"ruleId":"522","severity":1,"message":"603","line":1,"column":27,"nodeType":"524","messageId":"525","endLine":1,"endColumn":35},{"ruleId":"522","severity":1,"message":"573","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":12},{"ruleId":"522","severity":1,"message":"604","line":10,"column":8,"nodeType":"524","messageId":"525","endLine":10,"endColumn":16},{"ruleId":"522","severity":1,"message":"605","line":11,"column":8,"nodeType":"524","messageId":"525","endLine":11,"endColumn":16},{"ruleId":"522","severity":1,"message":"606","line":13,"column":8,"nodeType":"524","messageId":"525","endLine":13,"endColumn":16},{"ruleId":"522","severity":1,"message":"607","line":14,"column":8,"nodeType":"524","messageId":"525","endLine":14,"endColumn":15},{"ruleId":"522","severity":1,"message":"608","line":16,"column":8,"nodeType":"524","messageId":"525","endLine":16,"endColumn":16},{"ruleId":"526","severity":1,"message":"542","line":68,"column":6,"nodeType":"528","endLine":68,"endColumn":21,"suggestions":"609"},{"ruleId":"522","severity":1,"message":"537","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":18},{"ruleId":"522","severity":1,"message":"534","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":21},{"ruleId":"522","severity":1,"message":"610","line":5,"column":9,"nodeType":"524","messageId":"525","endLine":5,"endColumn":17},{"ruleId":"522","severity":1,"message":"538","line":5,"column":19,"nodeType":"524","messageId":"525","endLine":5,"endColumn":28},{"ruleId":"522","severity":1,"message":"611","line":6,"column":8,"nodeType":"524","messageId":"525","endLine":6,"endColumn":17},{"ruleId":"522","severity":1,"message":"612","line":8,"column":8,"nodeType":"524","messageId":"525","endLine":8,"endColumn":27},{"ruleId":"522","severity":1,"message":"613","line":13,"column":8,"nodeType":"524","messageId":"525","endLine":13,"endColumn":14},{"ruleId":"522","severity":1,"message":"614","line":14,"column":8,"nodeType":"524","messageId":"525","endLine":14,"endColumn":22},{"ruleId":"522","severity":1,"message":"615","line":16,"column":8,"nodeType":"524","messageId":"525","endLine":16,"endColumn":21},{"ruleId":"522","severity":1,"message":"616","line":17,"column":8,"nodeType":"524","messageId":"525","endLine":17,"endColumn":25},{"ruleId":"522","severity":1,"message":"617","line":27,"column":8,"nodeType":"524","messageId":"525","endLine":27,"endColumn":16},{"ruleId":"522","severity":1,"message":"618","line":28,"column":9,"nodeType":"524","messageId":"525","endLine":28,"endColumn":28},{"ruleId":"522","severity":1,"message":"540","line":29,"column":8,"nodeType":"524","messageId":"525","endLine":29,"endColumn":19},{"ruleId":"522","severity":1,"message":"619","line":31,"column":9,"nodeType":"524","messageId":"525","endLine":31,"endColumn":23},{"ruleId":"522","severity":1,"message":"620","line":32,"column":8,"nodeType":"524","messageId":"525","endLine":32,"endColumn":18},{"ruleId":"522","severity":1,"message":"621","line":33,"column":9,"nodeType":"524","messageId":"525","endLine":33,"endColumn":24},{"ruleId":"522","severity":1,"message":"622","line":34,"column":9,"nodeType":"524","messageId":"525","endLine":34,"endColumn":22},{"ruleId":"522","severity":1,"message":"541","line":34,"column":24,"nodeType":"524","messageId":"525","endLine":34,"endColumn":37},{"ruleId":"522","severity":1,"message":"623","line":38,"column":8,"nodeType":"524","messageId":"525","endLine":38,"endColumn":26},{"ruleId":"522","severity":1,"message":"624","line":39,"column":9,"nodeType":"524","messageId":"525","endLine":39,"endColumn":24},{"ruleId":"522","severity":1,"message":"625","line":5,"column":8,"nodeType":"524","messageId":"525","endLine":5,"endColumn":15},{"ruleId":"522","severity":1,"message":"626","line":22,"column":8,"nodeType":"524","messageId":"525","endLine":22,"endColumn":24},{"ruleId":"512","replacedBy":"627"},{"ruleId":"514","replacedBy":"628"},{"ruleId":"522","severity":1,"message":"604","line":10,"column":8,"nodeType":"524","messageId":"525","endLine":10,"endColumn":16},{"ruleId":"522","severity":1,"message":"605","line":11,"column":8,"nodeType":"524","messageId":"525","endLine":11,"endColumn":16},{"ruleId":"522","severity":1,"message":"606","line":13,"column":8,"nodeType":"524","messageId":"525","endLine":13,"endColumn":16},{"ruleId":"522","severity":1,"message":"607","line":14,"column":8,"nodeType":"524","messageId":"525","endLine":14,"endColumn":15},{"ruleId":"522","severity":1,"message":"608","line":16,"column":8,"nodeType":"524","messageId":"525","endLine":16,"endColumn":16},{"ruleId":"526","severity":1,"message":"542","line":66,"column":6,"nodeType":"528","endLine":66,"endColumn":21,"suggestions":"629"},{"ruleId":"522","severity":1,"message":"630","line":1,"column":9,"nodeType":"524","messageId":"525","endLine":1,"endColumn":23},{"ruleId":"522","severity":1,"message":"631","line":12,"column":9,"nodeType":"524","messageId":"525","endLine":12,"endColumn":20},{"ruleId":"522","severity":1,"message":"632","line":15,"column":7,"nodeType":"524","messageId":"525","endLine":15,"endColumn":16},{"ruleId":"526","severity":1,"message":"535","line":79,"column":8,"nodeType":"528","endLine":79,"endColumn":28,"suggestions":"633"},{"ruleId":"522","severity":1,"message":"634","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":28},{"ruleId":"522","severity":1,"message":"635","line":4,"column":21,"nodeType":"524","messageId":"525","endLine":4,"endColumn":29},{"ruleId":"522","severity":1,"message":"636","line":5,"column":9,"nodeType":"524","messageId":"525","endLine":5,"endColumn":24},{"ruleId":"522","severity":1,"message":"631","line":6,"column":9,"nodeType":"524","messageId":"525","endLine":6,"endColumn":20},{"ruleId":"522","severity":1,"message":"637","line":7,"column":20,"nodeType":"524","messageId":"525","endLine":7,"endColumn":37},{"ruleId":"522","severity":1,"message":"551","line":20,"column":11,"nodeType":"524","messageId":"525","endLine":20,"endColumn":12},{"ruleId":"522","severity":1,"message":"638","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":13},{"ruleId":"522","severity":1,"message":"639","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":17},{"ruleId":"522","severity":1,"message":"640","line":5,"column":8,"nodeType":"524","messageId":"525","endLine":5,"endColumn":18},{"ruleId":"522","severity":1,"message":"641","line":6,"column":8,"nodeType":"524","messageId":"525","endLine":6,"endColumn":18},{"ruleId":"522","severity":1,"message":"626","line":10,"column":8,"nodeType":"524","messageId":"525","endLine":10,"endColumn":24},{"ruleId":"522","severity":1,"message":"642","line":13,"column":8,"nodeType":"524","messageId":"525","endLine":13,"endColumn":11},{"ruleId":"522","severity":1,"message":"643","line":32,"column":9,"nodeType":"524","messageId":"525","endLine":32,"endColumn":16},{"ruleId":"522","severity":1,"message":"642","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":11},{"ruleId":"522","severity":1,"message":"560","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":23},{"ruleId":"522","severity":1,"message":"642","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":11},{"ruleId":"522","severity":1,"message":"644","line":6,"column":9,"nodeType":"524","messageId":"525","endLine":6,"endColumn":21},{"ruleId":"522","severity":1,"message":"580","line":1,"column":8,"nodeType":"524","messageId":"525","endLine":1,"endColumn":15},{"ruleId":"522","severity":1,"message":"640","line":2,"column":8,"nodeType":"524","messageId":"525","endLine":2,"endColumn":18},{"ruleId":"522","severity":1,"message":"560","line":3,"column":8,"nodeType":"524","messageId":"525","endLine":3,"endColumn":23},{"ruleId":"522","severity":1,"message":"642","line":4,"column":8,"nodeType":"524","messageId":"525","endLine":4,"endColumn":11},{"ruleId":"645","severity":1,"message":"646","line":10,"column":34,"nodeType":"647","messageId":"648","endLine":10,"endColumn":36},{"ruleId":"522","severity":1,"message":"649","line":11,"column":11,"nodeType":"524","messageId":"525","endLine":11,"endColumn":19},{"ruleId":"522","severity":1,"message":"551","line":12,"column":12,"nodeType":"524","messageId":"525","endLine":12,"endColumn":13},"no-native-reassign",["650"],"no-negated-in-lhs",["651"],["650"],["651"],["650"],["651"],["650"],["651"],"no-unused-vars","'SettingsIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handler'. Either include it or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["652"],["650"],["651"],["650"],["651"],"'PersonAddIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.",["653"],"'Typography' is defined but never used.","'TextField' is defined but never used.","'Skeleton' is defined but never used.","'ReceiptIcon' is defined but never used.","'emptyGuardian' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'loading'. Either include them or remove the dependency array.",["654"],"'makeStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler' and 'newGuardian'. Either include them or remove the dependency array.",["655"],["650"],["651"],"'studentId' is assigned a value but never used.","'DirtyTextField' is defined but never used.","'t' is assigned a value but never used.","'history' is defined but never used.","'Router' is defined but never used.","'createBrowserHistory' is defined but never used.","'Redirect' is defined but never used.",["650"],["651"],"'CloudDownloadIcon' is defined but never used.","'TranslateIcon' is defined but never used.","'Brightness4Icon' is defined but never used.","'changeTheme' is assigned a value but never used.","'handleLanguageMenuOpen' is assigned a value but never used.","'serviceFactory' is defined but never used.","'API_VERSION' is defined but never used.","'closeSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'courseIds', 'errorHandler', and 'searchTerm'. Either include them or remove the dependency array. If 'setAllCourses' needs the current value of 'courseIds', you can also switch to useReducer instead of useState and read 'courseIds' in the reducer.",["656"],["657"],["650"],["651"],"'useFormik' is defined but never used.","'Dialog' is defined but never used.","'Grid' is defined but never used.","'signupService' is defined but never used.","'useFormikContext' is defined but never used.","'safe_password_repetition' is defined but never used.","'safe_email' is defined but never used.","'safe_password' is defined but never used.","'safe_username' is defined but never used.","'Tooltip' is defined but never used.","'Toolbar' is defined but never used.","'act' is defined but never used.","'Pagination' is defined but never used.","'StudentsCourseDataService' is defined but never used.","'CoursesDataService' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'formik.values'. Either include it or remove the dependency array.",["658"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["650"],["651"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Attendee' is defined but never used.","'Guardian' is defined but never used.","'Payments' is defined but never used.","'Courses' is defined but never used.","'Schedule' is defined but never used.",["659"],"'MenuItem' is defined but never used.","'PropTypes' is defined but never used.","'StudentsDataService' is defined but never used.","'Person' is defined but never used.","'InputAdornment' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'SendIcon' is defined but never used.","'sendEnrollmentEmail' is defined but never used.","'sendGrantEmail' is defined but never used.","'GetAppIcon' is defined but never used.","'payment_methods' is defined but never used.","'emptyAttendee' is defined but never used.","'DirtyCountrySelect' is defined but never used.","'education_years' is defined but never used.","'Student' is defined but never used.","'UsersDataService' is defined but never used.",["650"],["651"],["660"],"'useTranslation' is defined but never used.","'useSnackbar' is defined but never used.","'useStyles' is assigned a value but never used.",["661"],"'SchedulesDataService' is defined but never used.","'useTheme' is defined but never used.","'useErrorHandler' is defined but never used.","'eventFromSchedule' is defined but never used.","'Paper' is defined but never used.","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'Box' is defined but never used.","'classes' is assigned a value but never used.","'themeContext' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'themeCtx' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},"Update the dependencies array to be: [handler]",{"range":"682","text":"683"},"Update the dependencies array to be: [errorHandler, paymentIds]",{"range":"684","text":"685"},"Update the dependencies array to be: [currentStudentId, errorHandler, loading]",{"range":"686","text":"687"},"Update the dependencies array to be: [errorHandler, guardianId, newGuardian]",{"range":"688","text":"689"},"Update the dependencies array to be: [page, setAllCourses, loading, newCourse, searchTerm, errorHandler, courseIds]",{"range":"690","text":"691"},"Update the dependencies array to be: [courseIds, errorHandler]",{"range":"692","text":"693"},"Update the dependencies array to be: [availableCourses, formik.values]",{"range":"694","text":"695"},"Update the dependencies array to be: [currentUserId, errorHandler, loading]",{"range":"696","text":"697"},"Update the dependencies array to be: [currentRoomId, errorHandler, loading]",{"range":"698","text":"699"},"Update the dependencies array to be: [errorHandler, scheduleIds, theme]",{"range":"700","text":"701"},[129,131],"[handler]",[2604,2616],"[errorHandler, paymentIds]",[2230,2248],"[currentStudentId, errorHandler, loading]",[1874,1886],"[errorHandler, guardianId, newGuardian]",[3138,3179],"[page, setAllCourses, loading, newCourse, searchTerm, errorHandler, courseIds]",[3876,3887],"[courseIds, errorHandler]",[19939,20019],"[availableCourses, formik.values]",[2086,2101],"[currentUserId, errorHandler, loading]",[2047,2062],"[currentRoomId, errorHandler, loading]",[2752,2772],"[errorHandler, scheduleIds, theme]"]